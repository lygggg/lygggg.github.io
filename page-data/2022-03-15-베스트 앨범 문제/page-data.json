{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-03-15-베스트 앨범 문제/","result":{"data":{"markdownRemark":{"html":"<h2>프로그래머스 3레벨 베스트 앨범 문제</h2>\n<h3>이해</h3>\n<p>스트리밍 사이트에서 장르 별로 가장 많이 재생된 노래를 두 개씩 모아서\n베스트 앨범을 출시하려고 합니다. 노래는 고유 번호로 구분하며, 노래를 수록하는 기준은\n다음과 같습니다.</p>\n<ol>\n<li>속한 노래가 많이 재생된 장르를 먼저 수록합니다.</li>\n<li>장르 내에서 많이 재생된 노래를 먼저 수록합니다.</li>\n<li>장르 내에서 재생 횟수가 같은 노래중에서는 고유 번호가 낮은 노래를 먼저 수록합니다.</li>\n</ol>\n<p>노래의 장르를 나타내는 문자열 배열 genres와 노래별 재생 횟수를 나타내는 정수 배열\nplays가 주어질 때, 베스트 앨범에 들어갈 노래의 고유 번호를 순서대로 return하세요</p>\n<h3>제한사항</h3>\n<ol>\n<li>genres[i]는 고유번호가 i인 노래의 장르입니다.</li>\n<li>plays[i]는 고유번호가 i인 노래가 재생된 횟수입니다.</li>\n<li>genres와 plays의 길이는 같으며, 이는 1 이상 10,000 이하입니다.</li>\n<li>장르 종류는 100개 미만입니다.</li>\n<li>장르에 속한 곡이 하나라면, 하나의 곡만 선택합니다.</li>\n<li>모든 장르는 재생된 횟수가 다릅니다.</li>\n</ol>\n<h3>계획</h3>\n<p>먼저 genres배열을 돌면서 새로운 배열에 key value값으로 된 {genres :“장르”, playSum: 합}을 계산후 넣습니다.\n그후 새로운 배열에서 value가 가장 높은 key를 찾아서 기존 genres 배열에 있던 값들중에\n가져온 key와 같은 index를 가진 값을들 찾아서 또 새로운 배열 {genres: “장르”, plays: 값, index: index}에 저장하고\n이 배열에서 play를 기준으로 우선순위를 정렬합니다. 만약 plays 값이 같다면 그 같은 값들의 index중 가장 낮은 것을 수록합니다.\n이 과정을 반복합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">bestAlbum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">genres<span class=\"token punctuation\">,</span> plays</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sumArr <span class=\"token operator\">=</span> <span class=\"token function\">getSumAlbum</span><span class=\"token punctuation\">(</span>genres<span class=\"token punctuation\">,</span> plays<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> sortArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  sumArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>playSum <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>playSum\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  sumArr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    genres<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>genres <span class=\"token operator\">===</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sortArr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> genres<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>genres<span class=\"token punctuation\">,</span> plays<span class=\"token operator\">:</span> plays<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> index <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    sortArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>plays <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>playSum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>index <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>index\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>plays <span class=\"token operator\">-</span> a<span class=\"token punctuation\">.</span>plays\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    sortArr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    sortArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSumAlbum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">genres<span class=\"token punctuation\">,</span> plays</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sumHash <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> dupArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>genres<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n  dupArr<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    genres<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e <span class=\"token operator\">===</span> item<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sum <span class=\"token operator\">+=</span> plays<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    sumHash<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> genres<span class=\"token operator\">:</span> e<span class=\"token punctuation\">,</span> playSum<span class=\"token operator\">:</span> sum <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> sumHash\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bestAlbum'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">bestAlbum</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pop'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getSumAlbum'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token function\">getSumAlbum</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pop'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2500</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toEqual</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> genres<span class=\"token operator\">:</span> <span class=\"token string\">'classic'</span><span class=\"token punctuation\">,</span> playSum<span class=\"token operator\">:</span> <span class=\"token number\">1450</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> genres<span class=\"token operator\">:</span> <span class=\"token string\">'pop'</span><span class=\"token punctuation\">,</span> playSum<span class=\"token operator\">:</span> <span class=\"token number\">3100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"베스트 앨범 문제","date":"March 15, 2022"},"id":"17c0f75c-a23c-548b-9e25-889b37fb740a"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-03-15-베스트 앨범 문제/","previous":{"fields":{"slug":"/2022-03-07-계단 오르기 문제/"},"frontmatter":{"title":"계단 오르기 문제","tag":["TDD"],"layout":null}},"next":{"fields":{"slug":"/2022-02-18-다음 큰 숫자/"},"frontmatter":{"title":"프로그래머스 다음 큰 숫자 문제","tag":["TDD"],"layout":null}}}},"staticQueryHashes":["3668704128"]}