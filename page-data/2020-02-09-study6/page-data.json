{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-02-09-study6/","result":{"data":{"markdownRemark":{"html":"<h2>2장 TCP/IP 기초지식</h2>\n<ul>\n<li>TCP/IP - 인터넷을 비롯한 컴퓨터 네트워크에서 널리 이용되는 통신 프로토콜 실제로는 TCP라고 불리는 프로토콜과 IP라고 불리는 프로토콜의 세트다. 4층 모델을 기반으로 기능을 구성하고 있다.</li>\n<li>\n<p>각 층의 동작과 대응하는 주요 프로토콜</p>\n<ul>\n<li>네트워크 인터페이스층 - 직접 연결된 상대와 통신하는 기능을 구현한다. 여기에는 물리적인 장치도 포함되며 구체적으로는 이더넷에 준거하는 네트워크 카드 등이 이층의 기능을 구현한다.</li>\n<li>인터넷층 - 네트워크 인터페이스층을 기반으로 중계 등의 기능을 추가해서 직접 연결되어 있지 않는 대상, 즉 다른 네트워크 내의 대상과 통신할 수 있는 기능을 구현한다.</li>\n<li>트랜스포트층 - 인터넷층에서 구현한 통신 기능을 사용해서 목적에 맞게 통신을 제어한다.</li>\n<li>애플리케이션 - 개별 애플리케이션 기능을 구현한다. 구체적으로는 HTTP, SMTP, POP3, IMAP4 등 각 애플리케이션을 위한 프로토콜이 해당한다.</li>\n</ul>\n</li>\n<li>TCP는 데이터의 확인이나 재전송 등을 수행하며 신뢰도가 높은 통신을 구현하는 프로토콜이다.</li>\n<li>UDP는 통신을 가볍게 처리하도록 해서 실시간 성격이 큰 통신을 구현한다.</li>\n</ul>\n<h3>네트워크 인터페이스층</h3>\n<ul>\n<li>네트워크 인터페이스층의 역할 - 네트워크용 하드웨어에 직접 연결되어 있는 컴퓨터끼리 서로 통신할 수 있도록 하는 기능을 구현한다. 이 층이 담당하는 것은 어디까지나 직접 연결되어 있는 컴퓨터 간의 통신이다.</li>\n<li>\n<p>네트워크 인터페이스층의 주요 프로토콜</p>\n<ul>\n<li>대표적인 프로토콜은 이더넷이다. 일반적으로 판매되고 있는 유선 LAN은 거의 대부분이 이 이더넷을 사용하고 있다. 또한 무선을 사용해서 LAN 기능을 취하는 WI-FI도 이 층의 기능이다.</li>\n<li>PPPoE는 이더넷을 사용해서 1대1의 접속을 하게하는 프로토콜로, 인증 기능이 인터넷 접속 서비스의 이용자에 인증에 만힝 사용된다.</li>\n<li>ARP/RARP IP주소와 MAC주소를 서로 교환하기 위한 프로토콜. 이더넷이나 WIFI 위에서 사용된다.</li>\n</ul>\n</li>\n</ul>\n<h3>인터넷층의 역할</h3>\n<ul>\n<li>인터넷층은 인터 네트워킹, 다시 말하면 복수개의 네트워크를 연결해서 서로 패킷을 교환하는 기능을 구현한다.</li>\n<li>이 층에서 가장 큰 역할을 하는 것이 패킷 중계 기능이다. 패킷을 중계해서 소정의 방향으로 전송하는 것을 라우팅이라고 한다.</li>\n<li>인터넷층의 주요 프로콜은 IP이다. 네트워크 전반에 걸쳐 컴퓨터를 각각 식별하기 위한 주소로, IP주소를 사용한다. 중복이 허용되지 않는다.</li>\n</ul>\n<h3>트랜스포트층의 역할</h3>\n<ul>\n<li>인터넷층이 만들어낸 임의의 컴퓨터끼리의 통신 기능을 기반으로 해서 네트워크의 사용 목적에 따른 특성을 가진 통신을 구현한다.</li>\n<li>대표적인 프로토콜중 하나가 TCP는 신뢰도가 높은 통신을 구현하는 프로토콜이다. 통신을 시작하는 데 있어서 먼저 대상끼리 연결시켜야 한다. UDP는 통신의 신뢰도를 높이는 작업은 전혀 하지 않지만 발 사용할 수 있는 가벼운 통신 기능을 제공한다.</li>\n</ul>\n<h3>TCP</h3>\n<ul>\n<li>대상이 응답을 하든 말든 일정 범위까지 마음대로 데이터를 보내는 방법을 채택하며 신뢰도가 높고 효율이 좋은 통신을 구현한다.</li>\n<li>신뢰도가 높은 기능은 대부분 슬라이딩 윈도우라고 불리는 구조로 구현된다.</li>\n<li>3-웨이 핸드쉐이크라고 불리는 방법을 사용한다.</li>\n</ul>\n<h3>애플리케이션층의 역할</h3>\n<ul>\n<li>개별 애플리케이션이 갖고 있는 기능을 구현하는 층이다.</li>\n<li>트랜스포트층이 만들어내는 ‘목적에 맞는 통신 기능’ 중에서 애플리케이션에 적합한 것을 골라서 이를 사용하여 애플리케이션끼리 데이터를 주고받는다.</li>\n<li>\n<p>애플리케이션층의 주요 프로토콜</p>\n<ul>\n<li>HTTP</li>\n<li>SMTP</li>\n<li>POP3</li>\n<li>IMAP4</li>\n<li>FTP</li>\n<li>SSH</li>\n<li>DNS</li>\n<li>NTP</li>\n</ul>\n</li>\n</ul>\n<h3>레이어별 처리와 패킷의 관계</h3>\n<ul>\n<li>통신처리에 필요한 각종 정보를 데이터 본체 앞에 추가한다. 이것을 헤더라고 부른다. 이 전체를 하위층에 넘기고 자신의 처리를 종료한다.</li>\n<li>하위층을 거칠수록 패킷의 전체 크기는 커진다.</li>\n<li>데이터를 받는 측에서는 하위층에서 받은 패킷에 포함된 헤더 부분의 정보를 사용해서 필요한 정보를 처리한다. 처리가 끝나면 헤더 부분을 제거하고 데이터를 상위층으로 넘긴다.</li>\n</ul>\n<h3>IP주소</h3>\n<ul>\n<li>IP 주소는 IP라고 불리는 프로토콜을 사용하는 네트워크에서 각 컴퓨터를 식별하기 위해 컴퓨터에 부여된 번호다.</li>\n<li>현재 사용되고 있는 주소는 IPv4, IPv6가 있다.</li>\n<li>IP주소에는 클래스라는 개념이 있다. A~E까지 있으며, 일반적인 주소는 A~C이고 D~E는 특수한 용도로 사용된다. 클래스 차이는 한개의 네트워크 주소 안에서 몇대의 컴퓨터를 구별 할 수 있는가 이다.</li>\n<li>IP 주소의 네트워크부에 해당하는 부분을 1로 한 비트의 나열을 넷마스트라고 한다.</li>\n</ul>\n<h3>포트번호</h3>\n<ul>\n<li>포트 번호는 트랜스포트층에서 TCP 또는 UDP가 제공하는 기능이 대상이 갖고있는 어떤 기능과 접속할지 지정하기 위해 사용한다. 둘다 사용함으로써 어떤 컴퓨터의 어떤 기능의 사용과 같은 형식으로 지정할 수 있게 된다.</li>\n<li>트랜스포트층 프로토콜로 TCP를 이용하는 통신에서는 통신을 시작할 때 연결하기 위해 대상의 IP주소에 맞춰서 대상의 서비스를 특정하는 포트 번호를 지정한다.</li>\n</ul>\n<h3>서브넷화와 서브넷마스크</h3>\n<ul>\n<li>작은 네트워크로 나눠서 이들을 연결하는 구성을 서브넷화라고 한다.</li>\n<li>서브넷화하는 경우의 넷마스크를 서브넷 마스크라고 부른다.</li>\n</ul>\n<p>유니캐스트 - IP 프로토콜을 이용한 1대1 통신을 말한다.</p>\n<p>브로드캐스트 - 동일한 이더넷에 접속해있는 컴퓨터를 전체로 데이터를 보내는 통신을 브로드캐스트라고 한다.</p>\n<p>멀티캐스트 - 어떤 그룹에 포함된 특정 컴퓨터에 한정해서 데이터를 보내는 것이다.</p>\n<p>허브 - 데이터 전송 기능만을 가진 단순한 물건</p>\n<p>스위치 - 데이터 전송 기능과 각종 관리기능이나 VLAN기능을 가진 것.</p>\n<p>허브/스위치 - 이더넷 신설이나 확장에 사용되는것</p>\n<p>라우터 - 네트워크의 중심적인 역할을 담당하는 기기다. 네트워크층의 프로토콜인 IP로 IP패킷을 전송하는 동작을 한다. 사용법 관점에서 보면 ‘서로 독립되어 있는 이더넷 네트워크 사이에서 양쪽의 패킷을 중계하는 것’ 이다.</p>\n<h2>3장 TCP/IP 통신구조</h2>\n<ul>\n<li>가변길이 서브넷 마스크 - 서브넷 별로 서브넷마스크의 길이를 다르게 할 수 있는 기술.</li>\n<li>CIDR - 네트워크부를 짧다고 간주함으로써 여러 개의 네트워크로의 전송에대해 한 개의 전송 규칙으로 맞출 수 있는 기술</li>\n<li>APR - 브로드캐스트가 사용된다. 물리적으로 연결되어 있는 컴퓨터 전체에 보내진다. 각 컴퓨터는 자신의 IP 주소와 비교해 다르면 무시하고 같으면 자신이 사용하고 있는 MAC 주소를 돌려 보낸다.</li>\n<li>도메인명 - 숫자 IP는 인간이 기억하기 어렵다. 그래서 네트워크상의 컴퓨터 명칭으로 도메인명을 사용한다.</li>\n<li>라우팅 - 라우터로 패킷을 전송하는 것. 패킷을 받으면 그 수신처로 표시된 IP주소에 서브넷마스크를 적용해서 네트워크 주소를 추출한 후 라우팅 테이블에서 그 네트워크에 관한 규칙을 찾고 규칙에 따라 전송한다.</li>\n<li>라우팅 테이블 - 수신처의 네트워크와 그 네트워크에 대한 발송 방법이 등록되어 있다.</li>\n<li>기본 게이트웨이 - 자신이 소속된 네트워크 이외에 보내려는 패킷에 대해 어디로 보내면 좋을지 정보를 갖고 있지 않는 때의 전송처다.</li>\n<li>정적 라우팅 - 고정된 라우팅 테이블을 사용해서 라우팅하는 형태</li>\n<li>동적 라우팅 - 네트워크의 접속 라우터에 관한 정보를 라우터끼리 정기적 또는 필요에 따라 서로 교환하여 그 정보를 기반으로 라우팅 테이블을 자동으로 관리하는 것.</li>\n<li>라우팅 프로토콜 - 라우팅 테이블을 동적으로 갱신하는 동적 라우팅에서 사용하는 프로토콜</li>\n<li>DHCP서버 - 네트워크에 접속되어 있는 컴퓨터에 대해 필요한 네트워크 설정 정보를 자동으로 배포하기 위한 구조다.</li>\n<li>NAT - 몇 개의 전역 IP주소를 라우터에 할당해두고 LAN 내의 컴퓨터가 인터넷에 접속할 때에 이 중 하나를 이용해서 통신하는 방법이다.</li>\n<li>NAPT의 동작 - IP주소의 변환과 동시에 포트 번호도 변환하는 것으로 한 개의 전역 IP 주소를 여러 대의 컴퓨터에서 공용으로 사용 할 수 있도록 하는 기술</li>\n</ul>\n<h2>4장 네트워크 기기와 가상화</h2>\n<ul>\n<li>이더넷 - 전 세계에서 폭넓게 이용되고 있는 네트워크 규격</li>\n<li>캐스케이드 - 허브/스위치를 몇 단계 접속하는 것</li>\n<li>프레임 - 이더넷 접속을 작게 분할해서 만드는 형태.</li>\n<li>L2 스위치 - 받아들인 이더넷 프레임의 수신처로 MAC 주소를 알아내서 그 MAC주소를 가진 컴퓨터가 접속되어 있는 포트로, 이더넷 프레임을 송출한다.</li>\n<li>L3 스위치 - 레이어3, 즉 IP 패킷을 처리하는 스위치 L3스위치에 문제가 생기면 라우팅 기능과 스위치 기능 양쪽 다 못쓰게 된다.</li>\n<li>무선 LAN - LAN 케이블 대신 무선을 사용해서 네트워크에 접속하는 기술 유선보다 보안이 약하며, 안정성이나 속도가 떨어진다.</li>\n<li>VLAN - 물리적으로는 한 개의 네트워크를 논리적으로 여러 개의 네트워크로 분할하는 기술을 말한다.</li>\n<li>VPN - 인터넷 등 기존 네트워크 내에 새로운 가상 네트워크를 만드는 기술이다.</li>\n<li>터널 - VPN에서 가장 중요한 기술, 어떤 통신회선 내에 만들어낸 가상통신회선이다.</li>\n<li>가상화 - 물리적인 네트워크나 컴퓨터를 사용해서 논리적인 네트워크나 컴퓨터를 만들어내는 기술. EX) 클라우드 컴퓨팅</li>\n<li>클라우드 - 이용자가 직접 Web 화면 등을 통해 컴퓨터, 네트워크, 각종 서비스를 자유롭게 조합해서 필요한 시스템이나 서비스를 구성한 후 이걸 네트워크에 경유하여 이용할 수 있다.</li>\n<li>Iass - 가상화된 컴퓨터나 네트워크를 제공한다.</li>\n<li>PasS - Iass를 기반으로 시스템을 구성하는데 필요한 각종 기능을 제공한다</li>\n<li>Saas - Iass나 PaaS를 기반으로 네트워크를 통해 준비된 소프트웨어를 제공한다.</li>\n</ul>\n<h2>5장 네트워크 서비스</h2>\n<ul>\n<li>하이퍼텍스트 - 이 하이퍼링크를 따라가면 여러 개의 문서를 연관 지어서 전체적으로 거대한 정보를 나타낼 수 있다.</li>\n<li>URL - Web에 존재하는 문서나 각종 파일의 위치를 표시할때 사용된다.</li>\n<li>정적 콘텐츠 - 미리 만들어진 것을 읽어들이는것</li>\n<li>동적 콘텐츠 - 요청이 올 때 마다 프로그램이 동작해서 정보를 만들어 내는 것.</li>\n<li>HTTP - Web서버와 Web 클라이언트간에 Web 정보를 주고받기 위한 프로토콜 매우 단순하고 요청 한번에 응답 한번을 되돌려준다는 규칙이 있다.</li>\n<li>요청과 응답 - HTTP요청을 TCP/IP 서버에 보내면 서버는 이걸 받아서 요청 내용을 처리하고 결고라를 HTTP 응답으로 보낸다.</li>\n<li>HTTPS - HTTP에서 통신을 안전하게 보호하기 위한 구조</li>\n<li>SSL/TLS - 대상의 특정 인증이나 암호키를 교환, 정보의 암호화에 사용하는 각 알고리즘을 여러 개 중에서 선택한다.</li>\n<li>SMTP - 전자메일 전송에 사용되는 프로토콜이다.</li>\n<li>POP3/IMAP4 - 메일함을 읽는 프로토콜</li>\n<li>FTP - 파일을 전송하기 위한 프로토콜이다. 예전부터 사용되고 있는 프로토콜중 하나이며, 지금도 계속 사용되고 있다. 액티브 모드와 패시브 모드가 있다.</li>\n<li>SSH - 서버나 네트워크에 기기에 접속해서 대상을 CUI로 조작하는 데 사용하는 프로토콜 및 그걸 하기 위한 프로그램의 명칭이다. 공개키 인증 기능을 지원한다.</li>\n<li>DNS - IP 주소보다 도메인명이 더 기억하기 쉽다. 도메인명과 IP 주소의 상호 교환을 이름 분석이라고 한다.</li>\n<li>NTP - 네트워크에 연결된 컴퓨터의 시간을 맞추기 위한 프로토콜</li>\n<li>\n<p>HTTP 프록시 주요기능</p>\n<ul>\n<li>콘텐츠의 캐시</li>\n<li>바이러스 검출이나 부정 침입 장비</li>\n<li>유해 사이트 차단</li>\n</ul>\n</li>\n<li>REST API - HTTP를 사용해서 네트워크 경유로 기능을 호출하거나 XML이나 JSON으로 결과를 돌려주는 형태를 말한다.</li>\n</ul>\n<h2>7장 네트워크 구축과 운영</h2>\n<ul>\n<li>설계의 중요성 - 한번 제대로 설계를 해두면 지금의 요구사항을 만족시킬 뿐만 아니라 향후의 요구사항에도 대응할 수 있으며 생명이 긴 네트워크를 만들 수 있다.</li>\n<li>설계의 절차 - 이용현황조사 -> LAN 구성 설계 -> WAN 구성 설계 -> 보안 설계 -> 모니터링 설계</li>\n<li>서브넷 구성 - 조직의 네트워크는 매우 소규모인 경우를 제외하고 전체를 하나의 네트워크로 구성하지 않는다. 그리고 일반적으로는 동일한 부서를 서브넷 하나로 묶는다.</li>\n<li>IP 주소 할당 - 각 서브넷에 네트워크 주소를 할당한다. 보통 할당 되는 것은 사설 IP 주소다. 이때 부서별 단말에 맞춰 IP 주소에 충분한 여유가 있도록 서브넷 마크스를 결정한다.</li>\n<li>클라우드 - 온프레미스와는 달리 클라우드 서버는 계약 후에도 사양의 일부를 자유롭게 변경할 수 있다.</li>\n<li>온프레미스 - 조직 내에 서버를 둔다. 설치 장소가 준비 되어 있어야 한다.</li>\n<li>방화벽의 DMZ 설정 - 안전한 공조와 전원을 확보할 수 있는 공간에 서버를 둠과 동시에 방화벽에 DMZ를 설정해서 여기에 서버를 연결시킨다.</li>\n<li>워크그룹 - 동일한 워크그룹몇으로 설정되어 있는 컴퓨터 무리이며 컴퓨터의 목록이나 각 컴퓨터에 준비된 공유폴터 목록 등을 볼 수 있다.</li>\n<li>디렉토리 서비스 - 컴퓨터나 네트워크 기기의 소재, 고유정보, 설정 등의 대응 정보를 축적시켜두고 그걸 제공하는 서비스를 디렉토리 서비스라고 부른다.</li>\n<li>\n<p>대표적인 디렉토리 서비스</p>\n<ul>\n<li>Open LDAP</li>\n<li>Active Directory</li>\n<li>Open Directory</li>\n</ul>\n</li>\n<li>브로드캐스트 스톰 - 라우터를 여러 개 만들면 브로드캐스트가 멈출 수 없게되고 네트워크 과부하를 높이는 현상이 일어나는 것을 말한다.</li>\n<li>스패닝 트리 프로토콜 - 이것을 사용하면 스위치에서 루프가 발생한 포트를 무효로 해줘서 이로 인해 브로드캐스트 스톰을 방지한다.</li>\n<li>네트워크 모니터링 - 네트워크가 정상적을 동작하고 있는지 여부를 검사하는 것 EX) 사활감시, 상태감시</li>\n<li>트러블 슈팅 - 트러블 발생시 분리를 하는 것 오류가 있는 요소를 좁혀 나가면서 특정하는 것.</li>\n</ul>","frontmatter":{"title":"그림으로 배우는 네트워크 구조 스터디 2회차 내용정리","date":"February 09, 2020"},"id":"2f4ad5c6-dd11-5c64-81a3-9ee6adc47073"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2020-02-09-study6/","previous":{"fields":{"slug":"/2020-02-02-study5/"},"frontmatter":{"title":"웹을 지탱하는 기술 스터디 4회차","tag":["Study"],"layout":null}},"next":{"fields":{"slug":"/2020-02-15-study7/"},"frontmatter":{"title":"3분 네트워크 책 스터디 내용정리","tag":["Study"],"layout":null}}}},"staticQueryHashes":["3668704128"]}