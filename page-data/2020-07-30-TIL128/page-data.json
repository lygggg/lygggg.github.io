{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-07-30-TIL128/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>레벨 3 여행경로 문제를 풀었다. 약간의 도움을 받긴했지만, 재귀함수가 익숙해졌다는 느낌이 들어서 뿌듯했고, 그전에 풀지 못해던 문제를 오늘 풀 수 있게 되어서 기분이 좋았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘은 알고리즘을 푸는데 시간을 오래 쓴 것 같다. 그래도 dfs문제를 풀수있다는 자신감이 생겨서 좋다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>자바에서도 람다 표현식을 사용할 수가 있다. 하지만 자바는 거의 모든 것이 객체인 객체 지향 어어다. 자바에는 함수 타입이 없다. 그 대신 객체(특정 인터페이스를 구현하는 클래스의 인스턴스)로 함수를 표현한다. 람다는 이런 인스턴스를 생성하는 아주 편리한 문법을 제공한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Runnable task = () -&gt; { for (int i = 0; i &lt; 1000; i++) dowork(); }\nlist.removeIf(e -&gt; e ==null);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Future Action</h2>\n<ul>\n<li>앞으로 아침에는 2~3시간 알고리즘 푸는시간을 가지고, 나머지 시간을 책을 읽으면서 직접 쳐보면서 이해하고, 읽은 책의 내용을 토대로 넥스트스텝을 처음부터 다시 구현하도록 해야겠다.</li>\n</ul>","frontmatter":{"title":"2020-07-30 TIL","date":"July 30, 2020"},"id":"5405675b-ba0b-565c-82a4-1fa8e03c7d8d"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"Your Disqus-short-name here"}}}},"pageContext":{"slug":"/2020-07-30-TIL128/","previous":{"fields":{"slug":"/2020-07-28-TIL127/"},"frontmatter":{"title":"2020-07-28 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2020-08-04-TIL129/"},"frontmatter":{"title":"2020-08-04 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}