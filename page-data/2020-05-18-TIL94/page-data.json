{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-05-18-TIL94/","result":{"data":{"markdownRemark":{"html":"<h2>Facts</h2>\n<ul>\n<li>배포후 장바구니에서 삭제가 되지않던 문제가 발생해서, 차례대로 어디서 문제가 생기는지 확인한 후 delete를 useparams로 데이터를 전달받아서 문제를 해결했습니다.</li>\n<li>dotenv 환경변수를 사용해서 로컬, 서버용 env파일을 따로 만들어서 웹팩의 기능을 사용해 명령어에 따라 필요한 주소를 불러올 수 있도록 구현했습니다.</li>\n<li>github Actions 을 사용해서 git push를 하면 자동으로 클라이언트가 배포가되도록 하려고 했지만 방법을 찾고있습니다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>공식문서를 보면서 남들보다 문서를 읽는 속도가 느린 것 같아서 영문서를 읽는 연습을 많이 해야겠다고 느꼈습니다.</li>\n<li>불편함이 보이면 한순간이 편하기위해 넘어가지 말고 어떻게 불편함을 없앨지 생각하고 해결하는 능력을 길러야겠습니다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>.gitignore 파일에 제외 파일을 설정하고 git add를 했더니 내가 제외한 파일이 깃허브에 올라가있는 것을 발견했습니다. 원인을 알아보던중 github에 남아있던 캐시때문에 코드를 수정해도 변경되지 않았던 이유를 알고 수정했습니다. git rm —cached <fileName></li>\n<li>로컬에서 테스트할때의 URL과 서버에서 통신하는 URL을 나눈상태에서 로컬에서 사용하고 싶을때 내가 일일히 코드를 수정해야하는 작업을 가끔 인지하지 못해서 발생하는 약간의 시간소모 때문에 dotenv와 webpack을 사용해서 명령어 하나로 서버와 로컬의 URL을 편하게 변경 할 수 있도록 구현했습니다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>반응형 웹 완성하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"title":"2021-05-18 TIL","date":"May 18, 2021"},"id":"52e98d1c-1fc2-5d08-8fcf-b714cd4f88ef"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"Your Disqus-short-name here"}}}},"pageContext":{"slug":"/2020-05-18-TIL94/","previous":{"fields":{"slug":"/2020-05-15-TIL93/"},"frontmatter":{"title":"2021-05-15 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2020-05-19-TIL95/"},"frontmatter":{"title":"2021-05-19 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}