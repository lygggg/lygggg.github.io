{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-02-02-TIL157/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>자바스크립트 짤봇 미션완료</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Throttle, Debounce 둘 다 Dom 이벤트를 기반으로 실행하는 자바스크립트를 성능상의 이유로 JS의 양적인 측면, 즉 이벤트를 제어하는 기법이다. 예를 들어 사용자가 스크롤을 드래그한다고 가정하면, 이 행위로 인해 수많은 스크롤 이벤트가 발생할 수 있다. 나 같은 경우는 짤봇 검색기 과제를 진행하던 중 엔터를 치지 않더라도 결괏값을 나오게 하려고 하다가 문장이 완성이 되지도 않았는데 수많은 request를 보내는 것을 콘솔로 확인했다. 이러한 문제들을 Throttle, Debounce를 사용하면 해결할 수 있다. 하지만 두 개에 차이점이 존재한다 Debounce는 이벤트를 그룹화하여 특정 시간이 지난 후 하나의 이벤트만 발생하도록 하는 기술이고, Throttle은 이벤트를 일정한 주기마다 발생하도록 하는 기술이다. Debounce는 여러 번의 request 문제 중 해당 시간이 지난 마지막 이벤트만 사용하는 방법이고, Throttle은 스크롤을 내리거나 애니메이션을 줄 때 발생하는 정기적인 이벤트에 사용하는 방법이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">let timer\nsearchInput.addEventListener(&#39;keydown&#39;, function (e) {\n    if (e.target.className === &#39;search-keyword&#39;) {\n      if (timer) {\n        clearTimeout(timer)\n      }\n      timer = setTimeout(async function () {\n        const data = await getImage(e.target.value)\n        handleSearch(data)\n      }, 500)\n    }\n  })</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>위 코드는 Debounce를 사용한 것이다. 이제 여러번 호출하지 않는다.</p>","frontmatter":{"title":"2022-02-02 TIL","date":"February 02, 2022"},"id":"eeeffda7-0cd7-571a-9c38-dc686a38435e"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-02-02-TIL157/","previous":{"fields":{"slug":"/2022-01-31-TIL156/"},"frontmatter":{"title":"2022-01-31 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2019-11-18-TIL1/"},"frontmatter":{"title":"2019-11-18 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}