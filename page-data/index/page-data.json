{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"YoungGyu Blog","author":"Lee YoungGyu","planTitle":"Future Action Plan","showPlan":true}},"allMarkdownRemark":{"edges":[{"node":{"id":"a3615a9b-2a33-5776-a09e-6d235f2b968f","excerpt":"Facts 로그아웃을 구현했고, 로그인을 안한 상태로 마이페이지에 들어가면 홈을 리다이렉트 시키도록 구현했다. Feelings 오늘 생각을 잘못해서 괜한 시간을 낭비했다. 잘못되었다는 걸 느꼈을 때 빠르게 캐치해야 하는데 그러지 못했다. 생각의 중요성을 다시금 깨달았다. Findings…","html":"<h2>Facts</h2>\n<p>로그아웃을 구현했고, 로그인을 안한 상태로 마이페이지에 들어가면 홈을 리다이렉트 시키도록 구현했다.</p>\n<h2>Feelings</h2>\n<p>오늘 생각을 잘못해서 괜한 시간을 낭비했다. 잘못되었다는 걸 느꼈을 때 빠르게 캐치해야 하는데 그러지 못했다. 생각의 중요성을 다시금 깨달았다.</p>\n<h2>Findings</h2>\n<p>클라이언트 내의 쿠키를 삭제하는 법, 세션을 관리하는 법을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>앞으로 내 생각이 잘못되었다고 느끼면 계속 똑같은 방법으로 시도하지 않고 바로 질문을 하거나, 다른 방법을 생각해서 해결해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 31, 2021","title":"2021-12-31 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-31-TIL29/"}}},{"node":{"id":"21121128-003a-5a20-b7a3-d98cd188d838","excerpt":"Facts 서버에서 클라이언트로 세션id가 담긴 쿠키를 가져오는 것을 성공했고, 로그인에 성공하면, 홈으로 리다이렉트 하도록 구현했다. Feelings 하루를 끝낼 때마다 좀 집중했으면 더 공부할 수 있었을 텐데 하고 느낀다. 더 열심히 해야겠다. Findings…","html":"<h2>Facts</h2>\n<p>서버에서 클라이언트로 세션id가 담긴 쿠키를 가져오는 것을 성공했고, 로그인에 성공하면, 홈으로 리다이렉트 하도록 구현했다.</p>\n<h2>Feelings</h2>\n<p>하루를 끝낼 때마다 좀 집중했으면 더 공부할 수 있었을 텐데 하고 느낀다. 더 열심히 해야겠다.</p>\n<h2>Findings</h2>\n<p>쿠키 세션에 대해서 먼저 공부하고 정리해놓으니 실제 사용할 때 더 쉽게 사용할 수 있었다. 오늘 정리의 중요성을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>앞으로도 무언가를 공부하면 꼭 정리하는 습관을 들여야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 30, 2021","title":"2021-12-30 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-30-TIL28/"}}},{"node":{"id":"d210aec6-fe5b-5dc9-be80-0d58d11fe85e","excerpt":"Facts 오늘은 아침에 알고리즘 문제를 풀고, proxy를 이용해서 로그인을 누르면 session id가 담긴 쿠키를 생성하는 것 까지 구현했다. Feelings 오늘 porxy로 서로 다른 포트로 세션을 공유할 수 없는 문제를 해결했는데, proxy를 좀 더 공부했으면 더 빨리 해결했을거라는 느낌이 들었다. Findings…","html":"<h2>Facts</h2>\n<p>오늘은 아침에 알고리즘 문제를 풀고, proxy를 이용해서 로그인을 누르면 session id가 담긴 쿠키를 생성하는 것 까지 구현했다.</p>\n<h2>Feelings</h2>\n<p>오늘 porxy로 서로 다른 포트로 세션을 공유할 수 없는 문제를 해결했는데, proxy를 좀 더 공부했으면 더 빨리 해결했을거라는 느낌이 들었다.</p>\n<h2>Findings</h2>\n<p>어느 순간부터 정보를 대충 읽고 넘어 가는 나 자신을 발견했다.</p>\n<h2>Future Action Plan</h2>\n<p>문제를 해결할때 추측으로 해결하지 말고 원인을 찾고 그에 필요한 정보를 공부해서 해결하도록 노력해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 27, 2021","title":"2021-12-27 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-27-TIL27/"}}},{"node":{"id":"7288861c-edc1-5a38-92b5-ce55ece10fca","excerpt":"Facts 클라이언트와 api가 port가 다른 상태에서 session을 전달하기 위해서 방법을 찾고있는데, 해결하지 못했다. Feelings 내가 뭘 잘못하고 있을까? 너무 추측으로 문제를 푼다고 느꼈다. Findings 나 자신이 부족하다는걸 알았다. Future Action Plan 더 문제를 해결하려고 할때 원인부터 찾아야겠다. Feedback","html":"<h2>Facts</h2>\n<p>클라이언트와 api가 port가 다른 상태에서 session을 전달하기 위해서 방법을 찾고있는데, 해결하지 못했다.</p>\n<h2>Feelings</h2>\n<p>내가 뭘 잘못하고 있을까? 너무 추측으로 문제를 푼다고 느꼈다.</p>\n<h2>Findings</h2>\n<p>나 자신이 부족하다는걸 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>더 문제를 해결하려고 할때 원인부터 찾아야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 25, 2021","title":"2021-12-25 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-25-TIL26/"}}},{"node":{"id":"2c6ee19e-17b7-522d-954c-7054d21e6dfe","excerpt":"Facts 오늘은 어제 풀었던 문제를 50분동안 다른방법으로 풀어봤다. 또 로그인 기능을 쿠키와 세션을 적용해서 구현 하고있다. 따라서 쿠키와 세션에 대해서 공부했다. Feelings 역시 공부는 필요한게 있을때 필요한걸 공부 할 때가 이해가 잘 된다는걸 느낀다. Findings 쿠키, 세션의 기능, 장점 단점, 차이점을 알게되었다. Future…","html":"<h2>Facts</h2>\n<p>오늘은 어제 풀었던 문제를 50분동안 다른방법으로 풀어봤다. 또 로그인 기능을 쿠키와 세션을 적용해서 구현 하고있다. 따라서 쿠키와 세션에 대해서 공부했다.</p>\n<h2>Feelings</h2>\n<p>역시 공부는 필요한게 있을때 필요한걸 공부 할 때가 이해가 잘 된다는걸 느낀다.</p>\n<h2>Findings</h2>\n<p>쿠키, 세션의 기능, 장점 단점, 차이점을 알게되었다.</p>\n<h2>Future Action Plan</h2>\n<p>주말에 쿠키 세션을 공부한걸 블로그에 포스팅 해야겠다. 앞으로 꾸준히 공부한걸 정리하도록 노력해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 24, 2021","title":"2021-12-24 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-24-TIL25/"}}},{"node":{"id":"b74c877d-28c1-5967-9c9f-312f6aa2a93d","excerpt":"Facts 오늘은 아침에 알고리즘을 복습하는 시간을 가지고, 프로젝트에서 아이템 디테일 페이지 데이터를 서버로부터 가져오는 기능을 구현하고, 유저 정보 데이터를 서버로 보내고, 로그인 인증 로직을 서버에서 실행할 수 있게 구현했다. Feelings…","html":"<h2>Facts</h2>\n<p>오늘은 아침에 알고리즘을 복습하는 시간을 가지고, 프로젝트에서 아이템 디테일 페이지 데이터를 서버로부터 가져오는 기능을 구현하고, 유저 정보 데이터를 서버로 보내고, 로그인 인증 로직을 서버에서 실행할 수 있게 구현했다.</p>\n<h2>Feelings</h2>\n<p>잠을 못 자면 집중력이 떨어지는 거 같다. 오늘 애자일을 하면서, 장난도 치고 너무 내 자신이 산만해졌다는 것을 느꼈다. 너무 해이해졌다는 걸 나 스스로도 느끼게 되었다.</p>\n<h2>Findings</h2>\n<p>서버와 클라이언트의 데이터 전달하는 게 그 전보다 더 많이 익숙해진 거 같다. 또 서버와의 데이터 전달 로직을 구성하면서, 책에서 읽었던 정보가 생각난다. 앞으로도 책을 꾸준히 읽어야 된다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>해이해진 나 자신을 바로잡고, 다시 집중해서 공부해야겠다. 항상 꾸준히가 중요한 거 같다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 23, 2021","title":"2021-12-23 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-23-TIL24/"}}},{"node":{"id":"f15dc5d8-bec2-5d89-b133-a4db16df123e","excerpt":"Promise Promise값 불러오기 then, await Facts 아침에 간단하게 알고리즘 한문제를 풀고, 서버로부터 받아온 카테고리 목록에 맞는 데이터를 서버로부터 가져오도록 구현했다.\n마지막으로 “웹을 지탱하는 기술” 책을 꾸준히 읽으면서 정보를 공유했다. Feelings 내가 javaScript…","html":"<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise\">Promise</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/await\">Promise값 불러오기 then, await</a></p>\n<h2>Facts</h2>\n<p>아침에 간단하게 알고리즘 한문제를 풀고, 서버로부터 받아온 카테고리 목록에 맞는 데이터를 서버로부터 가져오도록 구현했다.\n마지막으로 “웹을 지탱하는 기술” 책을 꾸준히 읽으면서 정보를 공유했다.</p>\n<h2>Feelings</h2>\n<p>내가 javaScript의 좋은 함수들을 제대로 사용하지 않고 있다고 느꼈다.</p>\n<h2>Findings</h2>\n<p>알고리즘을 며칠 꾸준히 풀면서, 공부한 결과 처음에는 한 줄도 작성 못했는데 지금은 문제를 풀고 있는 모습을 보며 꾸준함이 답이라는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>매일매일 꾸준히 알고리즘 문제를 풀고, 책을 읽는 습관을 키울 것이다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 20, 2021","title":"2021-12-20 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-20-TIL23/"}}},{"node":{"id":"8ee75f1e-6254-5b0b-aef4-10b8b0b08fdf","excerpt":"Facts 오늘도 알고리즘을 50분 풀어보고, 백엔드 서버에 있는 데이터를 프런트엔드로 받아오는 것을 구현했다. 데이터를 가져오는 건 성공했는데, 가져온 데이터를 기존에 있던 함수에 어떻게 적용할지 고민하고 있다. 구조 자체를 변경해야 해서 어려움을 겪고 있다. Feelings…","html":"<h2>Facts</h2>\n<p>오늘도 알고리즘을 50분 풀어보고, 백엔드 서버에 있는 데이터를 프런트엔드로 받아오는 것을 구현했다. 데이터를 가져오는 건 성공했는데, 가져온 데이터를 기존에 있던 함수에 어떻게 적용할지 고민하고 있다. 구조 자체를 변경해야 해서 어려움을 겪고 있다.</p>\n<h2>Feelings</h2>\n<p>처음 프로젝트를 하다 보니 만들 때마다 왜 이렇게 만들어놨을까 하는 후회를 많이 하고, 아쉬움을 많이 느낀다.</p>\n<h2>Findings</h2>\n<p>하루에 책을 꾸준히 읽으면서 내가 모르는 지식들이 많고 정말 공부할게 많다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>하루를 빡세게 공부한다기보단, 매일매일 꾸준히 원하는 목표만큼 공부하도록 하자.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 19, 2021","title":"2021-12-19 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-19-TIL22/"}}},{"node":{"id":"51e648ca-d75d-5021-abd1-783519e5281b","excerpt":"Facts 오늘 아침에 알고리즘을 50분 풀고, 프로젝트를 만들면서 uesEffect에 대해서 새롭게 알게되었다. 또한 어제 읽었던 “웹을 지탱하는 기술”을 마저 읽었다. Feelings 내가 막히거나 확신하지 못하는게 있으면 바로 질문이나, 피드백을 통해서 바로잡는게 중요하다는 것을 느꼈다. Findings 오늘도 나는 useEffect…","html":"<h2>Facts</h2>\n<p>오늘 아침에 알고리즘을 50분 풀고, 프로젝트를 만들면서 uesEffect에 대해서 새롭게 알게되었다. 또한 어제 읽었던 “웹을 지탱하는 기술”을 마저 읽었다.</p>\n<h2>Feelings</h2>\n<p>내가 막히거나 확신하지 못하는게 있으면 바로 질문이나, 피드백을 통해서 바로잡는게 중요하다는 것을 느꼈다.</p>\n<h2>Findings</h2>\n<p>오늘도 나는 useEffect에서 잘못 알고있었다. 질문을 하지 않았으면 계속 잘못된 지식으로 useEffect를 사용할뻔했다. 질문이 정말 중요하다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>스스로 막히는게 있으면 질문을 많이하고, 앞으로 뭘 공부할때 꼭 공식문서를 먼저 보도록해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 18, 2021","title":"2021-12-18 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-18-TIL21/"}}},{"node":{"id":"d7a86a87-c0ff-56d8-bcc9-32c2d4f84ae9","excerpt":"배열을 문자열로 repeat Facts 오늘은 2명이서 “웹을 지탱하는 기술”이라는 책을 읽으면서, 3분 책을 읽고 서로가 읽은 내용을 공유하는 방식으로 내가 필요한 정보들을 효율적으로 얻을수 있었다.. URI URL의 차이점, HTTP 메소드, 메세지, REST, express와 middleware에 대해서 공부했다. Feelings…","html":"<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join\">배열을 문자열로</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\">repeat</a></li>\n</ul>\n<h2>Facts</h2>\n<p>오늘은 2명이서 “웹을 지탱하는 기술”이라는 책을 읽으면서, 3분 책을 읽고 서로가 읽은 내용을 공유하는 방식으로 내가 필요한 정보들을 효율적으로 얻을수 있었다.. URI URL의 차이점, HTTP 메소드, 메세지, REST, express와 middleware에 대해서 공부했다.</p>\n<h2>Feelings</h2>\n<p>프론트엔드를 하다가 백엔드를 적용하려니, 일단 당황스러운점이 많았고, 어려운 부분이 많았다. 다시 공부할것도 많았고, 좀 더 열심히 해야겠다는 생각이 들었다.</p>\n<h2>Findings</h2>\n<p>3분씩 책을 읽고 이해한 내용을 서로에게 공유하는 방식으로 공부했는데, 매우 효율적이라는것을 알았다. 자주해야겠다.</p>\n<h2>Future Action Plan</h2>\n<p>앞으로 책을 읽을때 오늘 사용한 방식을 이용해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"December 17, 2021","title":"2021-12-17 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-17-TIL21/"}}},{"node":{"id":"f93cd425-71d8-5232-a7f4-9cd198550c1b","excerpt":"Facts 오늘은 구매 상세페이지를 적용하고, pagiNation 기능을 구현하는데, 여태 내가 짜던 구조가 문제가 있어서 어려운 부분이 많았다. 일단 구상자체도 힘들었고, 볼 수있는 예제도 없었기때문에 힘든부분이 많았다. 그래서 완성은 못했지만 내일 다시 구현해볼 예정이다. Feelings…","html":"<h2>Facts</h2>\n<p>오늘은 구매 상세페이지를 적용하고, pagiNation 기능을 구현하는데, 여태 내가 짜던 구조가 문제가 있어서 어려운 부분이 많았다. 일단 구상자체도 힘들었고, 볼 수있는 예제도 없었기때문에 힘든부분이 많았다. 그래서 완성은 못했지만 내일 다시 구현해볼 예정이다.</p>\n<h2>Feelings</h2>\n<p>아무래도 자바스크립트로는 첫 프로젝트다 보니 가독성이 떨어지는 코드도 많고, 내가 짠 코드인데도 내가 알아보기 힘들다는 느낌을 받았다.</p>\n<h2>Findings</h2>\n<p>오늘 프로젝트를 피드백 받으면서, 내가 잘못된 방향으로 구조를 짜고있었다는것을 알았다. 또 확실하지도 않으면서 나만의 추측으로 코드를 짠다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>다음부터 잘하자 라는 말은 없다. 지금부터 잘하자. 또 확실하지 않으면 질문하자. 오늘처럼 잘못된 구조로 코딩을 하면 나중에 수정하는데에 긴 시간을 잡아먹는다.</p>\n<h2>Feedback</h2>\n<p>코드의 중복을 최소화 한다거나 심플한 코드를 짜는 것은 아직 무리지만, 인식하면서 코드를 작성해야겠다.</p>","frontmatter":{"date":"December 16, 2021","title":"2021-12-16 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-16-TIL20/"}}},{"node":{"id":"acebd960-1853-5c67-988f-870f437288a9","excerpt":"Fact create-react-app로 리액트환경을 구성했다. Github Page로 간단하게 프로젝트를 배포했다. 상품페이지, 장바구니, 홈 페이지의 라우팅을 설정했다. Feelings 존나 잘하고싶다. redShift는 리눅스에서 사용할수있는 성능 좋은 블루라이트 차단 프로그램이다.(편안함) Findings linux에서 create-react-app…","html":"<h2>Fact</h2>\n<ul>\n<li>create-react-app로 리액트환경을 구성했다.</li>\n<li>Github Page로 간단하게 프로젝트를 배포했다.</li>\n<li>상품페이지, 장바구니, 홈 페이지의 라우팅을 설정했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>존나 잘하고싶다.</li>\n<li>redShift는 리눅스에서 사용할수있는 성능 좋은 블루라이트 차단 프로그램이다.(편안함)</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>linux에서 create-react-app을 사용해 리액트 세팅을 했다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">npx create-react-app react-todo\nor\nnpm install -g create-react-app\ncreate-react-app react-todo</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>로 만들면된다.</p>\n<ul>\n<li>폴더를 추가 제거하려는데 npm ERR! Error: EACCES: permission denied, access /workspaces/nodejs/ko-shopping’ 라는 에러가 나오면 권한 설정을 해주어야한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">sudo chown -R younggyulee:staff &#39;/workspaces/nodejs/ko-shopping&#39;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이런식으로 해결하면된다. 폴더에 사용자권한을 주는것 younggyulee는 내 사용자 이름이다.</p>\n<ul>\n<li>만들어진 리액트안에 파일들을 보면 React.StrictMode 태그가 있는데 이것은 안전하지 않은 것들에 경고를 준다고하며, 문제점들을 찾아준다고한다. 굳이 지울필요는 없을 것 같다.</li>\n<li>\n<p>react-router-dom 다운받고 간단하게 라우팅 설정을 했더니 아래와같은 에러가 발생했다. 버전이 바뀌면서 라우팅 설정도 바뀌었다. 해당 링크 첨부한다. 개별 라우팅을 할때에는 Routes로 묶어주어야 한다고한다.</p>\n<p><a href=\"https://github.com/remix-run/react-router/blob/main/docs/getting-started/tutorial.md\">https://github.com/remix-run/react-router/blob/main/docs/getting-started/tutorial.md</a></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Error: A Route is only ever to be used as the child of element, never rendered directly. Please wrap your Route in a Routes.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Future Action</h2>\n<ul>\n<li>코딩테스트 준비도 해야한다!</li>\n</ul>","frontmatter":{"date":"December 15, 2021","title":"2021-12-15 TIL","tag":["TIL"]},"fields":{"slug":"/2021-12-15-TIL140/"}}},{"node":{"id":"3f6fbb2a-53a9-5a87-8c00-d865c0055059","excerpt":"Fact 복습한다는 마인드로 제작중인 프로젝트에 css를 styled components로 사용하고있다. 인프런 강의를 들으면서 react를 복습하고있다. 5주 직무 부트캠프를 신청해서 첫 오리엔테이션을 시청했다. Feelings…","html":"<h2>Fact</h2>\n<ul>\n<li>복습한다는 마인드로 제작중인 프로젝트에 css를 styled components로 사용하고있다.</li>\n<li>인프런 강의를 들으면서 react를 복습하고있다.</li>\n<li>5주 직무 부트캠프를 신청해서 첫 오리엔테이션을 시청했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>면접준비를 하고있는데, 고양이쇼핑몰 사이트를 만든지 너무 오래되어서, 어떤 부분이 막혔는지 머리속에 남아있지 않아서 문제였는데, 블로그에서 해당단어 찾기만해도 TIL에 내가 어떻게 문제를 해결했는지 다 나와있어서 TIL을 꾸준히 적길 잘했다는 생각이 든다.</li>\n<li>내 블로그가 너무 가독성이 떨어진다. 새로운 테마를 찾아봐야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>요즘 리액트 트랜드는 styled-components를 사용한다고 한다. 내가 처음 리액트를 공부하면서 프로젝트를 작성했을때 직접 스타일에 객체로 넣기도하고 했는데, 이게 아주 비효율적이라고 한다. 컴포넌트에서 변경된 데이터만 변경해서 보여주어야하는데 스타일을 객체로 바로 넣어버리면 필요없이 렌더링이 계속 된다고한다.</li>\n<li>서버 사이드 렌더링이란 서버에서 페이지를 그려 클라이언트로 보낸후 화면에 표시하는 기법을 말한다.</li>\n<li>클라이언트 사이드 렌더링이란 클라이언트에서 렌더링하는 방식 서버로부터 데이터를 받아 클라이언트에서 바뀐 데이터가 있는 화면만 새롭게 렌더링한다 (첫 요청시 한페이지만 불러옴)</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>적용하던 css를 마저 적용하고 상태관리 라이브러리를 사용해봐야겠다.</li>\n</ul>","frontmatter":{"date":"December 14, 2021","title":"2021-12-14 TIL","tag":["TIL"]},"fields":{"slug":"/2021-12-14-TIL139/"}}},{"node":{"id":"f99d6703-db2c-50fb-808c-f657803aa3b6","excerpt":"Facts 오늘은 로그인 폼, 검색 결과를 css를 적용했다. css를 적용하는 것은 익숙해져서 속도가 빨라져서 문제가 없었다. 또 오늘 알고리즘 문제를 풀었는데 내 위치를 깨달았다. 너무 알고리즘 공부를 소홀히 한 거 같다. Feelings…","html":"<h2>Facts</h2>\n<p>오늘은 로그인 폼, 검색 결과를 css를 적용했다. css를 적용하는 것은 익숙해져서 속도가 빨라져서 문제가 없었다. 또 오늘 알고리즘 문제를 풀었는데 내 위치를 깨달았다. 너무 알고리즘 공부를 소홀히 한 거 같다.</p>\n<h2>Feelings</h2>\n<p>오늘 절실하게 알고리즘 공부를 해야겠다는 것을 느꼈다. 내가 이렇게 알고리즘에 관심이 없었나 생각해보는 시간이였고, 진지하게 알고리즘에 더 집중해야겠다.</p>\n<h2>Findings</h2>\n<p>평소에 알고리즘이 별로 중요하지 않다고 생각했는데, 이제는 생각이 달라졌다. 정말 열심히 해야겠다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>하루 알고리즘 문제를 꾸준히 준히풀 것이다. 내 힘으로 알고리즘 문제에 익숙해질 때까지 계속 반복할 것이다.</p>\n<h2>Feedback</h2>\n<p>아침에 꾸준히 알고리즘을 풀고 있는데, 더 아침에 집중하도록 노력해야겠다.</p>","frontmatter":{"date":"December 13, 2021","title":"2021-12-13 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-13-TIL19/"}}},{"node":{"id":"e7a1318b-236c-547d-ba5a-465613888cfa","excerpt":"Facts 오늘은 어제 푼 알고리즘 문제를 복습하고, 다른 사람들이 풀어놓은 방식과 내가 쓴 방식을 비교하며 공부했다.\n오늘은 장바구니 css를 정리하고 구매 페이지 css를 적용시켰다. 그리고 로그인 폼에 css를 적용 중이다. Feelings css…","html":"<h2>Facts</h2>\n<p>오늘은 어제 푼 알고리즘 문제를 복습하고, 다른 사람들이 풀어놓은 방식과 내가 쓴 방식을 비교하며 공부했다.\n오늘은 장바구니 css를 정리하고 구매 페이지 css를 적용시켰다. 그리고 로그인 폼에 css를 적용 중이다.</p>\n<h2>Feelings</h2>\n<p>css를 처음에는 대충 적용해도 상관없을 거라고 생각했는데, 막상 적용해보니 절대 그럴 수 없다는 것을 느꼈다. 내가 만든 프로젝트이고 점점 완성되어가는 화면을 보니 뿌듯하고 더 잘 만들어 보고 싶다고 느꼈다.</p>\n<h2>Findings</h2>\n<p>오늘 알고리즘 문제를 다시 풀면서, 복습의 중요성을 알았다. 사람은 망각의 동물이다. 나 역시 오늘 아침 다시 문제를 푸니 새로운 문제를 푸는 느낌이었다.\n역시 이 세상에는 쉬운 게 없다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>매일매일 풀었던 문제를 다음날 복습하고 다른 사람들의 풀이 방식을 공부하고 내 것으로 만들어야겠다. 알고리즘에 익숙해지자.</p>\n<h2>Feedback</h2>\n<p>알고리즘 문제를 복습을 꾸준히 하는 습관을 들여야겠다.</p>","frontmatter":{"date":"December 12, 2021","title":"2021-12-12 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-12-TIL18/"}}},{"node":{"id":"6f29b93f-789d-5c3e-a76c-661fd2f24947","excerpt":"FlexBox Gird Facts 오늘은 메뉴를 css를 적용했다. 또 Grid를 이용해서 아이템 상품들을 화면에 나열했고, 장바구니 또한 Gird FlexBox를 이용해서 아이템들이 쌓이도록 적용했습니다. Gird와 flex 박스를 공부하고 있는데, 괜찮은 공부 프로그램이 있어서 재미있게 할 수 있었다. Feelings…","html":"<ul>\n<li><a href=\"https://d2.naver.com/helloworld/8540176\">FlexBox</a></li>\n<li><a href=\"https://www.vobour.com/-%EB%94%94%EC%9E%90%EC%9D%B8-5%EB%B6%84-%EC%95%88%EC%97%90-css-grid-%EB%B0%B0%EC%9A%B0%EA%B8%B0\">Gird</a></li>\n</ul>\n<h2>Facts</h2>\n<p>오늘은 메뉴를 css를 적용했다. 또 Grid를 이용해서 아이템 상품들을 화면에 나열했고, 장바구니 또한 Gird FlexBox를 이용해서 아이템들이 쌓이도록 적용했습니다. Gird와 flex 박스를 공부하고 있는데, 괜찮은 공부 프로그램이 있어서 재미있게 할 수 있었다.</p>\n<h2>Feelings</h2>\n<p>나한테는 가장 중요한 게 기능이지만, 디자인 또한 중요하다. 기능이 아무리 좋다고 해도 첫눈에 들어오는 장면이 맘에 들지 않으면, 내가 소비자 입장에서도 사이트를 이용하지 않을 것 같다. 웹에서 디자인 또한 중요하다는 것을 만들면서 느꼈다.</p>\n<h2>Findings</h2>\n<p>css를 하나하나씩 적용해 보면서 내가 실제로 쓰던 사이트처럼 완성되어 가는 것을 보았다. 여태 나는 기능이 전부라고 생각했지만, css 또한 웹의 완성도를 높인다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>내 관점 말고도 소비자 관점으로도 봐야 한다. 어쨌든 내가 사용하는 게 아니라 소비자들이 사용하는 것 이기 때문에, 항상 무엇을 할 때도 항상 소비자를 기준으로 기능을 구현해야겠다.</p>\n<h2>Feedback</h2>\n<p>소비자 관점으로 기능을 구현하는 것을 항상 잊지 말아야겠다.</p>","frontmatter":{"date":"December 11, 2021","title":"2021-12-11 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-11-TIL17/"}}},{"node":{"id":"3a2ab438-40db-5d1c-99fb-e80c9643aca1","excerpt":"Facts 오늘 짝 프로그래밍을 했다. 일단 아이템 상세페이지에서 바로 개수를 정하고 구매하기 버튼을 누르면 마이페이지 구매리스트에 구매한 날짜까지 적히도록 구현하였고, 검색창과 검색결과를 한 컴포넌트에 작성했는데, 이것도 컴포넌트를 분리하였습니다. 또한, 홈페이지에 css를 적용하면서 웹 브라우저 크기를 줄여도 UI…","html":"<h2>Facts</h2>\n<p>오늘 짝 프로그래밍을 했다. 일단 아이템 상세페이지에서 바로 개수를 정하고 구매하기 버튼을 누르면 마이페이지 구매리스트에 구매한 날짜까지 적히도록 구현하였고, 검색창과 검색결과를 한 컴포넌트에 작성했는데, 이것도 컴포넌트를 분리하였습니다. 또한, 홈페이지에 css를 적용하면서 웹 브라우저 크기를 줄여도 UI가 고정되도록 적용하는데, 복잡하지만 하나씩 만들고있다.</p>\n<h2>Feelings</h2>\n<p>웹 구조를 처음 짜다보니 css를 적용하거나 컴포넌트를 나누면서 발생한 오류가 많았다. 왜 처음부터 구조를 짜는게 중요한지 몸소 느꼈다.</p>\n<h2>Findings</h2>\n<p>처음이 가장 중요하다. 생각없이 코드를 작성하다보면 뒤늦은 후회가 밀려오는법이다. 오늘 짝프로그래밍을 안했다면 나는 오류들을 몇시간동이나 혼자 해결하고 있었을 것이다.</p>\n<h2>Future Action Plan</h2>\n<p>조금 미미하더라도, 미래를 위해 좀더 신경써서 코드를 작성하도록 해야겠다. 순간이 편하면 미래가 힘들어진다.</p>\n<h2>Feedback</h2>\n<p>코드를 작성할 때 신경 써서 작성하는 게 아직 부족한 것 같다. 좀 더 집중하자.</p>","frontmatter":{"date":"December 10, 2021","title":"2021-12-10 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-10-TIL16/"}}},{"node":{"id":"6f95a366-2346-51cc-af88-d3d830b750de","excerpt":"Facts: 오늘은 장바구니, 마이페이지 구매리스트에 아이템의 갯수를 출력했고, 특정 아이템 화면에서 원하는 수량을 선택해 아이템을 장바구니에 넣으면, 선택한 개수만큼 장바구니에 담도록 설정했다. 총 수량에 맞는 가격이 출력되고, 구매하기를 누르면 마이페이지 구매리스트에 내가 구매한 아이템이 갯수와 함께 출력된다. Feelings…","html":"<p>Facts: 오늘은 장바구니, 마이페이지 구매리스트에 아이템의 갯수를 출력했고, 특정 아이템 화면에서 원하는 수량을 선택해 아이템을 장바구니에 넣으면, 선택한 개수만큼 장바구니에 담도록 설정했다. 총 수량에 맞는 가격이 출력되고, 구매하기를 누르면 마이페이지 구매리스트에 내가 구매한 아이템이 갯수와 함께 출력된다.</p>\n<p>Feelings: 계획을 철저하게 세우지 않고, 일단 부딪혀보고 천천히 계획을 조정하면서 세워 나간것 같다. 내 스스로 코드가 잘못 되었다는걸 알았는데, 고칠 생각을 안했다. 나 스스로 잘못하고있다는것을 인지해야한다.</p>\n<p>Findings: 내가 잘못된 코드를 짜고있다는 것을 스스로 알아야한다. 그리고 설계가 처음부터 어느정도 이루어지고 시작해야한다. 오늘은 설계를 중요하게 생각하지않았다 고쳐야한다.</p>\n<p>Future Action Plan: 먼저 문제에대한 계획을 세우고 실행하도록 연습하자. 가끔 잊어버리고 실행먼저 한다. 이제부터는 내스스로 생각해서 설계하는 습관을 기르자.</p>\n<p>Feedback: 계속 문제를 풀 때 먼저 계획을 세우는 습관을 들이고 있다.</p>","frontmatter":{"date":"December 09, 2021","title":"2021-12-09 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-09-TIL15/"}}},{"node":{"id":"bf29f9fe-27d8-5392-bce1-d4439496b843","excerpt":"Facts…","html":"<p>Facts: 오늘은 로그아웃을 구현했다. 로그인 버튼을 눌러서 폼에 정보를 입력후 로그인하면, 성공 메세지가 나온후 바로 홈 화면으로 화면을 전환시켜준다. 로그인이 된 상태면, 홈화면에는 로그인 버튼이 로그아웃 버튼으로 바껴있고, 로그아웃 버튼을 누르면 로그인 버튼으로 바꿔주도록 구현했다, 또한 마이페이지를 로그아웃된 상태에서 들어가면 로그인 화면으로 보내주도록 만들었고 로그인 된 상태로 들어가면 구매목록이 나와있는 마이페이지 화면이 띄워주도록 했다. 또 마지막으로 이미지 슬라이드를 간단하게 구현했다.</p>\n<p>Feelings: 나는 문제를 너무 쉽게 접근 하려고한다. 쉽게하려고만 생각해서, 정작 필요한것을 못찾고있다. 또는 잘못된 정보를 볼때도 많다.</p>\n<p>Findings: 문제를 너무 쉽게 찾을려고한다. 오늘도 최신 공식문서를 확인했으면 진작에 풀었을 문제인데, 쉽게 이해하려고 블로그 글을 먼저 보다가 이해도 못하고, 답도 얻지 못했다.</p>\n<p>Future Action Plan: 쉬운글에 의지하지 않고 앞으로는 공식문서를 보는것을 익숙해 질 것이며. 더이상 편한길에 의지하지 않을 것이다.</p>\n<p>Feedback: 나는 아직도 공식문서에 익숙하지않다. 계속 볼려고 노력해야겠다.</p>","frontmatter":{"date":"December 06, 2021","title":"2021-12-06 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-06-TIL14/"}}},{"node":{"id":"869a2c65-5334-5a64-9aa1-b22a019c867c","excerpt":"Facts: 오늘은 로그인 시스템을 구현하고 맞는 아이디와 비밀번호를 입력하면 로그인 성공이라는 메세지가 나오고 localStorage에 isLogin이라는 key에 true…","html":"<p>Facts: 오늘은 로그인 시스템을 구현하고 맞는 아이디와 비밀번호를 입력하면 로그인 성공이라는 메세지가 나오고 localStorage에 isLogin이라는 key에 true값을 저장한다 실패하면 로그인 실패라고 메세지가 나오도록 만들었다. 오늘 또한 짝 프로그래밍을 했는데, 매우 힘들지만 재미있었다. 서로 의견이 달라서 생기는 문제점이 있었지만, 서로의 의견을 말해보고 팀플레이를 할수있는 좋은 시간이였다.</p>\n<p>Feelings: 오늘 컨디션이 너무 안좋아서 집중을 많이 못했다. 감기에 걸려서 그런지 집중할 수 있는 시간도 짧아지고, 쉽게 피곤해졌다. 개발자는 컨디션이 정말 중요하다는 것을 느꼈다.</p>\n<p>Findings: 몸 컨디션이 그날을 좌우한다. 뭘해도 졸리고 피곤하고 기침때문에 집중을 못했다. 정말 평소에 몸을 챙겨야 한다는것을 알게되었다..</p>\n<p>Future Action Plan: 앞으로 무리하게 밤 늦게까지 공부를 하는 행동은 절대 안할것이며, 건강을 챙기도록 노력할 것이다.</p>\n<p>Feedback: 요즘은 다음날 무리를 줄만큼 밤을 새면서 공부하지않는다. 공부는 꾸준히 오래 해야한다.</p>","frontmatter":{"date":"December 05, 2021","title":"2021-12-05 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-05-TIL13/"}}},{"node":{"id":"b7e538f0-9093-5066-a235-5542be9c072c","excerpt":"Facts: 오늘은 체크박스를 선택해서 삭제하는 부분의 오류를 수정했고, 장바구니를 선택해서 구매하는것, 아이템 자체에서 구매를 구르면 구매리스트에 입금대기중 이라고 표시하는 기능까지 구현했다. 로그인 까지 구현하기위해 LocalStorage와 SessionStorage의 차이점을 공부했다. Feelings: 체크박스 선택하는 오류도 filter…","html":"<p>Facts: 오늘은 체크박스를 선택해서 삭제하는 부분의 오류를 수정했고, 장바구니를 선택해서 구매하는것, 아이템 자체에서 구매를 구르면 구매리스트에 입금대기중 이라고 표시하는 기능까지 구현했다. 로그인 까지 구현하기위해 LocalStorage와 SessionStorage의 차이점을 공부했다.</p>\n<p>Feelings: 체크박스 선택하는 오류도 filter한 값을 담은 변수를 리턴해주지 않아서 난 오류였다. filter로 변화를 줄려면 그 변화한 값을 정해줘야하는데 실수를 범했다. 오늘도 꼼꼼함이 부족해서 실수를 했다.</p>\n<p>Findings: 어느 하나를 쓰더라도 제대로 알고 써야한다는 것을 배웠다. filter 실수도 내가 제대로 공부했다면 범하지 않을 실수였다.</p>\n<p>Future Action Plan: 다시는 오늘과 같은 실수를 범하지 않도록 노력할 것이다. 점점 줄여 나갈것이며, 처음부터 꼼꼼히 생각하면서 만들 것이다..</p>\n<p>Feedback: 나는 최대한 변수명을 꼼꼼하게 신경쓸려고 노력하는데도, 많이 부족한게 보인다. 더 노력하자.</p>","frontmatter":{"date":"December 04, 2021","title":"2021-12-04 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-04-TIL12/"}}},{"node":{"id":"156c43b1-318f-548a-9fdc-e88fa7bd572c","excerpt":"Facts: 오늘은 예정대로 장바구니 리스트에있는 아이템의 체크박스를 클릭해서 삭제하는 기능을 마저 구현했다. 새로운걸 적용시키는데에 시간이 오래걸렸지만, 기능을 구현할수있었다. 하지만 똑같은 제품을 연속…","html":"<p>Facts: 오늘은 예정대로 장바구니 리스트에있는 아이템의 체크박스를 클릭해서 삭제하는 기능을 마저 구현했다. 새로운걸 적용시키는데에 시간이 오래걸렸지만, 기능을 구현할수있었다. 하지만 똑같은 제품을 연속 2번이상 담기후 삭제 할시 체크박스가 미리 체크되어서 아이템이 나오는걸 확인했다. 평상시 쓰는데에는 별 문제가 없겠지만, 꼭 다시 고쳐야할 문제다.<br>\nFeelings: 오늘은 몸상대가 좋지않아서 집중을 많이 못했다. 몸 상태 관리는 스스로 해야하는데 그러지 못한거같다. 건강을 챙겨야 공부도 할 수 있는법이다.</p>\n<p>Findings: 오늘도 내가 생각한 방식대로 그대로 구현했는데, 살짝의 문제가 있었다. 솔직히 계획 세운것이 명확하지 않아서 그런거같다.</p>\n<p>Future Action Plan: 앞으로는 Notion 애자일 일지에 내가 오늘 하려는 목표를 잡고 꼭 구현할수있도록 계속 노력하고 몸관리를 스스로 해야겠다.</p>\n<p>Feedback: 몸관리를 스스로 하는중이다. 밤늦게까지 하는 습관을 줄여가도록 하자.</p>","frontmatter":{"date":"December 03, 2021","title":"2021-12-03 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-03-TIL11/"}}},{"node":{"id":"d6b7f10c-2c03-57b3-a0a4-38c521fa78dc","excerpt":"이벤트이름을 설정 할 때 camelCase 로 설정해주어야 합니다. onclick 은 onClick, onmousedown 은 onMouseDown, onchange 는 onChange 이런식으로 말이죠. 이벤트에 전달해주는 값은 함수 여야 합니다. 만약에 onClick={this.handleIncrease…","html":"<ul>\n<li>이벤트이름을 설정 할 때 camelCase 로 설정해주어야 합니다. onclick 은 onClick, onmousedown 은 onMouseDown, onchange 는 onChange 이런식으로 말이죠.</li>\n<li>이벤트에 전달해주는 값은 함수 여야 합니다. 만약에 onClick={this.handleIncrease()} 이런식으로 하게 된다면, 렌더링을 할 때 마다 해당 함수가 호출이됩니다. 그렇게 되면 정말 큰 일이 발생합니다. 렌더링 -> 함수 호출 -> setState -> 렌더링 -> 함수 호출 -> 무한반복.. 이렇게 되버리는 것이죠!</li>\n</ul>\n<p>Facts: 오늘은 장바구니 리스트에서 원하는 아이템을 체크한후 삭제하는 기능을 구현하려고 했다. 구상은 했지만, 작은 실수때문에 시간을 너무 많이 허비했다. 위에 적은 것처럼 이벤트에 전달해주는 값을 <code class=\"language-text\">onChange={handleIncrease()}</code>를 사용해서 무한 렌더링에 빠져서 원인을 찾는데에 시간을 너무 허비했다.</p>\n<p>Feelings: 오늘도 제가 작성한 코드를 꼼꼼하게 보지 못했다. 당연히 틀린게없는 코드라고 생각했는데, 이게 내 실수였다.</p>\n<p>Findings: 나는 아직 부족하다. 내가 생각하는게 항상 맞다 라고 단정짓지 말자. 이런 잘못된 생각때문에 오늘은 많은 삽질을했다.</p>\n<p>Future Action Plan: 실수를 되풀이 하지 않을것이며, 앞으로는 확실하지 않으면 다시 찾아볼것이다. 오늘 내 잘못알고있는 정보로 인해, 많은 시간을 삽질했지만, 다음에 이런 경우가 발생했을경우 내가 잘못알고있는것을 빠르게 캐치한후 해결 할 것이다.</p>\n<p>Feedback: 최대한 실수를 안 하려고 노력하고 있다. 항상 현재에 만족하지 말자.</p>","frontmatter":{"date":"December 02, 2021","title":"2021-12-02 TIL","tag":["TIL"]},"fields":{"slug":"/2019-12-02-TIL10/"}}},{"node":{"id":"1547391c-faff-5b14-87ad-b4d4e4e23e86","excerpt":"Facts…","html":"<p>Facts: 오늘은 로그인폼을 만들어보고, 장바구니에서 아이템을 전체삭제, 버튼을 이용해서 한가지 아이템만 삭제하는기능을 구현했다. 기능을 구현하면서 컴포넌트간의 데이터전달을 어떻게 해야할지 몰라서 시간을 많이 허비했다. 내가 아는 방법을 총동원해서 해도 전달이 실패해서 열이 많이 올랐지만, 콜백을 이용한 좋은 자료를 발견하고 공부해 원하는 문제를 해결했다.</p>\n<p>Feelings: 왜 시간을 이렇게 허비했나? 자괴감이 들었다. 나의 한계인가? 하고 생각했다. 하지만 내가 공부를 하지 못한 부분이있어서 해결하지 못했다는 것은 변하지않는다. 결국 내잘못이다.</p>\n<p>Findings: 오늘 오랜 삽질을 한 결과 깨달은 부분이 많다. 나는 아직 부족 하다는 것과 더 열심히 해야 한다는 것을 알았다.</p>\n<p>Future Action Plan: 앞으로 공부할때 나는 절대 현재에 만족하지 않을 것이다. 오늘 커다란 문제를 만났지만, 겁먹지 않고 해결 하기 위해 노력할 것이다.</p>\n<p>Feedback: 매일매일 꾸준히 커밋하고, 무리하지 않으면서 공부해야한다.</p>","frontmatter":{"date":"November 29, 2021","title":"2021-11-29 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-29-TIL9/"}}},{"node":{"id":"7a50aa09-2387-5a53-9c2f-5c882fc2f2c8","excerpt":"fetch Destructuring 구조화된 배열 또는 객체를 비구조화 하여 변수에 할당 useEffect 기본예제 템플릿 리터럴 배열 기존요소 삭제, 추가 Facts: 오늘은 어제 했던 가격 리스트별로 출력 기능을 리팩토링하였고, useEffect…","html":"<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Fetch_API/Fetch%EC%9D%98_%EC%82%AC%EC%9A%A9%EB%B2%95\">fetch</a></li>\n<li><a href=\"https://poiemaweb.com/es6-destructuring\">Destructuring 구조화된 배열 또는 객체를 비구조화 하여 변수에 할당</a></li>\n<li><a href=\"https://poiemaweb.com/es6-destructuring\">useEffect 기본예제</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\">템플릿 리터럴 배열 기존요소 삭제, 추가</a></li>\n</ul>\n<p>Facts: 오늘은 어제 했던 가격 리스트별로 출력 기능을 리팩토링하였고, useEffect 부분에서 잘못된 것이 있어서 수정했다. 또한 장바구니 전체 삭제 기능을 추가하였다 여기까지는 막히는 부분은 없었는데 로그인 폼을 만들고 부트스트랩을 적용하는 데 있어서 문제가 생겨서 해결을 아직 못했다.</p>\n<p>Feelings: 내가 설정을 잘못 하였는가? 아직 이유를 잘모른다. 분명히 내가 초기설정을 실수해서 부트스트랩이 적용이 안되는거같다. 애초에 처음부터 꼼꼼히 해야한다는 것 을 몸소 느꼈다.</p>\n<p>Findings: 부트스트랩을 이용해보려고 오랜시간을 끌었는데, 항상 편한것에 의존하려다 이렇게 시간을 허비한다. 다시는 편한것에 의존하지 않을것이다.</p>\n<p>Future Action Plan: 다시는 편한길로 가려고 하지 않을것이다. 또한 시간을 너무 허비할 것 같으면 다른것부터 해야겠다.</p>\n<p>Feedback: 나는 오늘도 편한길로만 가려고했다. 이건 습관 문제라고 생각한다. 항상 문제를 인지하고, 공부해야겠다.</p>","frontmatter":{"date":"November 28, 2021","title":"2021-11-28 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-28-TIL8/"}}},{"node":{"id":"2a7c40e2-e3c9-5bd1-a8d2-0721efd74258","excerpt":"async 내림차순 오름차순 함수 useEffect 완벽가이드 Facts: 오늘은 useEffect를 사용해서 제품리스트를 가격순별로 오름차순, 내림차순 별로 볼수있는 기능을 구현했다. useEffect…","html":"<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/async_function\">async</a></li>\n<li><a href=\"http://megaton111.cafe24.com/2018/05/24/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B0%B0%EC%97%B4-%EC%98%A4%EB%A6%84%EC%B0%A8%EC%88%9C-%EB%82%B4%EB%A6%BC%EC%B0%A8%EC%88%9C-%EC%A0%95%EB%A0%AC/\">내림차순 오름차순 함수</a></li>\n<li><a href=\"https://rinae.dev/posts/a-complete-guide-to-useeffect-ko\">useEffect 완벽가이드</a></li>\n</ul>\n<p>Facts: 오늘은 useEffect를 사용해서 제품리스트를 가격순별로 오름차순, 내림차순 별로 볼수있는 기능을 구현했다. useEffect를 사용하면서 이해하지 못했던 것 들을 다시 공부하면서 구현했다. 오름차순 내림차순으로 배열을 정리하는 함수를 만들고 버튼을 클릭할때마다 업데이트해서 사용자가 원하는 리스트를 볼수있도록 만들었다.</p>\n<p>Feelings: 확실히 아는것과, 어느정도 이해한것은 다르다고 생각한다. 나는 지금 몇번 공부하고 사용을 해봐서 어느정도 이해했을뿐 내가 useEffect를 확실히 아는것은 아니라고 생각한다. 확실히 알때까지 보고 쓰고 해야한다.</p>\n<p>Findings: 어떤 것이든지 한번에 만들순 없다. 오늘 가격별 출력을 만들면서 천천히 차례대로 하다보면 원하는 결과에 닿을수 있다는것을 알았다.</p>\n<p>Future Action Plan: 항상 무엇이든 대충 넘어가면 안된다. 나는 앞으로도 차례대로 꼼꼼히 이해하고 대충 넘어가지 않을것이다. 지금의 편함이 나중엔 고통으로 돌아온다고 생각한다.</p>\n<p>Feedback: 하나하나 천천히 차례대로 하는실력은 늘었지만, 확실히 이해하지 못한부분이 많다. 더 집중해야겠다.</p>","frontmatter":{"date":"November 27, 2021","title":"2021-11-27 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-27-TIL7/"}}},{"node":{"id":"bd0a81fd-c9c8-585c-b9a1-d054692deb83","excerpt":"React Hooks 사용하기 React 이벤트 제어 Hooks완정정복 useEffect함수형 컴포넌트에서도 가변적인 상태를 지닐수있게해줌 useState 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 수행할수있도록 설정 할 수있는 HOOK이다.\n클래스형 컴포넌트의 componentDidMount 와 componentDidUpdate…","html":"<ul>\n<li><a href=\"https://velog.io/@velopert/react-hooks\">React Hooks 사용하기</a></li>\n<li><a href=\"https://reactjs-kr.firebaseapp.com/docs/handling-events.html\">React 이벤트 제어</a></li>\n<li><a href=\"https://velog.io/@velopert/react-hooks\">Hooks완정정복</a></li>\n<li>[useEffect]함수형 컴포넌트에서도 가변적인 상태를 지닐수있게해줌</li>\n<li>[useState] 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 수행할수있도록 설정 할 수있는 HOOK이다.\n클래스형 컴포넌트의 componentDidMount 와 componentDidUpdate 를 합친 형태로 봐도 무방하다.</li>\n</ul>\n<p>Facts: 오늘은 useState와 useEffect를 사용해서 검색시스템을 만들어 보았다. 처음에는 useEffect를 직접 써보지 않아서 막상 쓰려고 하기엔 어려운 부분이 있었다. 그래서 나는 직접 간단한 다른 예제를 통해서 useEffect가 대충 어떤식으로 쓰이는지와 왜 쓰는지를 공부하였고 내가 구현하는곳에 적용시켰다. 또, 장바구니 기능을 구현했는데 이번에는 내가 생각하는대로 구성을 하고 어떤식으로 데이터를 저장하고 보여줄지 결정한후 내가 장바구니에 넣은 아이템들이 리스트에 쌓여서 장바구니 화면에 출력할수있도록 구현하였다.</p>\n<p>Feelings: 나는 기능을 구현할때에 생각해보지도 않고 예제에 의존하는 경향이 있다. 확실하게 고쳐야한다.</p>\n<p>Findings: 무조건 예제의 의존하지않고 내가 구성한대로 실행하면 문제를 해결 할 수 있다는것을 알았다. 나는 항상 무엇을 하기전에부터 겁을 먹는다, 그리고 무조건 예제를 찾아본다. 오늘 그래서 나는 장바구니 기능을 만들때처럼 내가 생각하고 구성해서 기능을 완성 할 수 있다는것을 알았다.</p>\n<p>Future Action Plan: 항상 오류는 내 잘못이기 마련이다. 내가 실수하지않으면 오류는 생기지않는다. 어떤 것이든 대충 넘어가지않고 확실히 꼼꼼하게 읽는 능력을 길러야겠다.</p>\n<p>Feedback: 나는 아직도 실수라는 오류를 범한다. 사람은 망각의동물.. 하지만 꾸준히 보는것은 잊어버리지않는다.</p>","frontmatter":{"date":"November 26, 2021","title":"2021-11-26 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-26-TIL6/"}}},{"node":{"id":"a8d117ca-098a-51de-80c1-2c469b93d9ac","excerpt":"className 특정 엘리멘트의 클래스 속성의 값을 가져오거나 설정할수있다. preventDefault 이벤트를 취소할 수 있는 경우, 이벤트의 전파를 막지않고 그 이벤트를 취소합니다. stopPropagation 이벤트 캡쳐링과 버블링에 있어 현재 이벤트 이후의 전파를 막는다. onsubmit 이벤트는 제출버튼 을 눌렀을때 발생하는 이벤트이다. from…","html":"<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Element/className\">className 특정 엘리멘트의 클래스 속성의 값을 가져오거나 설정할수있다.</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Event/preventDefault\">preventDefault 이벤트를 취소할 수 있는 경우, 이벤트의 전파를 막지않고 그 이벤트를 취소합니다.</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Event/stopPropagation\">stopPropagation 이벤트 캡쳐링과 버블링에 있어 현재 이벤트 이후의 전파를 막는다.</a></li>\n<li>onsubmit 이벤트는 제출버튼 을 눌렀을때 발생하는 이벤트이다.</li>\n<li><a href=\"http://www.devkuma.com/books/pages/959\">from과 관련된 기본 클래스</a></li>\n<li><a href=\"http://www.devkuma.com/books/pages/959\">button 기본 클래스</a></li>\n<li><a href=\"https://wonhada.com/?topic=reactjs-props%EC%99%80-state-%EB%B9%84%EA%B5%90\">props와 state 차이점</a></li>\n<li><a href=\"https://poiemaweb.com/js-dom\">DOM 정보</a></li>\n</ul>\n<p>Facts: react form을 이용해서 제품의 이름, 이미지, 계좌번호 전화번호 등등 데이터를 저장하는것을 성공했다. 기능을 쪼개서 하나하나씩 구현했는데, 오늘은 막힘없이 진행했다. 하지만 데이터입력값을 Number로 줬는데 자꾸 입력칸에 String데이터를 입력해서 오류가 나는 것 때문에 시간이 좀 지연되었다. 이것을 해결하기 위해서 내가 잘못한게 있나 오류도 찾아보고 코드도 정리해보고 해서 해결할수있었다.</p>\n<p>Feelings: 항상 내가 잘못 설정하거나, 대충 작성하다가 오류가 발생한다. 왜 작은 코드 하나하나 문법까지 신중하게 쳐야하는걸 인지하지 못하는걸까?</p>\n<p>Findings: 결국 실수는 내 자신에서 나온다는걸 알았다. 내가 실수만 하지않으면 오류는 생기지않는다.</p>\n<p>Future Action Plan: 항상 변수를 설정할때에 변수명, 데이터 타입설정을 꼼하게 보고 설정해야겠다.</p>\n<p>Feedback: 실수는 점점 줄어든다는 것 을 느끼고있다. 앞으로도 하나하나 생각하면서 작성하자.</p>","frontmatter":{"date":"November 25, 2021","title":"2021-11-25 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-25-TIL5/"}}},{"node":{"id":"25db5664-2e68-5104-a537-390e3ad5a302","excerpt":"uesparams의 사용방법 : 현재 url에 전달된 파라미터를 각 컴포넌트에서 받아낼수있다.\n리액트 훅스의 기본 : 클래스형 컴포넌트에서만 사용할수있는 state를 hooks를 사용해서 클래스형 컴포넌트 에서 쓸수있다. Facts…","html":"<ul>\n<li><a href=\"https://john015.netlify.com/react-router-v-5-1-%EB%AC%B4%EC%97%87%EC%9D%B4-%EB%8B%AC%EB%9D%BC%EC%A1%8C%EC%9D%84%EA%B9%8C\">uesparams의 사용방법</a> : 현재 url에 전달된 파라미터를 각 컴포넌트에서 받아낼수있다.\n<a href=\"https://velog.io/@jeonghoheo/React-Hooks%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4%EC%9D%98-%EA%B8%B0%EB%B3%B8-Part-1\">리액트 훅스의 기본</a> : 클래스형 컴포넌트에서만 사용할수있는 state를 hooks를 사용해서 클래스형 컴포넌트 에서 쓸수있다.</li>\n</ul>\n<p>Facts: 오늘은 카테고리메뉴를 구현했는데 코드를 구현하다보니 장애가 많았다. 리액트 기초가 부족하다보니, 중간에 막히는 부분이 많았다.</p>\n<p>Feelings: 기본이 많이 부족하다는 것을 느꼈다. 막상 처음 볼때는 이해가 잘 안가는 것들이 필요할때 보게되니 그전보다 훨씬 이해가 잘되었다.</p>\n<p>Findings: 나는 평소에 공부할때 정리를 안한다는것을 발견했다. 평소에 공부한 것을 정리를 안해놓으니 기억이 나지 않을때나 필요할때에 빨리 기억해내지 못한다는 것이고 아무리 내가 이해했다고 해도 기억이 안날 수 있다.</p>\n<p>Future Action Plan: 이제 어느것을 공부할때에 꼭 메모 해놓고 정리하는 습관을 길러야겠다.</p>\n<p>Feedback: 무엇이든 기초가 가장 중요하다. 기둥이 튼튼하지 않으면 집도 쉽게 무너지듯이 기초가 튼튼하면 어떤 어려운 문제도 해결할수있다.</p>","frontmatter":{"date":"November 21, 2021","title":"2021-11-21 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-21-TIL4/"}}},{"node":{"id":"a3b10703-e24f-5abe-80df-9b9e553ac22f","excerpt":"Facts: 오늘도 마찬가지로 리액트로 categories 부분을 만들었다.\ncategories에 있는 배열에 key값과 products에 있는 key값이 동일하는 제품들을 나열해주는 방식으로 적용해보았다. 이 기능을 구현하는 과정에서 시간이 좀 들었지만 함수는 완성했고 원하는 메뉴를 클릭하면 내가 클릭한 메뉴의 product…","html":"<p>Facts: 오늘도 마찬가지로 리액트로 categories 부분을 만들었다.\ncategories에 있는 배열에 key값과 products에 있는 key값이 동일하는 제품들을 나열해주는 방식으로 적용해보았다. 이 기능을 구현하는 과정에서 시간이 좀 들었지만 함수는 완성했고 원하는 메뉴를 클릭하면 내가 클릭한 메뉴의 product들이 리스트처럼 나열되게 하는것을 구현하려다 끝내지 못했다. 내일 마저 해보려고한다</p>\n<p>Feelings: 리액트 기본을 다시 공부해야할거같다. 처음에 봤을때 이해하지 못했던것들이 있었는데 지금 보면 이해할 수 있을거같다.</p>\n<p>Findings: 나는 오늘 공부하면서 느낀것은 내가 너무 예제에 의존한다는 것 이다. 내 스스로의 코드를 만들어야하는데 너무 예제에 의존하다보니 정작 예제가 없는 내가 필요한 코드를 짜는데에 어려움이 생긴다.</p>\n<p>Future Action Plan: 예제에 너무 의존하지말고 계획하는 부분을 작게 기능을 나누어서 실행하는 습관을 길러야겠다.</p>\n<p>Feedback: 오늘은 너무 집중해서 머리가 아팠다. 물론 문제가 풀리지 않는 이유는 나에게 있다. 천천히 공부량을 늘려가고 기초를 항상 수련해야겠다.</p>","frontmatter":{"date":"November 20, 2021","title":"2021-11-20 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-20-TIL3/"}}},{"node":{"id":"efcfecac-006c-53bd-b49b-1aa19d2a144d","excerpt":"Facts: 웹사이트에 리액트를 사용해서 프론트엔트를 만들고있다.\n그중에서도 쇼핑몰 웹사이트를 만들면서 홈화면을 만들고있는데, 어려운 부분이 많았다. 일단은 카테고리 메뉴 구현 부분에서 문제점이 많았는데 categories 데이터와 products…","html":"<p>Facts: 웹사이트에 리액트를 사용해서 프론트엔트를 만들고있다.\n그중에서도 쇼핑몰 웹사이트를 만들면서 홈화면을 만들고있는데, 어려운 부분이 많았다. 일단은 카테고리 메뉴 구현 부분에서 문제점이 많았는데 categories 데이터와 products 데이터를 나누고 구현하는 과정에서 설계가 잘못되어서 시간을 허비한 것 같다. 어느정도 설계를 하고 실행했어야하는데 나는 그러지 못했다. 이 부분은 시간이 오래 지연될거같아 일단은 제쳐두고 아이템 리스트중 하나를 클릭하면 아이템 데이터가 담긴 페이지로 라우팅 하는 작업을 먼저했다. 일단 할수있는 부분을 먼저하고 내일 다시 하겠다.</p>\n<p>Feelings: 나는 왜 무작정 실행에 옮겼을까? 항상 계획을 할때 진지하게 생각하자</p>\n<p>Findings: 나는 설계하는것이 익숙치 않다. 어느정도라도 계획을 잡고 실행에 옮겨야하는데 나는 일단 시도해본다는게 나에게 걸림돌이 되었다.</p>\n<p>Future Action Plan: 해결하고 싶은 문제가 생기면 일단 키보드에서 손을 떼고 생각한후 계획하는 시간을 가져야겠다. 천천히 연습하자</p>\n<p>Feedback: 오늘도 스스로 에게 화를냈다. 항상 뒤돌아보면 문제는 나한테있었다. 나는 앞으로 어느정도 설계를 하는것을 연습해야겠다.</p>","frontmatter":{"date":"November 19, 2021","title":"2021-11-19 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-19-TIL2/"}}},{"node":{"id":"55c1e61f-de4e-5d82-9570-4f7907e26e0e","excerpt":"GitHub Blog 서비스인 github.io 블로그를 만들었다. Facts: 처음에 gitgub를 이용해서 블로그를 만들어서 minimal mistakes 테마를 적용해서 간편해보이게 만들어보았는데,Jekyll 설치 과정에서 나는 jekyll new wesite-name 이라는 명령어를 사용하지 않았다. 이것은 로컬 repository…","html":"<p>GitHub Blog 서비스인 github.io 블로그를 만들었다.</p>\n<p>Facts: 처음에 gitgub를 이용해서 블로그를 만들어서 minimal mistakes 테마를 적용해서 간편해보이게 만들어보았는데,Jekyll 설치 과정에서 나는 jekyll new wesite-name 이라는 명령어를 사용하지 않았다. 이것은 로컬 repository에 기본 블로그 테마폴더를 설치하는 명령어이다. 나는 공식문서에 나와있는대로 꼼꼼하게 읽지않아 이명령어가 무슨뜻인지 알려고 하지않고 그냥 넘어갔다. 그리고 한참을 헤매며 시간을 허비했다. 하지만 다시 처음부터 메뉴얼대로 꼼꼼히 한 결과 정답을 찾고 해결할수있었다.</p>\n<p>Feelings: 나는 왜 쉬운문제에 오랫동안 시간을 허비했을까? 문제를 너무 쉽게생각했나?</p>\n<p>Findings: 나는 주어진 문제를 꼼꼼히 살피지 않는다. 그래서 이해하지 않았는데도 불구하고 다음글로 넘어간다. 큰 문제다.</p>\n<p>Future Action Plan: 어떤 계획이 생기고 해결해야하는 상황이 찾아오면 주어진 예제를 꼼꼼히 처음부터 끝까지 한문장 한문장 내 머리속에 들어왔다고 생각할때까지 집중해서 읽어야겠다.</p>\n<p>Feedback: 문제가 해결이 안되면 화부터 내지말고 왜 문제가 발생했는지를 찾아보는 사람이 되어야겠다.</p>","frontmatter":{"date":"November 18, 2021","title":"2021-11-18 TIL","tag":["TIL"]},"fields":{"slug":"/2019-11-18-TIL1/"}}},{"node":{"id":"3f69d1fa-72f6-5c9b-9721-950aa66c24a7","excerpt":"Fact nestjs 고양이웹 JWT토큰을 사용한 로그인 구현 공식문서 overView에서 하나씩 공부하면서 사용해보았다. 해당 가입된 고양이 목록 불러오기 구현 Feelings 기존에 nodejs-express…","html":"<h2>Fact</h2>\n<ul>\n<li>nestjs 고양이웹 JWT토큰을 사용한 로그인 구현</li>\n<li>공식문서 overView에서 하나씩 공부하면서 사용해보았다.</li>\n<li>해당 가입된 고양이 목록 불러오기 구현</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>기존에 nodejs-express에서 구현한 구조와 비슷한 구조였다. 그래서 빨리 눈에 들어왔던 것 같다.</li>\n<li>프로그래머스에 올라오는 공고를 보는데 다 바닐라 자바스크립트를 이용한 과제를 많이 내는 것을 보아 순수한 자바스크립트 실력에 비중을 좀더 두는 느낌이 들었다.</li>\n<li>요즘 알고리즘 문제를 안푼다. 게으름을 탈출하자</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>providers - Nest 인젝터에 의해 인스턴스와 되고 적어도 이 모듈에서 공유될수 있는 공급자</li>\n<li>controllers - 인스턴스화되어야하는 모듈에 정의 된 컨트롤러 세트</li>\n<li>imports - 이 모듈에 필요한 공급자를 내보내는 가져온 모듈 목록</li>\n<li>exports - providers 이모듈에서 제공하는 부분집합이며 모듈을 가져오는 다른 모듈에서 사용할수있어야한다.</li>\n<li>pipes는 useParams url에서 id값을 가져올수있는 그런느낌인 것 같은데 지금상태에서 사용할곳이 마땅치않아서 아직 사용을 못해봤다 맞는건가?</li>\n<li>인터셉트는 각각에 있는 재사용성이있는 기능들을 하나의 모듈로 묶는것을 말한다. 미들웨어하고 뭔차이지? 계속 사용해보면서 알아가자</li>\n<li>매번 프로젝트를 할때마다 프론트엔드 백엔드를 둘다 혼자 개발하다보니, 이번에 백엔드만 개발하는데 답답함을 느낀다. postman이라는 것도 처음 써봤고, nestjs에서 제공해주는 Swagger이란 것도 써봤는데 둘다 유용한것 같지만 역시 내가 프론트에서 직접 받아서 테스트를 하는것이 정확하고 제일 편하다는 생각이 든다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>백엔드를 어느정도 구현했기때문에 frontEnd 쪽은 바닐라 자바스크립트로 구현해볼 생각이다. 물론 쓰던것을 사용하는게 편하기도 하겠고, nestjs에서 리액트를 권장하고는 있지만, 나는 순수 자바스크립트가 미숙하기때문에 다양하게 공부를 해볼 예정이다.</li>\n</ul>","frontmatter":{"date":"August 31, 2021","title":"2021-08-31 TIL","tag":["TIL"]},"fields":{"slug":"/2021-08-31-TIL138/"}}},{"node":{"id":"0793cc23-8b41-5613-ad56-b0db1ab18705","excerpt":"Fact 간단하게 고양이 사이트를 만들면서 라우터 서비스를 기능별로 나누었고, 싱글턴 패턴을 적용시켰다. 프로젝트에 mysql와 MongoDB 두개를 연습삼아 연동하면서 기존에 사용하던 명령어를 다시 공부하는 시간을 가졌다. Feelings 완성된 코드를 보면서 정말 깔끔하다는 느낌을 받았다. Findings…","html":"<h2>Fact</h2>\n<ul>\n<li>간단하게 고양이 사이트를 만들면서 라우터 서비스를 기능별로 나누었고, 싱글턴 패턴을 적용시켰다.</li>\n<li>프로젝트에 mysql와 MongoDB 두개를 연습삼아 연동하면서 기존에 사용하던 명령어를 다시 공부하는 시간을 가졌다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>완성된 코드를 보면서 정말 깔끔하다는 느낌을 받았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>기능분리의 중요성을 다시금 깨닫게되었다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>바닐라 자바스크립트 부트캠프 강의를 신청했다. 하던 프로젝트를 마무리하고 빨리 들어야겠다.</li>\n</ul>","frontmatter":{"date":"August 21, 2021","title":"2021-08-21 TIL","tag":["TIL"]},"fields":{"slug":"/2021-08-21-TIL137/"}}},{"node":{"id":"ba774d9a-5cbf-597d-a7a1-2714e77f3494","excerpt":"Fact 새로운 프로젝트를 하면서 기존에 공부했던 것들을 복습하고있다. 원티드 로켓펀치를 보면서 회사들의 기술스택을 보고있다. Feelings 기존에 배웠던 것들을 토대로 새로운 프로젝트를 만들고있는데, 기억이 나지않는 것들이 많았다. 내가 왜 빤스런했을까? 수형이형 말좀 들을걸 나는 1년전 매가 필요한 아이였다. 도망친 곳에 낙원은 없다. Findings…","html":"<h2>Fact</h2>\n<ul>\n<li>새로운 프로젝트를 하면서 기존에 공부했던 것들을 복습하고있다.</li>\n<li>원티드 로켓펀치를 보면서 회사들의 기술스택을 보고있다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>기존에 배웠던 것들을 토대로 새로운 프로젝트를 만들고있는데, 기억이 나지않는 것들이 많았다. 내가 왜 빤스런했을까? 수형이형 말좀 들을걸 나는 1년전 매가 필요한 아이였다.</li>\n<li>도망친 곳에 낙원은 없다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>새롭게 알게되었다기보단 기존에 했던것들을 복습하는 부분이 많았다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>아침에 일어나서 알고리즘 1~2문제씩</li>\n<li>10월 시험준비 전공책 반복해서 읽자</li>\n<li>NestJS로 새로운 프로젝트 진행하기</li>\n<li>10월 큰 시험이 있는데 이 시험만 준비하고 다양한 회사에 원서접수를 해봐야겠다.</li>\n</ul>","frontmatter":{"date":"August 17, 2021","title":"2021-08-17 TIL","tag":["TIL"]},"fields":{"slug":"/2021-08-17-TIL136/"}}},{"node":{"id":"8e25c6ff-934d-545a-b4f9-505989031ec7","excerpt":"Fact…","html":"<h2>Fact</h2>\n<ul>\n<li>파이썬 환경설정을 해봤는데 어떤 느낌인지는 알겠는데, 알고리즘만 푸는데 이게 정말 필요한건지는 잘 모르겠다 그래서 다음에 정말 필요할때 다시해보는게 좋을 것 같다.</li>\n<li>만들어진 가상환경에 필요한 라이브러리나 버전을 설치한후에 파이참에서 해당 가상환경을 가져와서 사용하는 것인가? 맞는지 모르겠다.</li>\n<li>자바 문자열 계산기 테스트코드를 다 작성했다.</li>\n<li>책에 나와있는 빅오 표기법을 다시 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>pyenv를 설치했는데 자꾸 찾을수 없다고 나와서 시간을 좀 소모했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>파이썬에서는 한 라이브러리에 하나의 버전만 설치가 가능하다고 한다. 여러개의 프로젝트를 진행하게 되면 이는 문제가 생긴다. 작업을 바꿀때마다 다른 버전의 라이브러리를 설치해야한다. 얼마나 거지같은 일인가..?\n이를 방지하기 위한 격리된 독립적인 가상환경을 제공한다. 일반적으로 프로젝트마다 다른 하나의 가상환경을 생성한 후 작업을 시작한다.</li>\n<li>가상환경의 대표적인 모듈은 3가지 있다.</li>\n<li>venv : Python 3.3 버전 이후 부터 기본모듈에 포함됨</li>\n<li>virtualenv : Python 2 버전부터 사용해오던 가상환경 라이브러리, Python 3에서도 사용가능</li>\n<li>conda : Anaconda Python을 설치했을 시 사용할 수있는 모듈</li>\n<li>pyenv : pyenv의 경우 Python Version Manger임과 동시에 가상환경 기능을 플러그인 형태로 제공</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>파이썬으로도 TDD를 사용해서 문제를 풀도록 해봐야겠다.</li>\n</ul>","frontmatter":{"date":"August 13, 2021","title":"2021-08-13 TIL","tag":["TIL"]},"fields":{"slug":"/2020-08-13-TIL133/"}}},{"node":{"id":"d8216b2a-6f99-5c2f-8ff1-03baab1c47a4","excerpt":"Fact 파이썬과 파이참을 설치했다. 구매한 책에는 파이썬에 대한 기본적인 설명이 없어서 인터넷을 참고하면서 변수 설정 방법이나 함수 정의 방법을 직접 쳐보면서 공부했다. 간단하게 반복문으로 풀수 있는 문제들을 풀어보면서 익숙해지도록 노력했다. Feelings…","html":"<h2>Fact</h2>\n<ul>\n<li>파이썬과 파이참을 설치했다. 구매한 책에는 파이썬에 대한 기본적인 설명이 없어서 인터넷을 참고하면서 변수 설정 방법이나 함수 정의 방법을 직접 쳐보면서 공부했다.</li>\n<li>간단하게 반복문으로 풀수 있는 문제들을 풀어보면서 익숙해지도록 노력했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>파이썬은 쉬운 언어라고 들었는데 역시 처음은 다 어렵다.</li>\n<li>확실히 책에는 기초부분이 생략된 부분이 많아서 이해하기 어려운 부분이 많은 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>파이썬은 다음과 같은 람다 표현식을 지원한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt;&gt; list(map(lambda x: x + 10, [1, 2, 3]))\n[11, 12, 13]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>다음은 홀수인 경우 2를 곱해 출력하라는 리스트 컴프리헨션이다. range는 처음보는데, 내가 찾아본대로는 1부터 10까지의 수를 차례대로 가져오는 함수다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt;&gt; [n * 2 for n in range(1, 10 + 1) if n % 2 == 1]\n[2, 6, 10, 14, 18]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>만약 리스트 컴프리 헨션을 사용하지 않으면 이렇게 풀어 작성해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&gt;&gt;&gt; a = []\n&gt;&gt;&gt; for n in range(1, 10 +1);\n        if n % 2 == 1;\n            a.append(n * 2)\n&gt;&gt;&gt; a\n[2, 6, 10, 14, 18]</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>리스트 외에도 딕셔너리 등이 가능하도록 추가됐다. 둘다 너무 무분별하게 작성할 경우 가독성을 떨어트릴 수 있다.</li>\n<li>만약 생성할 숫자가 100만 개쯤이면 메모리에 적지 않은 공간을 차지할 것이고, 생성 시간도 오래걸린다. 그러나 제네레이터를 리턴하듯 range 클래스만 리턴하면 생성 조건만 정해두고 나중에 필요할때 꺼내쓸 수 있으니 메모리를 효율적으로 사용할 수 있다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>3달안에 다 읽는다는 마인드로 파이썬 알고리즘 책을 읽어 나가야겠다.</li>\n<li>확실히 파이썬은 변수를 설정한다거나 함수를 정의하는 방법등이 간편하고, 한눈에 알아보기 쉽다.</li>\n</ul>","frontmatter":{"date":"August 11, 2021","title":"2021-08-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-08-11-TIL132/"}}},{"node":{"id":"6c6e5082-f9ff-5843-bc41-e0edf4eb8628","excerpt":"Fact 문제를 어떻게 풀 것인가 책을 50페이지 읽었다. 항상 걸림돌이였던 알고리즘을 어떻게 해결해야할까 생각을 해보았다. Feelings 내가 그동안 취업에대한 열망이 부족했었다는 것을 느꼈다. 안일했던 나 자신을 반성하며 시간을 보냈다. Findings 오늘 많은 생각을했다. Future Action…","html":"<h2>Fact</h2>\n<ul>\n<li>문제를 어떻게 풀 것인가 책을 50페이지 읽었다.</li>\n<li>항상 걸림돌이였던 알고리즘을 어떻게 해결해야할까 생각을 해보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>내가 그동안 취업에대한 열망이 부족했었다는 것을 느꼈다.</li>\n<li>안일했던 나 자신을 반성하며 시간을 보냈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>오늘 많은 생각을했다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>코딩테스트를 준비할것이다. 예전처럼 어려운문제를 피하기보단 도전하는 방향으로 시작할 것 이다</li>\n<li>졸업을 하려면 마지막으로 정보처리기사 자격증이 필요하다. 사실 정말 필요없을 것 같은 자격증인데, 네트워크관리사등 2개를 따고 마지막 하나 남았다. 10월에 시험인데 하루에 2시간씩 정처기 책을 보긴해야겠다.</li>\n<li>다른공부는 어떻게 진행해야할지 생각해보아야겠다.</li>\n</ul>","frontmatter":{"date":"August 11, 2021","title":"2021-08-11 TIL","tag":["TIL"]},"fields":{"slug":"/2021-08-11-TIL135/"}}},{"node":{"id":"89f4f879-1e6e-5013-aff8-61b3097d6773","excerpt":"Fact 뭘 해야할까 Feelings 뭘 해야할지 모르겠다 Findings 머리속에 기억나는게 없다 Future Action 매일 백준 알고리즘 문제를 풀어야겠다 스프링5 프로그래밍 입문책 챕터를 나가야겠다.","html":"<h2>Fact</h2>\n<ul>\n<li>뭘 해야할까</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>뭘 해야할지 모르겠다</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>머리속에 기억나는게 없다</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>매일 백준 알고리즘 문제를 풀어야겠다</li>\n<li>스프링5 프로그래밍 입문책 챕터를 나가야겠다.</li>\n</ul>","frontmatter":{"date":"August 10, 2021","title":"2021-08-10 TIL","tag":["TIL"]},"fields":{"slug":"/2021-08-10-TIL134/"}}},{"node":{"id":"8ae04b11-ff6b-5c31-a0cf-554afec50271","excerpt":"Fact 청년수당 활동 기록서를 작성했다. 여행 경로 알고리즘 문제를 복습했다. 코어자바 9 4장을 다시 공부했는데 책에서 나와있는 enum 자체는 정말 쉬운데 응용하는 방법에따라서 정말 이해가 안가는 부분이 많았다. 레이싱경주2에 enum을 사용해보았다. Feelings…","html":"<h2>Fact</h2>\n<ul>\n<li>청년수당 활동 기록서를 작성했다.</li>\n<li>여행 경로 알고리즘 문제를 복습했다.</li>\n<li>코어자바 9 4장을 다시 공부했는데 책에서 나와있는 enum 자체는 정말 쉬운데 응용하는 방법에따라서 정말 이해가 안가는 부분이 많았다.</li>\n<li>레이싱경주2에 enum을 사용해보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자바를 제대로 쓰는것은 정말 어렵다.</li>\n<li>내가 먼저 코드를 작성하고 다른사람들과 비교해보는게 더 실력이 늘까 아니면 먼저 제대로된 코드를 보고 공부하는 것이 실력이 늘까? 고민이된다.</li>\n<li>enum으로 정리하긴했지만, 내가 정말 enum에 알고서 제대로 쓰는건지 모르겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>열거 타입의 각 인스턴스는 유일하므로 열거 타입 값에 equals 메서드를 사용할 필요가 전혀 없다. 열거 타입 값을 비교할 때는 그냥 == 를 사용하면 된다.</li>\n<li>toString 메서드를 구현하지 않아도 된다. 열거 객체의 이름을 돌려주는 toString 메서드를 자동으로 제공하기 때문이다. toString의 역은 각 열거 타입에 맞게 만들어지는 정적 메서드 valueOf이다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>오늘 파이썬으로 알고리즘 문제를 풀려고했는데, 파이썬 책을 집에 두고와서 자바스크립트로 문제를 풀었다. 다음주부터 시작해야겠다.</li>\n</ul>","frontmatter":{"date":"August 07, 2021","title":"2021-08-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-08-07-TIL131/"}}},{"node":{"id":"e6011835-047d-56a0-a9c1-7cd14a53c44d","excerpt":"Fact 프로그래머스 2렙 문제 풀기 올바른 괄호 문제를 풀었다. 처음 했던 방식으로 이중 for문으로 풀었는데 빠른속도로 채점이 되었던 것에 비해서 효율성을 통과하지못했다. 그래서 반복문을 하나쓰고 처음부터 체크해나가는 식으로 문제를 풀었다. 정말 이상한 문제다. 자바 문익점 1주차…","html":"<h2>Fact</h2>\n<ul>\n<li>[프로그래머스 2렙 문제 풀기] 올바른 괄호 문제를 풀었다. 처음 했던 방식으로 이중 for문으로 풀었는데 빠른속도로 채점이 되었던 것에 비해서 효율성을 통과하지못했다. 그래서 반복문을 하나쓰고 처음부터 체크해나가는 식으로 문제를 풀었다. 정말 이상한 문제다.</li>\n<li>자바 문익점 1주차 2단계 문자열 계산기 코드 작성하기. 과연 내가 짜는 자바 코드가 이상적인 코드인지를 고민하다가 그전에 넥스트스텝 GitHub에서 Merge 된 코드들을 보고 리뷰들을 보면서 내가 작성한 코드와 비교하면서 공부했다.</li>\n<li>코어 자바 9 책 읽기</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>프로그래머스에는 정말 이상한 문제들이 많다.</li>\n<li>오늘 다른사람들의 코드를 봤는데 확실히 내가 자바가 익숙하지 않다는 것을 느꼈다.</li>\n<li>천천히 공부한다는 마인드로 공부하면서 완벽하게 익히고 넘어가야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>오늘 다른사람들이 작성한 코드를 보면서 내가 몰랐던 코드를 많이 봤는데 그중에서 enum에 대해서 공부해 보았다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>내일부터는 파이썬을 설치해서 알고리즘 문제를 풀도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"August 05, 2021","title":"2021-08-05 TIL","tag":["TIL"]},"fields":{"slug":"/2020-08-05-TIL130/"}}},{"node":{"id":"4b53081a-8a03-5d79-9983-e21c200f70db","excerpt":"Fact 프로그래머스 2레벨 문제 H-index 문제를 푸는 시간을 가졌다. 생각 외로 쉽게 풀었다. 문제를 이해하는 시간이랑 코드를 작성하는 시간이랑 비슷했던 것 같다. 이번 문제도 문제를 잘못 이해하면 풀 수 없는 문제였다. 넥스트스텝…","html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 2레벨 문제 H-index 문제를 푸는 시간을 가졌다. 생각 외로 쉽게 풀었다. 문제를 이해하는 시간이랑 코드를 작성하는 시간이랑 비슷했던 것 같다. 이번 문제도 문제를 잘못 이해하면 풀 수 없는 문제였다.</li>\n<li>넥스트스텝 1단계를 다시 천천히 작성하면서 연습했다. 처음 했던 것보다는 쉬웠지만, 오랜만에 다시 테스트코드를 사용해서 코드를 작성하니 좀 어려운 부분이 있었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>요구 사항만 따라서 가다 보니 만약 요구 사항이 없을 때 내가 혼자 스스로 테스트코드를 작성할 수 있을까 고민이 된다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>알고리즘을 풀 때 문제를 완벽하게 이해하는 것 이 중요하다는 것을 알았다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>로또게임을 만들다가 알고리즘 테스트 때문에 멈춘 상태였는데 이번 주에 넥스트 스텝 과제를 다 직접 테스트코드로 만들어 봐야겠다.</li>\n</ul>","frontmatter":{"date":"August 04, 2021","title":"2021-08-04 TIL","tag":["TIL"]},"fields":{"slug":"/2020-08-04-TIL129/"}}},{"node":{"id":"5405675b-ba0b-565c-82a4-1fa8e03c7d8d","excerpt":"Fact 레벨 3 여행경로 문제를 풀었다. 약간의 도움을 받긴했지만, 재귀함수가 익숙해졌다는 느낌이 들어서 뿌듯했고, 그전에 풀지 못해던 문제를 오늘 풀 수 있게 되어서 기분이 좋았다. Feelings 오늘은 알고리즘을 푸는데 시간을 오래 쓴 것 같다. 그래도 dfs문제를 풀수있다는 자신감이 생겨서 좋다. Findings…","html":"<h2>Fact</h2>\n<ul>\n<li>레벨 3 여행경로 문제를 풀었다. 약간의 도움을 받긴했지만, 재귀함수가 익숙해졌다는 느낌이 들어서 뿌듯했고, 그전에 풀지 못해던 문제를 오늘 풀 수 있게 되어서 기분이 좋았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘은 알고리즘을 푸는데 시간을 오래 쓴 것 같다. 그래도 dfs문제를 풀수있다는 자신감이 생겨서 좋다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>자바에서도 람다 표현식을 사용할 수가 있다. 하지만 자바는 거의 모든 것이 객체인 객체 지향 어어다. 자바에는 함수 타입이 없다. 그 대신 객체(특정 인터페이스를 구현하는 클래스의 인스턴스)로 함수를 표현한다. 람다는 이런 인스턴스를 생성하는 아주 편리한 문법을 제공한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Runnable task = () -&gt; { for (int i = 0; i &lt; 1000; i++) dowork(); }\nlist.removeIf(e -&gt; e ==null);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>Future Action</h2>\n<ul>\n<li>앞으로 아침에는 2~3시간 알고리즘 푸는시간을 가지고, 나머지 시간을 책을 읽으면서 직접 쳐보면서 이해하고, 읽은 책의 내용을 토대로 넥스트스텝을 처음부터 다시 구현하도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"July 30, 2021","title":"2021-07-30 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-30-TIL128/"}}},{"node":{"id":"ce9c83d9-077b-5fcb-8c75-afd542702071","excerpt":"Fact 프로그래머스 3레벨 네트워크 문제, 타겟넘버 문제를 풀었다. 문제 자체가 이해가 잘 안가는 부분이 많았다. 공부 우선순위를 정하기위해 내가 가고싶은 회사에서 필요로하는 사항들을 엑셀로 정리했다. 자바 인터페이스에 대해서 다시 공부했다. Feelings 레벨 3 네트워크 문제를 풀면서 DFS…","html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 3레벨 네트워크 문제, 타겟넘버 문제를 풀었다. 문제 자체가 이해가 잘 안가는 부분이 많았다.</li>\n<li>공부 우선순위를 정하기위해 내가 가고싶은 회사에서 필요로하는 사항들을 엑셀로 정리했다.</li>\n<li>자바 인터페이스에 대해서 다시 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>레벨 3 네트워크 문제를 풀면서 DFS문제를 복습하고있는데, 정말 어렵다.</li>\n<li>인터페이스 부분을 다시 보고있는데, 처음 봤던 것보다 더 확실하게 이해가 되는느낌이다. 다시 쳐보면서 결과를 확인하고 있다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>T 타입의 모든 값을 변환 없이 S타입의 변수에 할당할 수 있다면 S타입은 T타입(서브타입)의 슈퍼타입이다. 반대로 슈퍼타입 -> 서브타입으로 변환해야 할 때도 있다. 이때는 캐스트(강제 변환)을 사용한다. 다음과 같이 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">IntSequence sequence = ...;\nDigitSequence digits = (DigitSequence) sequence;\nSystem.out.println(digits.rest());</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>주의할 점은 객체는 실제 클래스나 그 슈퍼타입으로만 캐스트할 수 있다. 잘못 캐스트하면 컴파일 시간 오류나, 클래스 캐스트 예외(ClassCastException)가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">String digitString = (String) sequence; // 불가능하다 IntSequence는 String의 슈퍼타입이 아니다.\nRandomSequence randoms = (RandomSequence) sequence; // 작동 가능성은 있지만, 불가능하면 클래스 캐스트 예외를 던진다.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>예외가 일어나지 않게 하려면 먼저 객체가 원하는 타입인지 instanceof 연산자로 검사해야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">object instanceof Type\n\nif(sequence instanceofe DigitSequence) {\n    DigitSequence digits = (DigitSequence) sequence;\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이 표현식은 object가 Type을 슈퍼타입으로 둔 클래스의 인스턴스일 때 true를 반환한다.</p>\n<ul>\n<li>인터페이스는 또 다른 인터페이스를 확장해서 원래 있던 메서드 외의 추가 메서드를 요구하거나 제공할 수 있다. 예를 들어 Closeable은 메서드가 한개만 있는 인터페이스다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">public interface Closeable {\n    void close();\n}\n\npucblic interface Channel extends Closeable {\n    boolean isOpen();\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>클래스는 인터페이스를 몇개든 구현할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">public class FileSequence implements IntSequence, Closeable {\n    ...\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>인터페이스에 정의한 변수는 자동으로 public static final이 된다. 예를 들어 다음 swingConstants 인터페이스는 나침반 방향을 나타내는 상수를 정의한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">public interface SwingConstantss {\n    int NORTH = 1;\n    int NORTH_EAST = 2;\n    int EAST = 3;\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>인터페이스에 기본메서드를 작성하기 위해서는 메소드 앞에 default를 붙여야 한다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>이번주 내에 DFS문제를 다 풀어봐야겠다.</li>\n<li>객체지향에 익숙해지도록 책에 있는 예제들을 손으로 쳐보면서 확인해야겠다.</li>\n</ul>","frontmatter":{"date":"July 28, 2021","title":"2021-07-28 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-28-TIL127/"}}},{"node":{"id":"b89a2d5d-a1a1-5a72-80d8-cf2293369c72","excerpt":"Fact 풍덩 웹 백엔드를 개발하면서 로그인 부분을 구현하고있는데, 사소한 테스트까지 작성하면서 코드를 작성하고있다. Feelings 테스트 주도개발은 정말 어렵다.. 자바로 했을때도 어려웠는데, 새롭게 자바스크립트로 하니 처음보는 코드가 너무 많다. Findings…","html":"<h2>Fact</h2>\n<ul>\n<li>풍덩 웹 백엔드를 개발하면서 로그인 부분을 구현하고있는데, 사소한 테스트까지 작성하면서 코드를 작성하고있다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>테스트 주도개발은 정말 어렵다.. 자바로 했을때도 어려웠는데, 새롭게 자바스크립트로 하니 처음보는 코드가 너무 많다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>테스트 하나하나를 정말 꼼꼼히 실패할 경우까지 에러메세지로 테스트를 작성해보았는데, 정말 기능을 구현하는 것이 쉽다고 느껴졌다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>프로젝트 마지막 남은 기간동안 테스트주도 개발을 더 연습해야겠다.</li>\n</ul>","frontmatter":{"date":"July 16, 2021","title":"2021-07-16 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-16-TIL126/"}}},{"node":{"id":"8e5b2587-43ce-529c-905a-c2a257d83e86","excerpt":"Fact…","html":"<h2>Fact</h2>\n<ul>\n<li>월요일부터 엔젤핵 해커톤을 준비하기 위해서 같이 해커톤에 나가는 분들과 같이 모여서 회의하고, 어떤 기능을 넣을지 정하는 시간을 가졌다.</li>\n<li>본격적으로 오늘부터 개발을 시작했다. 백엔드 개발을 맡았는데, 처음에 자동 배포를 끝내고, 라우터를 분리하는 작업을 했다. 일단 로그인 라우터를 만들었고, 로그인이 실패했을 때와 성공했을 때의 테스트 코드를 작성하고 마무리했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>처음 나가는 해커톤이지만 꼭 1등 하고 싶다.</li>\n<li>일주일 만에 완성된 프로그램을 만든다는 것이 정말 어렵다는 것을 느낀다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>JWT을 사용해서 로그인을 구현하고 있다. 처음에는 세션과 쿠키만을 사용해서 로그인을 구현했지만, 새로운 방법을 사용해보고자 JWT의 사용법을 익히고, 새로운 프로젝트에 적용하고 있다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>오늘 첫 개발 작업을 시작했는데, 처음이라 속도가 무뎌진 것 같다. 속도를 올려서 내일 로그인 기능을 다 구현하고, 다른 기능도 구현하도록 해야겠다.</li>\n<li>같이 일하는 동료와 다툼없이 행복코딩을 해야겠다.</li>\n</ul>","frontmatter":{"date":"July 14, 2021","title":"2021-07-14 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-14-TIL125/"}}},{"node":{"id":"a13b5899-b219-5acc-99d8-14be7be4697c","excerpt":"Fact 부스트캠프 알고리즘 테스트 문제를 풀었다. 문제 1은 무난하게 풀었다. 구현 문제였다. 문제 2는 DFS를 이용해야 하는 문제였다. 하나의 케이스를 찾지 못해서 풀지 못했다. 시험이 끝나고 따로 시간을 내서 풀긴 했지만, 너무 아쉬웠다. Feelings 3레벨의 다양한 문제들을 풀어볼 필요성을 느꼈다. 아직 재귀함수 DFS BFS…","html":"<h2>Fact</h2>\n<ul>\n<li>부스트캠프 알고리즘 테스트 문제를 풀었다.</li>\n<li>문제 1은 무난하게 풀었다. 구현 문제였다.</li>\n<li>문제 2는 DFS를 이용해야 하는 문제였다. 하나의 케이스를 찾지 못해서 풀지 못했다. 시험이 끝나고 따로 시간을 내서 풀긴 했지만, 너무 아쉬웠다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>3레벨의 다양한 문제들을 풀어볼 필요성을 느꼈다.</li>\n<li>아직 재귀함수 DFS BFS문제에 익숙하지 않다. 훈련이 부족했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>나 자신의 위치를 깨달았다. 알고리즘 훈련이 더 필요하다. 알고리즘 강도를 올려야겠다.</li>\n<li>2레벨의 구현 문제는 이제 막힘없이 풀 수 있다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>하루에 알고리즘 2~3렙 문제는 하나 꼭 풀도록 해야겠다.</li>\n<li>문제를 풀 때 계획을 세우는 것은 익숙해졌지만, 아직 풀어보지 않은 문제를 만나면 시간을 많이 잡아먹는다는 것 을 느낀다. 다양한 많은 문제를 풀어보면서 훈련해야겠다.</li>\n</ul>","frontmatter":{"date":"July 11, 2021","title":"2021-07-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-11-TIL124/"}}},{"node":{"id":"efb3bfd1-b6f9-516b-8782-2819c87b007f","excerpt":"Fact 재귀 함수 팩토리얼 문제, 피보나치수열 문제를 풀었다. 프로그래머스 3레벨 단어 변환 문제를 다시 풀었다. Feelings 3렙 문제를 재귀함수로 풀려고 하니 조건도 너무 많고, 이해가 안 되는 부분이 많았다.\n풀 방법이 떠오르지 않을 때는 어떻게 해야 할까? 간단한 재귀함수 문제를 풀고 바로…","html":"<h2>Fact</h2>\n<ul>\n<li>재귀 함수 팩토리얼 문제, 피보나치수열 문제를 풀었다.</li>\n<li>프로그래머스 3레벨 단어 변환 문제를 다시 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>3렙 문제를 재귀함수로 풀려고 하니 조건도 너무 많고, 이해가 안 되는 부분이 많았다.\n풀 방법이 떠오르지 않을 때는 어떻게 해야 할까?</li>\n<li>간단한 재귀함수 문제를 풀고 바로 3렙 문제를 도전했는데 역시 쉽지않았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>원래 알고 있었던 정보지만 다시 정리해본다.\n프로그래밍에서 재귀란 자신을 정의할 때 자기 자신을 재참조하는 것을 말한다. 함수 내부에서 자기 자신을 다시 호출하는 재귀 호출의 형태를 말한다.</li>\n<li>string 문자열은 인덱스로 접근 가능하다.</li>\n<li>재귀 함수로 작성할 때 재귀 함수 메소드를 따로 만들어서 구현하는 방법이 효율적이다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>아직 복잡한 문제를 재귀 함수로 풀기에는 무리가 있는 것 같다. 내가 어디까지 알고 있는지 정리하고, 모르는 것이 무엇인지 파악하고 다시 문제를 풀어봐야겠다.</li>\n</ul>","frontmatter":{"date":"July 07, 2021","title":"2021-07-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-07-TIL124/"}}},{"node":{"id":"454f4dcf-3167-57ad-b9e9-74e05bc857ef","excerpt":"Fact 오늘은 부스트 캠프 알고리즘 테스트를 봤다. 내가 풀었던 문제를 Daliy-ps에 정리했다. Feelings 첫 번째 문제는 별로 어렵지 않았다. 평소에 풀던 문제 보다 쉬운 문제였다. 두 번째 문제는 테스트 코드를 연습할 수 있는 문제였다. 처음 Hash 와 set…","html":"<h2>Fact</h2>\n<ul>\n<li>오늘은 부스트 캠프 알고리즘 테스트를 봤다.</li>\n<li>내가 풀었던 문제를 Daliy-ps에 정리했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>첫 번째 문제는 별로 어렵지 않았다. 평소에 풀던 문제 보다 쉬운 문제였다.</li>\n<li>두 번째 문제는 테스트 코드를 연습할 수 있는 문제였다. 처음 Hash 와 set를 사용하지 말라는 조건 있었으나 문제없이 풀었다.</li>\n<li>아쉬웠던 점은 확실한 정답을 확인할 수 없었다는 점이다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>재미있는 시험이었다. 시간 가는 줄 몰랐다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>앞으로도 매일 시간을 내서 알고리즘 문제를 풀도록 해야겠다.</li>\n<li>문제를 작게 쪼개고 단위 테스트로 문제를 푸는 습관을 들여야겠다.</li>\n</ul>","frontmatter":{"date":"July 04, 2021","title":"2021-07-04 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-04-TIL123/"}}},{"node":{"id":"48b5a501-29fc-5084-a684-a2afd175a080","excerpt":"Fact 프로그래머스 피보나치 수, 단어 변환 문제등 오늘 하루 종일 알고리즘 문제를 풀었다. Feelings 피보나치수열에 대해서 공부하고 피보나치 수 문제를 for 문 으로도 풀어보고, 재귀 함수 방법으로도 풀어봤다. 피보나치는 재귀 함수로 구현했지만 단어 변환은 재귀 함수로 푸는게 쉽지 않았다. Findings 나는 아직 깊이/너비 우선 탐색(DFS…","html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 피보나치 수, 단어 변환 문제등 오늘 하루 종일 알고리즘 문제를 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>피보나치수열에 대해서 공부하고 피보나치 수 문제를 for 문 으로도 풀어보고, 재귀 함수 방법으로도 풀어봤다. 피보나치는 재귀 함수로 구현했지만 단어 변환은 재귀 함수로 푸는게 쉽지 않았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>나는 아직 깊이/너비 우선 탐색(DFS/BFS) 문제가 익숙하지 않다는 것을 알았다. 재귀 함수를 푸는 능력이 부족하다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>재귀 함수를 사용하는 다양한 문제를 풀어봐야겠다. 오늘 2문제를 풀었지만, 아직 정확하게 사용방법을 모르는 것 같다. 오늘 밤도 재귀함수 문제를 풀고 자야겠다.</li>\n</ul>","frontmatter":{"date":"July 03, 2021","title":"2021-07-03 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-03-TIL122/"}}},{"node":{"id":"fd934ee9-882e-5711-a668-a7041ad1311f","excerpt":"Fact 알고리즘 다음 큰 숫자 문제를 풀었다. 알고리즘 타겟 넘버 문제를 풀었다. 알고리즘 피보나치 수 문제를 풀려다가 문제 지문이 이상한 것을 보고 피보나치 수열에 대해서 공부했다. Feelings 역시 알고리즘은 수학이 중요하다는 것을 느꼈다. Findings 평소에 피보나치 수열에 관심이 없었는데 이번에 공부하였다. Future Action…","html":"<h2>Fact</h2>\n<ul>\n<li>알고리즘 다음 큰 숫자 문제를 풀었다.</li>\n<li>알고리즘 타겟 넘버 문제를 풀었다.</li>\n<li>알고리즘 피보나치 수 문제를 풀려다가 문제 지문이 이상한 것을 보고 피보나치 수열에 대해서 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>역시 알고리즘은 수학이 중요하다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>평소에 피보나치 수열에 관심이 없었는데 이번에 공부하였다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>매일매일 꾸준히 알고리즘 문제를 풀어야겠다.</li>\n</ul>","frontmatter":{"date":"July 01, 2021","title":"2021-07-01 TIL","tag":["TIL"]},"fields":{"slug":"/2020-07-01-TIL121/"}}},{"node":{"id":"9ec12f78-e835-52ec-8153-4d3a97fd6983","excerpt":"Fact 프로그래머스 레벨2 폰켓몬 문제를 풀었다. 레벨 2지만 쉽게 이해만 한다면 정말 쉽게 풀수있는 문제였다. 자바 인터페이스에 대해서 복습하고 직접 사용해보았다. Feelings…","html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 레벨2 폰켓몬 문제를 풀었다. 레벨 2지만 쉽게 이해만 한다면 정말 쉽게 풀수있는 문제였다.</li>\n<li>자바 인터페이스에 대해서 복습하고 직접 사용해보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알고리즘 문제를 보면 막상 문제를 이해하는 것은 어려운데 알고리즘을 짜는 것은 쉬운 문제들이 있다.</li>\n<li>역시 다양한 풀이 방법을 외우는 것이 정말 중요하고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>인터페이스는 서비스 공급자와 자신의 객체를 이 서비스에 사용하고 싶은 클래스 간의 계약을 기술하는 메커니즘이다.</li>\n<li>기본 구현을 작성하지 않고 선언만 한 메서드를 추상 메서드라고 한다.</li>\n<li>인터페이스의 모든 메소드는 자동으로 public이 된다. 그러므로 일일이 선언해 줄 필요가 없다. 하지만 일부 프로그래머들은 의도를 더 명확하게 드러내기 위해 public으로 선언하기도 한다.</li>\n<li>인터페이스를 구현하는 클래스는 인터페이스 메서드를 반드시 public으로 선언해야 한다. 그렇지 않으면 클래스의 메서드는 기본적으로 패키지 접근이 된다.</li>\n<li>인터페이스를 따르는 클래스는 그 해당 인터페이스의 모든 메서드를 구현한다. 만약 일부만 구현한다면, 해당 클래스는 반드시 abstract 제어자로 선언해야 한다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>책을 여러 개를 보기보다는 한 책을 꾸준히 읽어서 마스터한다는 마인드로 책을 읽어야겠다.</li>\n</ul>","frontmatter":{"date":"June 30, 2021","title":"2021-06-30 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-30-TIL120/"}}},{"node":{"id":"7826c36e-97d1-51f0-8ab4-cda41b066536","excerpt":"Fact 오늘 기봉이 형과 캐시 알고리즘 문제를 풀었다.\n(https://programmers.co.kr/learn/courses/30/lessons/17680) 영규: 숨겨진 엣지 케이스가 있는 문제였다. 재미있게 풀었다.\n기봉: 오늘도 즐거운 짝 프로그래밍이였다. 챕터…","html":"<h2>Fact</h2>\n<ul>\n<li>오늘 기봉이 형과 캐시 알고리즘 문제를 풀었다.\n(<a href=\"https://programmers.co.kr/learn/courses/30/lessons/17680\">https://programmers.co.kr/learn/courses/30/lessons/17680</a>)</li>\n</ul>\n<p>영규: 숨겨진 엣지 케이스가 있는 문제였다. 재미있게 풀었다.\n기봉: 오늘도 즐거운 짝 프로그래밍이였다.</p>\n<ul>\n<li>챕터 2 자바 로또게임을 구현하고 있다. 로또 랜덤 배열 출력을 끝냈고, 이제 정렬하고 정답을 맞춰서 출력하는 기능만 남았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘 로또게임을 구현하면서 객체지향적으로 코드를 작성한다는 것이 정말 어려웠다. 로또를 객체지향적으로 구현한다고 생각하면 로또 티켓들을 가지고 있는 Lottos와 Lotto, 그리고 로또 안에 있는 숫자를 가진 LottoNumbers로 나누어서 최대한 객체지향적으로 분리하도록 노력했지만, 내가 작성한 코드가 정답인지 모르겠다.</li>\n<li>오늘 자바로 카카오 DFS 문제를 풀려고 했는데, 익숙하지 않은 자바로 한 번도 풀어보지 않은 DFS 문제를 풀려고 하니 엄두가 나지 않아서 더 간단한 DFS 문제를 풀어보고 접근하도록 해야겠다고 생각했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>메소드의 타입을 정해주는 것이 오늘 삽질을 통해서 정말 중요하다는 것을 알았다.</li>\n<li>LRU 페이지 교체 알고리즘에 대해서 알게 되었다. 캐시 문제를 풀려면 이용해야 하는 알고리즘인데 그렇게 어렵지 않아서 쉽게 공부했다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>메소드의 타입을 일치시키지 않는 바람에 에러가 발생해서 애를 먹었다. 그놈의 타입떄문에 너무 열이 받지만, 이번 삽질을 통해서 다음부터는 절대 타입 때문에 에러가 발생하는 일이 없도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"June 25, 2021","title":"2021-06-25 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-25-TIL118/"}}},{"node":{"id":"376009d8-a3ab-59ba-8a51-682b79ffb2b5","excerpt":"Facts 그때 풀지 못했던 문자열 압축하기 문제를 풀었다. 레디스에 에러가 발생해서 로그인이 안 되는 상황이 발생했다. 챕터 2 로또게임을 천천히 테스트 코드를 작성하면서 구현하고 있다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>그때 풀지 못했던 문자열 압축하기 문제를 풀었다.</li>\n<li>레디스에 에러가 발생해서 로그인이 안 되는 상황이 발생했다.</li>\n<li>챕터 2 로또게임을 천천히 테스트 코드를 작성하면서 구현하고 있다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>내가 만든 웹사이트를 접속하면 한 달 간격으로 한 개씩 에러가 발생하는 것을 찾을 수 있었다. 이러한 문제를 보고 정말 디버깅이 중요하다는 것을 알았다.</li>\n<li>문자열 압축 문제를 풀다가 문제에 마지막에 있는 글 한 줄을 못 봐서, 문제를 엄청 어렵게 이해를 한 것 같다. 주어진 마지막 조건을 봤으면 쉽게 풀었을 문제인데 역시 문제를 끝까지 읽는 것이 중요하다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Redis에서 MISCONF Redis is configured to save RDB snapshots error라는 에러가 발생했는데, Redis가 통신이 끊기는 다양한 이유가 존재하는데 그 이유 중 하나가 persistent를 위해서 BGSAVE로 rdb를 만들어내는 것이다. 그런데 기본적으로 BGSAVE가 실패하면 Redis는 설정에 따라 Write 커맨드를 전부 거부한다. 그래서 나는 EC2 인스턴스에 도커로 올려놓은 Redis 환경에서 redis-cli를 접속한 후</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">config set stop-writes-on-bgsave-error no</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>명령어로 에러를 해결했다.</p>\n<h2>Future Action Plan</h2>\n<ul>\n<li>앞으로도 문제를 스스로 해결하면서 나 자신의 문제 해결능력을 키우도록 해야겠다.</li>\n<li>알고리즘 문제를 풀 때 주어진 조건을 확실하게 알고 적고 가게 중요하다는 것을 정말 몸소 느꼈다. 앞으로는 주어진 조건을 이해칸에 다 적고 문제를 풀도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"June 24, 2021","title":"2021-06-24 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-24-TIL117/"}}},{"node":{"id":"855565f6-3476-5b7e-9731-b484999e0eb8","excerpt":"Facts 챕터 1 문자열 계산기를 완료했다. 문자열 계산기를 다 구현했지만 코드분리를 제대로 하지 못했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>챕터 1 문자열 계산기를 완료했다.</li>\n<li>문자열 계산기를 다 구현했지만 코드분리를 제대로 하지 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>문자열 계산기 테스트 코드를 작성하면서 필요한 케이스가 무엇이 있는지 쉽게 인지할 수 있게되었고, 정해둔 결과를 얻기 위해서 메소드를 분리해서 테스트를 작성할 수 있었다.</li>\n<li>인텔리제이를 사용하면서 다양한 에러들을 발견하고 해결함으로써 인텔리제이를 사용함에 있어서 익숙해졌다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>코드상 문자열에서 /n은 공백을 의미한다 그러므로 //n을 작성해야한다. /n을 입력값으로 넣으라고 제시해서 여러차례 삽질을 하다가 알게되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>문자열 계산기를 구현하면서 리펙터링을 미숙하게 한 것 같다. 다음 챕터는 한 메소드가 하나의 일만 하도록 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"June 23, 2021","title":"2021-06-23 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-23-TIL116/"}}},{"node":{"id":"e4309a22-af19-5dc4-9e09-6a48e3778622","excerpt":"Facts 자바스크립트 위장 문제를 풀었다. 문자열 계산기를 자바 정규식을 사용해서 기능을 구현했다. 아직 테스트는 작성하고있다. Feelings 위장 문제를 풀면서 느낀 것이 이런 문제는 수학을 모르면 풀수 없는 문제라는 것을 느꼈다. 알고리즘 문제는 수학과 연관된 문제들이 많은 것 같다. 오늘 \\n…","html":"<h2>Facts</h2>\n<ul>\n<li>자바스크립트 위장 문제를 풀었다.</li>\n<li>문자열 계산기를 자바 정규식을 사용해서 기능을 구현했다. 아직 테스트는 작성하고있다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>위장 문제를 풀면서 느낀 것이 이런 문제는 수학을 모르면 풀수 없는 문제라는 것을 느꼈다. 알고리즘 문제는 수학과 연관된 문제들이 많은 것 같다.</li>\n<li>오늘 \\n를 정규식으로 문자로 받아야하는데 자바 정규식에선 공백으로 처리하니 애를 먹었다. 결국 해결은 했지만 정말 이해를 할수 없는 처리 방법이였다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>정규식의 다양한 사용방법을 알게되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>오늘 그냥 기능만 구현하고 테스트를 작성하다가 말았는데,제대로된 테스트코드를 작성해봐야겠다.</li>\n</ul>","frontmatter":{"date":"June 22, 2021","title":"2021-06-22 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-22-TIL115/"}}},{"node":{"id":"260c0eb6-00dc-5475-bbee-7d353f6d2a20","excerpt":"Facts 자바스크립트의 정규식을 공부했다. 레이싱카 게임을 한번더 테스트코드로 작성해보았다. Feelings 미리 실패를 만들고 그후에 어떤 방법을 써서라도 통과가 되도록 만들라고 하셨는데 감이 잘 안온다. 자바 정규식도 자바스크립트 정규식과 비슷한 부분이 많은 것 같은데 역시나 어렵다. Findings 자바 정규표현식의 사용법을 알았다. Future…","html":"<h2>Facts</h2>\n<ul>\n<li>자바스크립트의 정규식을 공부했다.</li>\n<li>레이싱카 게임을 한번더 테스트코드로 작성해보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>미리 실패를 만들고 그후에 어떤 방법을 써서라도 통과가 되도록 만들라고 하셨는데 감이 잘 안온다.</li>\n<li>자바 정규식도 자바스크립트 정규식과 비슷한 부분이 많은 것 같은데 역시나 어렵다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>자바 정규표현식의 사용법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>지금 다시 코어 자바를 다시 보면 더 쉽게 글 내용을 읽을 수 있을 것 같다.</li>\n<li>오늘 컨디션이 별로여서 집중을 못했다. 다음주부터 제대로 집중해서 공부해야겠다.</li>\n</ul>","frontmatter":{"date":"June 19, 2021","title":"2021-06-19 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-19-TIL114/"}}},{"node":{"id":"e66bcceb-c9a7-57fd-ba0b-25703a25bc1a","excerpt":"Facts 가장 큰 수 만들기 알고리즘 문제를 풀었다. 너무 힘들었다. 문자열 압축 문제를 풀다가 포기했다. 다음에 한번 더 도전해봐야겠다. Feelings 알고리즘은 정말 어렵다.. Findings Matcger 클래스의 메소드들 find() 주어진 텍스트에서 pattern 에 일치하는 텍스트들이 발견되면 true…","html":"<h2>Facts</h2>\n<ul>\n<li>가장 큰 수 만들기 알고리즘 문제를 풀었다. 너무 힘들었다.</li>\n<li>문자열 압축 문제를 풀다가 포기했다. 다음에 한번 더 도전해봐야겠다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알고리즘은 정말 어렵다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Matcger 클래스의 메소드들</li>\n<li>find()</li>\n<li>주어진 텍스트에서 pattern 에 일치하는 텍스트들이 발견되면 true를 반환해줌 특이한 것은, 반복문을 계속 호출하여 주어진 텍스트의 두번째, 혹은 세번째로 패턴과 일치하는 부분도 찾을 수 있다.</li>\n<li>start()</li>\n<li>일치한 텍스트의 시작 index 값을 넘겨 줍니다.</li>\n<li>end()</li>\n<li>start와는 반대로 일치한 텍스트의 마지막 index 값을 넘겨준다.</li>\n<li>group()</li>\n<li>주어진 텍스트에서 주어진 패턴과 일치하는 텍스트를 반환해줍니다.</li>\n<li>match()</li>\n<li>주어진 텍스트 전체와 pattern이 일치하는 경우 true를 반환해줍니다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>자바지기님 께서 시간을 오래 투자해서라도 제대로된 TDD를 연습하라고 하셨다. 그전에 했던 챕터들을 다시 한번 해봐야겠다.</li>\n</ul>","frontmatter":{"date":"June 18, 2021","title":"2021-06-18 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-18-TIL113/"}}},{"node":{"id":"befe0ef0-9808-5bd3-818a-366969f17caf","excerpt":"Facts 오늘은 학점은행제 시험을 봤다. Feelings 올 100점 맞을 것 같은 느낌이 든다. Findings 그래도 어느정도 알던 내용이 조금 섞여있어서 편하게 시험을 봤다. Future Action Plan 졸업을 위해서 네트워크 관리사와 정보처리기사를 딸 준비를 해야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 학점은행제 시험을 봤다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>올 100점 맞을 것 같은 느낌이 든다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>그래도 어느정도 알던 내용이 조금 섞여있어서 편하게 시험을 봤다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>졸업을 위해서 네트워크 관리사와 정보처리기사를 딸 준비를 해야겠다.</li>\n</ul>","frontmatter":{"date":"June 15, 2021","title":"2021-06-15 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-15-TIL112/"}}},{"node":{"id":"ebc80405-ed66-5d10-a789-3e34dc3e1ac8","excerpt":"Facts 오늘은 다리를 지나는 트럭, 124 마을의 숫자 문제를 풀었다. 다리를 지나는 트럭은 저번에 못 풀고 넘어간 문제였는데 이번에 풀게 되어서 기분이 좋다. 124 마을은 진수를 이용하는 문제였는데 처음 접하는 문제라 이해하는 것도 힘들었다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 다리를 지나는 트럭, 124 마을의 숫자 문제를 풀었다. 다리를 지나는 트럭은 저번에 못 풀고 넘어간 문제였는데 이번에 풀게 되어서 기분이 좋다. 124 마을은 진수를 이용하는 문제였는데 처음 접하는 문제라 이해하는 것도 힘들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알고리즘을 푸는 숙련도가 늘어나는 느낌이 들지만 처음 접해보는 문제를 볼 때마다 접근조차 힘들 때가 있다.</li>\n<li>다양한 문제를 풀어보는것이 제일 중요하다는 것을 느꼈다.</li>\n<li>트럭을 지나는 문제는 쉽게 푼 것 같은데 124문제는 기봉이 형에게 제대로 버스를 탄 것 같다. 그래도 배운 점이 많다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>기봉이 형에게 진수 계산에 대한 방법을 배웠다. 매일 2진수와 10진수만 쓰다 보니 3진수를 처음 사용해서 문제를 풀어보니 정말 어렵다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>아직 접해보지 않은 유형의 알고리즘 문제가 많다. 오늘 같은 경우도 3진수를 이용하는 문제는 한 번도 풀어보지 못한 유형이라 애를 먹었다. 나온 풀이 방법은 상당히 짧았는데도 불구하고 이해하는 데 너무 오래 걸렸다. 빨리 2레벨 문제도 1레벨 문제처럼 다 정복해야겠다.</li>\n<li>그래도 처음 코어 자바 9책을 읽었을 때 답이 없었는데 지금 자바 코드를 몇 번 작성하고 난후 다시 보면 처음 봤을 때보다 더 잘 읽을 수 있을 것 같다. 주말에 다시 읽어야겠다.</li>\n</ul>","frontmatter":{"date":"June 11, 2021","title":"2021-06-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-11-TIL111/"}}},{"node":{"id":"002f48ce-75d5-5c0c-98f2-9c2d635e6479","excerpt":"Facts Java Step5 에서 말하는 Controller와 view Domian으로 객체를 나누고 MVC 패턴을 기반으로 리팩토링 하였다. 자기소개서를 새로운 형식으로 작성하였다. 레이싱카 우승자를 출력하는 메소드를 테스트 코드로 구현하려고 했는데 어려움이 많다. Feelings 내가 TDD…","html":"<h2>Facts</h2>\n<ul>\n<li>Java Step5 에서 말하는 Controller와 view Domian으로 객체를 나누고 MVC 패턴을 기반으로 리팩토링 하였다.</li>\n<li>자기소개서를 새로운 형식으로 작성하였다.</li>\n<li>레이싱카 우승자를 출력하는 메소드를 테스트 코드로 구현하려고 했는데 어려움이 많다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>내가 TDD를 올바른 방법으로 하고있는건가 라는 생각이 들었다.</li>\n<li>좋은 글을 작성하는 것은 엄청난 노력이 필요하다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>자바 파라미터로 받아온 객체를 filter를 이용해서 인스턴스를 참조하려고 했는데 안되서 골치가 아팠다. 자바스크립트에서는 쉽게 구현이 되는건데 자바에서는 안된다는 것을 알았다.</li>\n<li>오늘 실수를 했던게 먼저 메세지를 작성하고 그후에 필요한 것을 구현했어야 했는데 그러지 못했다. 다음부터는 메세지를 먼저 작성하고 구현를 하도록 해야겠다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>문제를 해결할때 먼저 직접 스스로 해결하도록 노력하고, 시간이 비효율적으로 들어간다고 생각이 되면, 도움을 구하거나 질문을 통해 문제를 해결해야겠다.</li>\n<li>TIL을 통해서 글쓰는 연습을 꾸준히 하도록 노력해야겠다.</li>\n</ul>","frontmatter":{"date":"June 10, 2021","title":"2021-06-10 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-10-TiL110/"}}},{"node":{"id":"6193d34b-22db-5bf1-9c74-15c0b080ee6b","excerpt":"Facts Java Step4 자동차 경주 게임에서 레이싱카의 이름을 추가하고, 우승자의 이름을 출력하는 기능을 만들었다. Feelings 자바로 코드를 작성하면서 느끼는거지만 자바스크립트에 비해서 정말 불편하다.. 테스트 코드를 작성하는 것이 어렵고 힘들기는 하지만 점점 익숙해 진다는 것을 느낀다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>Java Step4 자동차 경주 게임에서 레이싱카의 이름을 추가하고, 우승자의 이름을 출력하는 기능을 만들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자바로 코드를 작성하면서 느끼는거지만 자바스크립트에 비해서 정말 불편하다..</li>\n<li>테스트 코드를 작성하는 것이 어렵고 힘들기는 하지만 점점 익숙해 진다는 것을 느낀다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>테스트 코드를 작성하다가 어려운 부분이 있었는데, 애초에 내가 로직을 잘못 구성하고 있었다는 것을 알았다.</li>\n<li>테스트 코드를 작성하는게 어렵다면 내가 잘못된 방법으로 코드를 짜고있다는 신호다.</li>\n<li>자바 Compare함수의 사용법을 알았는데 좀더 공부가 필요한 것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>문제를 해결할 때 혼자 스스로 문제를 해결하도록 노력해서 문제 해결 능력을 키우도록 노력해야겠다.</li>\n</ul>","frontmatter":{"date":"June 09, 2021","title":"2021-06-09 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-09-TIL109/"}}},{"node":{"id":"97f7ff29-2be6-58f6-99fd-8c0d52da07d2","excerpt":"Facts 소수찾기 문제를 한번 더 복습했다. 다음에 아리스토텔레스의 체 문제가 나오면 풀 수 있을 것 같다. 기능개발 문제를 풀었는데, 처음 로직을 잘못 짜서 시간을 많이 허비했다. 처음부터 계획을 잘못 작성한 것 같다.…","html":"<h2>Facts</h2>\n<ul>\n<li>소수찾기 문제를 한번 더 복습했다. 다음에 아리스토텔레스의 체 문제가 나오면 풀 수 있을 것 같다.</li>\n<li>기능개발 문제를 풀었는데, 처음 로직을 잘못 짜서 시간을 많이 허비했다. 처음부터 계획을 잘못 작성한 것 같다.</li>\n<li>2단계 학습테스트 계산기를 구현해보고, 테스트 단위로 나누어서 코드를 작성했다. 아직 계산기 클래스가 기능분리가 제대로 안되어있어서 다시 주말에 해야겠다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>How to solve it 을 할때 계획을 확실하게 세우고 넘어가는 연습을 해야겠다고 느꼈다. 문제를 빨리 풀려고 하다보니 계획이 제대로 세워지지 않아 잘못된 풀이를 했다.</li>\n<li>점점 자바에 익숙해진다는 느낌을 받았다 일단 무엇이든지 쳐보는 연습 해야된다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>BeforeEach를 통해서 테스트단위에서 중복되는 코드를 많이 줄일수 있다는 것을 알았다.</li>\n<li>CsvSource의 다시 사용해봄으로써 테스트를 단위로 편하게 나눌 수 있다는 것을 알았다.</li>\n<li>pr을 보내기 위해서 새로운 git checkout -b [브랜치명]으로 새로운 브랜치를 만들고 새로운 작업을 시작하고 내 origin에 푸쉬 후에 내 origin에서 pr을 upstream에 보내면 된다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>기능을 구현하고 기능을 분리하는 작업을 바로바로 꾸준히 하도록 노력해야겠다. 자꾸 다음으로 미루다보니 정리가 안된 코드가 늘어나게 된다는 것을 느낀다.</li>\n<li>어떤 기능을 구현하더라도 테스트 코드로 작성하다 보니 화가 나는 일도 있지만 그만큼 코드가 안전해지는 느낌을 많이 받는다. 꾸준히 연습해야겠다.</li>\n</ul>","frontmatter":{"date":"June 05, 2021","title":"2021-06-05 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-05-TIL108/"}}},{"node":{"id":"a22a7487-8f39-5853-94f1-d9acc0091ba2","excerpt":"Facts 소수찾기 문제를 복습했다. 내일 한번 더 풀어봐야겠다. 기봉이형과 다트게임 문제를 풀었다. 정규식을 이용하는 부분빼고 별로 어렵지 않았던 것 같다. 근데 이 문제도 1렙 문제는 아닌 것 같다. 자바스크립트에선 자동으로 타입을 정해주는거에 익숙해있어서 자바 코드를 작성할때 타입에러때문에 시간을 많이 잡아먹었다. 자바지기님의 테스트 강의를 듣고…","html":"<h2>Facts</h2>\n<ul>\n<li>소수찾기 문제를 복습했다. 내일 한번 더 풀어봐야겠다. 기봉이형과 다트게임 문제를 풀었다. 정규식을 이용하는 부분빼고 별로 어렵지 않았던 것 같다. 근데 이 문제도 1렙 문제는 아닌 것 같다.</li>\n<li>자바스크립트에선 자동으로 타입을 정해주는거에 익숙해있어서 자바 코드를 작성할때 타입에러때문에 시간을 많이 잡아먹었다.</li>\n<li>자바지기님의 테스트 강의를 듣고 1단계 학습테스트를 실습해보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>타입을 정할 때 꼼꼼하게 보고 결정해야겠다. 타입때문에 문제가 발생하는 것으로 보아 변수, 타입 하나하나 정할때 신중하게 하도록 노력해야겠다고 느꼈다.</li>\n<li>오늘 기봉이형과 짝 프로그래밍을 했는데 불도저 기봉이형을 막지 못했다. 소통할려고 노력했어야하는데, 그러지 못한것 같다고 느꼇다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>자바는 테스트를 할 때 assertj를 사용한다는 것을 알았다.</li>\n<li>테스트 코드를 작성하는 방법하는 방법을 알았다.</li>\n<li>DisplayName으로 테스트 메소드의 의도를 드러낼 수 있다는 것을 알았다.</li>\n<li>assertThatThrownBy를 사용하면 만약에 입력을 잘못해서 에러가 나는 부분도 테스트를 할 수 있다는 것을 알았다.</li>\n<li>ParameterizedTest는 테스트 중복코드를 제거할수 있다.</li>\n<li>@CsvSource를 활용하면 중복 코드인 상태에서 성공했을때 결과와 실패했을때의 결과를 반환하는 테스트를 만들 수 있다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>곧 객체지향과 사실과 오해 책을 다 읽어가는데, 앞으로도 다른 사람들과 읽은 내용을 나누면서 내 머리속에 더 잘 들어오도록 노력해야겠다.</li>\n<li>TDD를 처음에 했을 때는 불편했지만 점점 할 수록 익숙해지는 느낌이 들었다. 이제 자바로도 알고리즘 문제를 풀어야겠다.</li>\n</ul>","frontmatter":{"date":"June 04, 2021","title":"2021-06-04 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-04-TIL107/"}}},{"node":{"id":"d6a12d53-429e-5a1b-b93b-bc1f98688b8b","excerpt":"Facts 소수찾기 문제를 풀었다. 이게 왜 1렙 문제인가? 효율성 테스트를 통과하기 위해서 시간을 오래 소비했다. 객체지향의 사실과 오해책을 6장까지 읽으면서 기봉이형과 우민씨와 같이 스터디했다. Feelings 너무 어렵다 무슨말인지도 모르겠다. 어디에 쓰는건지도 모르겠고, 도대체 어디에 적용해야할지 감이 안온다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>소수찾기 문제를 풀었다. 이게 왜 1렙 문제인가? 효율성 테스트를 통과하기 위해서 시간을 오래 소비했다.</li>\n<li>객체지향의 사실과 오해책을 6장까지 읽으면서 기봉이형과 우민씨와 같이 스터디했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>너무 어렵다 무슨말인지도 모르겠다. 어디에 쓰는건지도 모르겠고, 도대체 어디에 적용해야할지 감이 안온다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>에라토스테네스의 체는 수학에서 소루를 찾는 방법이다. 2부터 소수를 구하고자 하는 구간의 모든 수를 나열한다. 2,3,5,7 의 배수들을 차례대로 모두 지우면 원하는 구간의 모든 소수가 남는다.</li>\n<li>메서드는 해야할 일을 할 수 없는 상황에 빠질 수도있다. 어쩌면 필요한 리소스가 없거나 부적합한 매개변수를 받아서 그럴지도 모른다. 이런 상황에서는 예외를 던지는 것이 최선이다.\n검사 예외를 일으킬 수 있는 메서드는 메서드 헤터의 throws 절에 해당 예외를 선언해야 한다.\n예외 잡기는 try블록을 사용한다.</li>\n<li>Objects 클래스에는 편리한 매개변수 NULL 검사용 메서드가 있다. Objects.requireNonNull()</li>\n<li>단정은 일반적으로 사용하는 방어적 프로그래밍 방법이다. assert문은 조건을 평가해서 거짓이면 AssertionError을 던진다.\n단정은 기본적으로 비활성화되어 있다. 단정을 활성화하려면 -enableassertions나 -ea 옵션으로 프로그램을 실행해야 한다.\njava-ea MainClass</li>\n<li>자바 프로그래머라면 문제가 있는 코드에 println으로 동작을 들여다보는게 익숙할것이다. 이문제를 해결하고자 로깅 API를 설계했다.</li>\n<li>제네릭 클래스는 타입 매개변수가 한 개 이상 있는 클래스다.\n제네릭 클래스의 객첼르 생성할 때 생성자의 타입 매개변수를 생략할 수 있다. 이때 생성 인수 앞에 &#x3C;>를 작성해야 한다. 이 빈 &#x3C;>를 다이아몬드라고 한다.</li>\n<li>제네릭 메서드는 타입 매개변수를 받는 메서드다. 제네릭 메서드는 일반 클래스나 제네릭 클래스에 속할 수 있다.\n제네릭 메서드를 선언할 때는 타입 매개변수를 제어자와 반환 타입 사이에 두어야한다.\n제네릭 메서드를 호출할 때는 타입 매개변수를 명시하지 않아도 된다. 컴파일러가 메서드 매개변수와 반환 타입에서 타입 매개변수를 추론하기 때문이다.</li>\n<li>자바에서는 와일드카드로 메서드의 매개변수의 변환 타입이 변하는 방식을 지정한다. 이 메커니즘을 사용처 가변성이라고도 한다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>꾸준히 책을읽어야겠다.</li>\n</ul>","frontmatter":{"date":"June 03, 2021","title":"2021-06-03 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-03-TIL106/"}}},{"node":{"id":"65682367-521c-5376-8ca0-5bf2a09701a2","excerpt":"Facts 알고리즘 문제 자바스크립트로 x만큼 간격이 있는 n개의 숫자, 직사각형 별찍기 문제를 풀었다. 1렙은 이제 2문제 남았다. ER다이어그램으로 채팅App의 데이터베이스 설계도를 그렸다. 운영체제의 가상메모리에서 페이지 대치 알고리즘중 선입선출대치, 최적페이지 대치, 최근최소 사용, LRU…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문제 자바스크립트로 x만큼 간격이 있는 n개의 숫자, 직사각형 별찍기 문제를 풀었다. 1렙은 이제 2문제 남았다.</li>\n<li>ER다이어그램으로 채팅App의 데이터베이스 설계도를 그렸다.</li>\n<li>운영체제의 가상메모리에서 페이지 대치 알고리즘중 선입선출대치, 최적페이지 대치, 최근최소 사용, LRU 근접 알고리즘에 대해서 정리했다.</li>\n<li>컴퓨터 통신의 시초가 되고있는 전화 통신의 발전 과정에 대해서 조사하고 정리했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>어느정도 자료구조나 알고리즘, 네트워크에 대한 기본지식을 어느정도 소지하고 위 자료를 보니까 확실히 머리에 잘 들어온다는 느낌이 들었다.</li>\n<li>ER다이어그램으로 데이터베이스 설계도를 처음 그려봤는데 요즘 읽고있는 객체지향의 사실과 오해 책에서 보았던 객체의 관계에 대해서 많이 대치 되는 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>첫번째 선입선출 알고리즘은 가장 기본적이도 간단한 대치 알고리즘이지만 가장 적재가 오래된 페이지부터 대치한다는 것이 불확리하거나 정당한 방법이 아닐수있다.</li>\n<li>최적 페이지 대치 알고리즘은 향후 사용될 가능성이 가장 낮은 페이지부터 대치한다는것이 사용자가 보기에는 가장 효과적인 방법이라고 생각하겠지만, 이론적으로는 향후 사용될 가능성이 가장 낮은 것을 찾기는 어려운 부분이기 대문에 현실적으로는 적용하기 어려워서 다른 방법들과 비교하는 용도로만 사용되는 것 같다.</li>\n<li>최근 최소 사용 알고리즘은 과거에 쌓아놓았던 기록을 이용해서 가장 최근에 사용한적이 없는 페이지를 찾아서 앞으로도 사용될 가능성이 가장 낮은것으로 판단하고 대치하는 알고리즘이다. 어떤 페이지가 가장 오래전에 사용되었는지를 아는 방법에는 계수기, 스택을 이용한 순서결정 방법이 사용된다.\nLRU 근접 알고리즘은 2가지 알고리즘을 사용하는데 첫번째는 각 페이지에 8비트의 길이의 참조 비트를 부여해서 페이지가 사용될때마다 최상위 비트를 1로 바꾸고 사용될때마다 오른쪽으로 한칸씩이동해서 이 결과값을 통해서 어떤 페이지를 대치할것인지를 결정하는 알고리즘인 것 같다.</li>\n<li>두번째 시계 알고리즘을 사용하는데 모든 페이지에 1비트의 참조비트를 부여하고 페이지가 사용될 때마다 참조 비트를 0에서 1로 전환하고 참조비트가 1인 페이지를 내보낸다. 참조비트가 1인 페이지는 참조비트를 0으로 바꾸고 한번의 기회를 더준다. 다음 검사에서 참조 비트가 0이면 대치대상이 되고 그동안 또 사용되어 1로 되어 있으면 0으로 바꾼다.</li>\n<li>비효율적인 알고리즘도 있고 존재는 하지만 사실상 구현 방법이 존재하지 않아 사용하지 않는 알고리즘도 있는 것 같다. 하지만 모두가 기록된 자료나 스택 큐 를 이용한 방법을 사용한다는 것에서 어느정도 공통점이 있다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>앞으로 내가 하던공부 이외에 다른 공부를할때 그냥 대충 받아적고 넘어가지 말고 어느정도 공부를 하고 정리하도록 하자.</li>\n</ul>","frontmatter":{"date":"June 01, 2021","title":"2021-06-01 TIL","tag":["TIL"]},"fields":{"slug":"/2020-06-01-TIL105/"}}},{"node":{"id":"dd0b728a-f969-5956-ae39-238d6726a313","excerpt":"Facts 알고리즘 문제 자바스크립트로 배열 평균구하기, 하샤드수 문제를 풀었고, 기봉이형과 짝프로그래밍으로 짝수홀수, 문자열을 숫자로, 두 배열의 합 문제를 자바로 풀었다. 객체지향의 사실과 오해 책을 105p까지 읽고 새로 알게된점이나 몰랐던 부분을 공유했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문제 자바스크립트로 배열 평균구하기, 하샤드수 문제를 풀었고, 기봉이형과 짝프로그래밍으로 짝수홀수, 문자열을 숫자로, 두 배열의 합 문제를 자바로 풀었다.</li>\n<li>객체지향의 사실과 오해 책을 105p까지 읽고 새로 알게된점이나 몰랐던 부분을 공유했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자바스크립트로 문제를 풀다가 자바를 풀게되니 정말 귀찮은 부분도 많고 모르는 부분도 많다는 것을 느꼈다.</li>\n<li>자바스크립트가 정말 편하고 좋은 언어구나 라는 것을 몸소 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>행동이 상태를 결정한다. 상태를 먼저 결정하고 행동을 나중에 결정하는 방법은 설계에 나쁜 영향을 끼친다. 이 장에서 가장 중요한 진실은 “행동이 상태를 결정한다” 이다.</li>\n<li>소프트웨어 특징 의인화는 현실의 객체보다 소프트웨어의 객체가 더 많은 일을 할 수 있다는 것이다. 소프트 웨어 객체를 창조할때 현실 객체를 모방하지 않는다. 소프트웨어 객체는 더 크고 새로운 세계를 창조하는 것이다.</li>\n<li>\n<p>추상화는 다른 것 다 필요없이 목적에만 충실하는 것이다.</p>\n<ol>\n<li>첫 번째 차원은 구체적인 사물들 간의 공통점은 취하고 차이점은 버리는 일반화를 통해 단순하게 만드는 것이다.</li>\n<li>두 번째 차원은 중요한 부분을 강조하기 위해 불필요한 세부 사항을 제거함으로써 단순하게 만드는 것이다.</li>\n</ol>\n</li>\n<li>객체란 특정한 개념을 적용할 수 있는 구체적인 사물을 의미한다. 개념이 객체에 적용됐을 때 객체를 개념의 인스턴스라고 한다.</li>\n<li>심볼: 개념을 가리키는 간략한 이름이나 명칭</li>\n<li>내연: 개념의 완전한 정의를 나타내며 내연의 의미를 이용해 객체가 개념에 속하는지 여부를 확인할 수 있다.</li>\n<li>외연: 개념에 속하는 모든 객체의 집합</li>\n<li>타입은 개념과 동일하다. 따라서 타입이란 우리가 인식하고 있는 다양한 사물이나 객체에 적용할 수 있는 아이디어나 관념을 의미한다. 어떤 객체에 적용할 수 있을 때 그 객체를 타입 인스턴스라고 한다. 타입의 인스턴스는 타입을 구성하는 외연인 객체의 집합의 일원이 된다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>자바에서 타입을 정하는게 정말 중요한 것 같다. 자바스크립트 같은 경우는 알아서 자동으로 타입을 잡아주는데 자바는 그렇지 않다. 내가 직접 타입을 설정해줘야 하고, 그에따라 잘못 설정했다면 오류가 발생한다. 아직 미숙해서 타입 오류가 많이 발생하는 것 같다. 앞으로는 타입 설정을 할때 생각보고 결정하는 습관을 길러야겠다.</li>\n</ul>","frontmatter":{"date":"May 29, 2021","title":"2021-05-29 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-29-TIL104/"}}},{"node":{"id":"c8380580-3ae1-5e6c-b93c-494488144e58","excerpt":"Facts 알고리즘 문제 콜라츠 추측, 정수 내림차순 배치하기, 짝수와 홀수 문제를 풀었다. 콜라츠문제를 30분이나 시간을 잡아먹었다는게 굴욕이다. 재귀함수를 평소에 안쓰다가 쓰려니 시간이 좀 걸렸던 것 같다. 객체지향의 사실과오해 1p~ 60p…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문제 콜라츠 추측, 정수 내림차순 배치하기, 짝수와 홀수 문제를 풀었다. 콜라츠문제를 30분이나 시간을 잡아먹었다는게 굴욕이다. 재귀함수를 평소에 안쓰다가 쓰려니 시간이 좀 걸렸던 것 같다.</li>\n<li>객체지향의 사실과오해 1p~ 60p까지 읽으면서 우민씨와 기봉이형과 서로 인상 깊었던 점이나 새롭게 알게된 점에 대해서 정보를 나누면서 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>예전이면 콜라츠문제를 혼자푸는데 3시간 걸렸을게 뻔한데 지금은 그냥 쉽게 푸는 나 자신을 보니 성장했다는 느낌이 든다.</li>\n<li>가장 빨리 만나는 코어 자바 9책을 읽으면서 객체라는 것이 정말 어렵다고 느꼈는데, 객제치향의 사실과 오해 책을 읽고나서 객체에 대해서 다시한번 새롭게 알게되었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>\n<p>역할은 관련성 높은 책임의 집합이다. 객체의 역할은 사람의 역할과 유사하게 다음과 같은 특징을 지닌다.</p>\n<ol>\n<li>여러 객체가 동일한 역할을 수행할 수 있다.</li>\n<li>역할은 대체 가능성을 의미한다.</li>\n<li>각 객체는 책임을 수행하는 방법을 자율적으로 선택할 수 있다.</li>\n<li>하나의 객체가 동시에 여러 역할을 수행할 수 있다.</li>\n</ol>\n</li>\n<li>\n<p>객체지향의 본질</p>\n<ol>\n<li>객체지향이란 시스템을 상호작용하는 자율적인 객체들의 공동체로 바라보고 객체를 이용해 시스템을 분할하는 방법이다.</li>\n<li>자율적인 객체란 상태와 행위를 함께 지니며 스스로 자기 자신을 책임지는 객체를 의미한다.</li>\n<li>객체는 시스템의 행위를 구현하기 위해 다른 객체와 협력한다. 각 객체는 협력 내에서 정해진 역할을 수행하며 역할은 관련된 책임의 집합이다.</li>\n<li>객체는 다른 객체와 협력하기 위해 메시지를 전송하고, 메시지를 수신한 객체는 메시지를 처리하는데 적합한 메서드를 자율적으로 선택한다.</li>\n</ol>\n</li>\n<li>객체의 다양한 특성을 효과적으로 설명하기 위해서는 객체를 상태, 행동, 식별자를 지닌 실체로 보는 것이 가장 효과적이다.</li>\n<li>\n<p>객체의 상태와 행동 사이의 관계</p>\n<ol>\n<li>객체의 행동은 상태에 영향을 받는다.</li>\n<li>객체의 행동은 상태를 변경시킨다.</li>\n</ol>\n</li>\n<li>행동이란 외부의 요청 또는 수신된 메시지에 응답하기 위해 동작하고 반응하는 활동이다. 행동의 결과로 객체는 자신의 상태를 변경하거나 다른 객체에게 메시지를 전달 할 수 있다. 객체는 행동을 통해 다른 객체와의 협력에 참여하므로 행동은 외부에 가시적이어야 한다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>객체지향의 사실과 오해 책을 읽으면서 객체에 대해서 정말 올바른 지식을 가지고 자바를 공부하도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"May 28, 2021","title":"2021-05-28 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-28-TIL103/"}}},{"node":{"id":"be8bb8c7-7475-519e-8fe9-daa5d20424a0","excerpt":"Facts 알고리즘 문제 이상한 문자 만들기, 자연수 뒤집어 배열로 만들기, 자릿수 더하기 문제를 풀었다. 1렙은 이제 눈 감고 풀 수 있다. 하루에 3문제씩 1렙을 마저 풀어야겠다. 인터페이스 부분을 코드를 따라치면서 javaScript에서 사용하던 함수들이 java…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문제 이상한 문자 만들기, 자연수 뒤집어 배열로 만들기, 자릿수 더하기 문제를 풀었다. 1렙은 이제 눈 감고 풀 수 있다. 하루에 3문제씩 1렙을 마저 풀어야겠다.</li>\n<li>인터페이스 부분을 코드를 따라치면서 javaScript에서 사용하던 함수들이 java에도 많이 있다는 것을 확인했다. 물론 쓰는 방법은 다르지만 기능 자체는 같다는 것을 알고 따라 쳐보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>책에 생략된 부분이 많아서 따라치는데 곤란한 부분이 많았는데, GitHub에 챕터마다 완성된 코드들이 올려져 있는 걸 오늘 확인하고 책이랑 같이 보면서 코드를 다시 작성하니까 그전보다 훨씬 이해하기 수월해졌다.</li>\n<li>처음엔 답도 없었는데 그래도 처음보다는 어디에 사용해야 할지 감이 잡히기 시작한 것 같다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>클래스는 인터페이스를 몇 개든 구현할 수 있다. ex) implemnets 1, 2</li>\n<li>인터페이스에 정의한 변수는 항상 public static final이 된다.</li>\n<li>인터페이스에 있는 어느 메서드에서든 기본 구현을 작성할 수 있다. 기본 메서드에는 반드시 default 제어자를 붙여야 한다.</li>\n<li>Runnable이나 Comparator처럼 액션을 표현하는 인터페이스가 많다. 람다 표현식은 이런 인터페이스와 호환된다. 람다 표현식은 단일 추상 메서드를 가진 인터페이스(즉 추상 메서드가 한 개만 있는 인터페이스) 자리에 사용할 수 있다. 이런 인터페이스를 함수형 인터페이스라고 한다.</li>\n<li>배열 sort 하는 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Arrays.sort(배열, String:compareToignoreCase)\n;\nArrays.sort(배열, (x, y) -&gt; x.compareToignoreCase(y));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>배열 안의 null 값을 모두 제거</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">list.removeIf(Object::isNull);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>forEach를 이용한 리스트 요소 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">list.forEach(x -&gt; System.out.println(x));\nlist.forEach(System.out::println);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>::연산자는 클래스 이름과 메서드 이름을 분리하거나 객체의 이름과 메서드 이름을 분리한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">string::compareToignoreCase\n(x, y) -&gt; x.compareToIgnoreCase(y)\n는 같다.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Future Action Plan</h2>\n<ul>\n<li>GitHub에 나와있는 코드랑 책이랑 같이 비교하면서 직접 코드를 쳐보면서 암기한다는 마인드로 공부해야겠다.</li>\n</ul>","frontmatter":{"date":"May 27, 2021","title":"2021-05-27 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-27-TIL102/"}}},{"node":{"id":"092c98cc-775c-5f07-9376-3c0618d37f4b","excerpt":"Facts 우민씨와 짝 프로그래밍을 하면서 몰랐던 부분이나 서로 알았던 부분을 공유하면서 todoList를 내가 생각하는 객제치향적으로 필요한 기능을 모두 구현했다. 알고리즘 기초문제 수박수박수, 문자열을 숫자로 문제를 풀었다. 문제가 좀 이상한 감이 있었지만 빠르게 풀었다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>우민씨와 짝 프로그래밍을 하면서 몰랐던 부분이나 서로 알았던 부분을 공유하면서 todoList를 내가 생각하는 객제치향적으로 필요한 기능을 모두 구현했다.</li>\n<li>알고리즘 기초문제 수박수박수, 문자열을 숫자로 문제를 풀었다. 문제가 좀 이상한 감이 있었지만 빠르게 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>최대한 키보드로 직접 쳐 보면서 머리에 넣으려고 노력중인데 생략된 부분도 많고, 처음부터 이해가 안가는 부분도 많다는 것을 느꼈다.</li>\n<li>내가 이것을 공부하고 적용 할 수 있을까 하는 의문이 들었다. 이것을 쓸 때가 올까 라는 생각이 들었다. 뭐든지 필요할때 공부해야 머리에 잘 들어오는데 중요성을 모르고 공부만하니 매우 어렵다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>해당 클래스에 생성자가 2개면 호출되는 생성자는 인수에따라 결정된다. 이름은 같지만 매개변수가 다른 메서드가 여러 개 있으면 메서드가 오버로드 된 것이다. 또 다른 생성자에서 어느 한 생성자를 호출할 수있는데, 호출하는 쪽 생성자의 바디의 첫 번째 문장으로만 허용한다.\n이렇게 될 경우 생성자 이름이 아니라 this 키워드를 사용한다.</li>\n<li>\n<p>생성자 안에 인스턴스 변수를 명시적으로 설정하지 않으면 자동으로 변수를 기본 값으로 설정한다. 숫자는 0, 불 값은 false, 객체 참조는 null이 기본 값이다. 숫자는 보통 0으로 초기화한다. null은 안쓰는게 좋다.</p>\n<p>9I- 이와 같은 방식으로 인스턴스 변수에 초깃값을 지정할 수 있다. 이 초기화는 객체를 할당하고 나서 생성자가 실행되기 전에 일어난다. 또다른 초기화 방법은 클래스 선언 안에 임의의 초기화 블록을 넣는 방법이 있다. 인스턴스 변수 초기화와 초기화 블록은 클래스 선언에 나타난 순서로 실행하며, 그다음에 생성자를 실행한다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">public class Employee {\n    private String name = &quot;&quot;;\n    ...\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>클래스 안에 변수를 static으로 선언하면 해당 변수는 클래스당 하나만 존재한다.</li>\n<li>정적 메서드는 객체에 작동하지 않는 메서드다. Math.pow(x, a) 이 메서드는 작업을 수행할 때 Math 객체를 전혀 사용하지 않는다. 1장 프로그래밍 구조에서 살펴본 것처럼 정적 메서드는 static 제어자로 선언한다. 1. 자바에서 기본 타입은 클래스가 아니므로 double의 인스턴스 메서드가 될 수 없다. Math 클래스의 인스턴스 메서드로 만들 수도 있었지만. 그랬다면 pow 메서드를 호출하려고 Math 객체를 생성해야 했을 것이다. 정적 메서드를 사용하는 또 다른 이유는 다른 사람이 만든 클래스에 부가 기능을 제공하는 것이다.</li>\n<li>정적 메서드는 객체에 작동하지 않으므로 인스턴스 변수에 접근할 수 없다. 그 대신 자신이 속한 클래스의 정적 변수에 접근할 수 있다. ?무슨 말이지?</li>\n<li>자바에서는 연관된 클래스들을 한 패키지안에 넣는다. 패키지를 사용하면 작업을 조직화하고 다른 사람이 제공한 코드 라이브러리와 분리하기 편하다. 또한 패키지를 사용하는 것은 클래스 이름의 유일성을 보장하기 위해서다.</li>\n<li>다른 클래스를 다른 클래스 내부에 두는 방법을 중첩 클래스라고 한다. 중첩 클래스는 가시성?을 제한하거나 일반적인 이름을 쓰면서 정돈된 상태를 유지할 때 유용하다. 내부클래스..? 아직 지식이 부족한 것 같다.</li>\n<li>인터페이스 타입으로 변수를 선언할 수 있지만, 타입이 인터페이스 자체인 객체는 만들 수 없다. 모든 객체는 클래스의 인스턴스다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>책에 나와있는 책을 무작정 쳐보면서 이해하려고 노력하고 있는데, 정말 내가 보고 있는 것들의 중요성을 알지 못해서 내가 과연 자바 코드를 작성할 때 이 공부 했던 것들을 쓸 수 있을지 의문이 들었다.</li>\n<li>그래도 첫 번째 볼 때보다 다시 한 번 더 보니까 그전보다 더 눈에 잘 들어오는 느낌을 받았지만, 아직 부족하다는 느낌이 들었다. 특히 2장이 답이 없다고 생각했는데, 3장을 보니까 더 답이 없다는 것을 느꼈다. 이해할 때까지 계속 치면서 공부해야겠다.</li>\n<li>내가 공부한 것을 내 투두리스트에 적용시켜야하는데, 도저히 어디서부터 바꿔야 할지 감이 안 온다. 일단 책 내용부터 이해하도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"May 26, 2021","title":"2021-05-26 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-26-TIL101/"}}},{"node":{"id":"604fbbef-a97f-5efc-add8-648b45068019","excerpt":"Facts 우민씨와 짝 프로그래밍을 하면서 몰랐던 부분이나 서로 알았던 부분을 공유하면서 todoList를 다시 만들었다. 구조를 다시 작성해서 할일추가, 할일완료 기능을 추가했다. Feelings 생성자에 대해서 다시 한번더 알게된 느낌이다. 너무 내용이 추상적이라 정답을 모르겠다. 내가 작성한 코드가 정답일까? Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>우민씨와 짝 프로그래밍을 하면서 몰랐던 부분이나 서로 알았던 부분을 공유하면서 todoList를 다시 만들었다.</li>\n<li>구조를 다시 작성해서 할일추가, 할일완료 기능을 추가했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>생성자에 대해서 다시 한번더 알게된 느낌이다.</li>\n<li>너무 내용이 추상적이라 정답을 모르겠다. 내가 작성한 코드가 정답일까?</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>객체마다 자신만의 상태가 있다. 이 상태는 메서드를 호출해서 얻는 결과에 영향을 준다.</li>\n<li>다른 사람이 구현한 객체의 메서드를 호출할 때는 내부에서 무슨 일이 일어나는지 몰라도 된다. 이 원칙을 캡슐화라고 한다. 이는 객체 지향 프로그램이의 핵심 개념이다.</li>\n<li>호출되는 객체를 변경하는 메서드를 변경자라고 한다, 객체를 변경하지 않는 메서드를 접근라고 한다.</li>\n<li>자바에서는 무조건 변수에 객체 참조만 담을 수 있다, 객체 참조를 담은 변수를 다른 변수에 할당하면 같은 객체 참조를 두 개 갖는다.</li>\n<li>자바에서는 인스턴스 변수로 객체의 상태를 나타낸다, 인스턴스는 변수를 보통 private로 선언한다. private으로 선언하면 같은 클래스에 속한 메서드만 변수에 접근할 수 있다.</li>\n<li>대부분 메서드는 public으로 선언000000, private으로 같은 클래스에 속한 다른 메서드에서만 사용하도록 제한, 클래스 사용자와 관련이 없는 메서드는 private으로 선언한다.</li>\n<li>인스턴스 메소드란 인스턴스를 생명 주기로 하는 메소드, 메서드의 작업을 수행하는데 인스턴스 변수를 필요로하는 메서드다. 자바에서 static으로 선언하지 않은 메서드는 모두 인스턴스 메서드다.</li>\n<li>-</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>뽀모도로(집중 공부시간) 할때 다른것에 신경쓰지말고 집중하기.</li>\n<li>지각하지 않기 위해 정해진 시간에 자기</li>\n<li>코딩 컨벤션을 지키도록 노력하기위해서 항상 코드를 작성하고 컨벤션 문서를 확인하고 비교하기.</li>\n</ul>","frontmatter":{"date":"May 25, 2021","title":"2021-05-25 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-25-TIL100/"}}},{"node":{"id":"5369a326-4917-562b-bb88-7b3cb4933fed","excerpt":"Facts 가장 빨리 만나는 코어 자바 9 2장 3장을 읽었다. Feelings 자바는 심오하다. 여러번 읽은것 같은데 항상 새로운 내용이다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>가장 빨리 만나는 코어 자바 9 2장 3장을 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자바는 심오하다.</li>\n<li>여러번 읽은것 같은데 항상 새로운 내용이다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>변경자 메서드는 객체 상태를 변경하지만, 접근자 메서드는 객체 상태를 변경하지 않는다.</li>\n<li>자바에서 변수는 객체가 아니라 객체 참조를 저장한다.</li>\n<li>클래스 선언 안에 인스턴스 변수와 메서드 구현을 선언한다.</li>\n<li>인스턴스 메서드는 객체로 호출하며, 호출된 메서드에서는 이 객체를 this 참조로 접근할 수 있다.</li>\n<li>생성자는 클래스와 이름이 같다. 클래스 안에 오버로드된 생성자를 여러 개 포함 할 수 있다.</li>\n<li>정적 변수는 어떤 객체에도 속하지 않는다. 정적 메서드는 객체로 호출하지 않는다.</li>\n<li>클래스는 패키지로 조직화된다. 임포트 선언을 하면 프로그램 안에서 패키지 이름을 쓰지않아도 된다.</li>\n<li>클래스 안에 다른 클래스를 선언할 수 있다.</li>\n<li>내부 클래스는 비정적 중첩 클래스다. 내부 클래스의 인스턴스는 자신을 생성한 바깥쪽 클래스의 객체를 참조한다.</li>\n<li>javadoc 유틸리티는 소스 파일을 처리해 선언된 내용과 프로그래머가 작성한 주석으로 HTML 파일을 만든다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>가장 빨리 만나는 코어 자바 9 2,3장을 읽으면서 코드에 적용해보기</li>\n<li>todolist-java 로직 분리하기</li>\n<li>코딩 컨벤션 적용해보기</li>\n</ul>","frontmatter":{"date":"May 24, 2021","title":"2021-05-24 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-24-TIL99/"}}},{"node":{"id":"f8838d46-9490-5c15-b760-e6482e52f092","excerpt":"Facts 알고리즘 문자열 내림차순 정렬, 문자열 다루기 기본 문제를 풀었다. 문자열 내림차순은 금방 풀었는데, 문자열 다루기 기본은 isNaN으로 풀었는데 문제 자체가 변경되는 바람에 1234e 가 숫자로 판별되어서 다른 방법으로 푸느라 시간을 좀 소비했다. 자바 TodoList…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문자열 내림차순 정렬, 문자열 다루기 기본 문제를 풀었다. 문자열 내림차순은 금방 풀었는데, 문자열 다루기 기본은 isNaN으로 풀었는데 문제 자체가 변경되는 바람에 1234e 가 숫자로 판별되어서 다른 방법으로 푸느라 시간을 좀 소비했다.</li>\n<li>자바 TodoList의 로직을 메인, 번호 선택, 기능, 뷰로 나눴는데 아직 많이 부족한 것 같다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>무언가 한 것 같은데 한 게 없다.</li>\n<li>자바 코드를 작성하면서 내가 객체지향적으로 코드를 작성 중인 게 맞는 건가?라는 생각이 자주 들었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>isNaN은 완벽하게 숫자를 판별해 주지 못한다는 것을 알았다. 한자리 숫자를 판별할때쓰면 좋지만 숫자가 길어질 경우 잘못될 수도 있다.</li>\n<li>정수를 문자열로 변환할 때는 정적 메서드 Integer.toString을 사용하고, 정수를 담고 있는 문자열을 숫자로 변환할 때 Integer.parseInt 메서드를 사용한다. 부동소수점 수는 Double.toString과 Double.parseDouble 메서드를 사용한다.</li>\n<li>지역변수는 메서드의 매개변수를 포함해 메서드 안에 선언한 변수다. 변수의 유효범위는 프로그램에서 해당 변수에 접근할 수 있는 부분이다.\n지역 변수의 유효 범위는 변수 선언 지점에서 시작해 해당 선언을 감싼 블록의 끝까지 이어진다.</li>\n<li>기존의 for문과는 달리 향상된 for문을 알게되었다. 인덱스값을 적어줄 필요없이 요소를 순회한다.</li>\n<li>배열의 사본을 만들 때는 정적 메서드 Arrays.copyOf를 사용한다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>가장 빨리 만나는 코어 자바 9 2,3장을 읽으면서 코드에 적용해보기</li>\n<li>todolist-java 로직 분리하기</li>\n<li>코딩 컨벤션 적용해보기</li>\n</ul>","frontmatter":{"date":"May 22, 2021","title":"2021-05-22 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-22-TIL98/"}}},{"node":{"id":"994023d3-21e0-5ad2-aeb3-53a36012b915","excerpt":"Facts S3 에 이미지를 업로드할때 필요한 Access Key ID와 SecretAccessKey를 환경변수로 만들어서 환경변수 파일을 GitHub에 올리지 않아서 발생했던 문제를 해결했습니다. 자동배포 기능 구현을 끝냈습니다. 가장 빨리 만나는 코어 자바 9 책 1장을 쳐보면서 정독했습니다. jshell…","html":"<h2>Facts</h2>\n<ul>\n<li>S3 에 이미지를 업로드할때 필요한 Access Key ID와 SecretAccessKey를 환경변수로 만들어서 환경변수 파일을 GitHub에 올리지 않아서 발생했던 문제를 해결했습니다.</li>\n<li>자동배포 기능 구현을 끝냈습니다.</li>\n<li>가장 빨리 만나는 코어 자바 9 책 1장을 쳐보면서 정독했습니다.</li>\n<li>jshell을 들어가는 방법과, 간단한 코드를 쳐서 확인해보면서 손에 익숙해지도록했다.</li>\n<li>자바로 TodoList를 만들었다. ArrayList로 만들어서 그런지 어려움없이 빠른시간에 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>배포자동화를 하기전에는 일일히 도커허브에 이미지를 올리고 Ec2 인스턴스에서 새로 이미지를 받아와서 도커 컨테이너를 띄워주는 형식으로 배포했는데, 이제는 편하게 git push 만으로도 쉽게 구현이 가능하니, 정말 자동화라는 것이 중요하다는 것을 깨달았다.</li>\n<li>6개월만에 자바를 만져보니 감회가 새롭다. 망나니 코딩할때 공부했던거라 지금 다시 보니 그전보다 더 이해가 빠른 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>EC2 인스턴스환경에서 환경변수를 설정해주는 방법, workflows에서 빌드할때 환경변수를 설정해주는 방법을 알게되었습니다.</li>\n<li>intellij 에서 so 를 입력후 tab을 누르면 System.out.printf가 자동완성된다.</li>\n<li>자바는 객체 지향 언어이므로 프로그램에서 객체를 조작해 일을 시킨다. 각 객체는 특정 클래스에 속하며, 그 객체를 클래스의 인스턴스라고 한다. 클래스에는 객체 상태와 할 수 있는 일을 정의한다. 자바는 모든 코드를 클래스 안에 정의한다.</li>\n<li>main 메서드는 프로그램을 실행할 때 첫 번째로 호출되는 메서드다. static을 선언하면 객체가 없어도 메서드가 작동한다, void는 값을 반환하지 않을때 사용된다.</li>\n<li>패키지는 관련 있는 클래스를 모아놓은 집합이다, 자바는 모든 것을 클래스 안에 선언한다.</li>\n<li>System.out은 객체이며, PrintStream 클래스의 인스턴스다. PrintStream 클래스에는 println, print 등 메서드가 있다. 이런 메서드는 해당 클래스의 객체에서 작동하므로, 인스턴스 메서드라고 한다.</li>\n<li>final 키워드는 한번 할당하면 변경할 수 없는 값에 사용한다. 다른 언어에서는 이 값을 상수라고 한다. 보통 상수 이름은 대문자로 선언한다. static을 사용해서 상수를 메서드 외부에 선언할 수도 있다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>todolist-java 로직 분리하기</li>\n<li>코딩 컨벤션 적용해보기</li>\n</ul>","frontmatter":{"date":"May 21, 2021","title":"2021-05-21 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-21-TIL97/"}}},{"node":{"id":"638b70b4-2077-50a1-858c-324553e4bef7","excerpt":"Facts CodeDeploy를 연결할때 access key 잘못 입력해서 에러가 발생한것을 확인한후 맞는 access key를 입력했습니다. GitHub Actions를 통해서 깃허브를 통해서 api파일이 올라가는데, gitignore에 의해서 .env파일이 제외되어서 인스턴스에서 env…","html":"<h2>Facts</h2>\n<ul>\n<li>CodeDeploy를 연결할때 access key 잘못 입력해서 에러가 발생한것을 확인한후 맞는 access key를 입력했습니다. GitHub Actions를 통해서 깃허브를 통해서 api파일이 올라가는데, gitignore에 의해서 .env파일이 제외되어서 인스턴스에서 env파일을 검색할 수 없다는 에러가 발생해서 임의로 넣고 에러를 해결하였습니다. CodeDeploy도중에 whitespace 에러가 발생하였고, .env파일에 공백이나 ‘를 사용하면 안된다는 것을 알게되어서 문제를 해결하였습니다.</li>\n<li>클라이언트도 깃허브 액션을 통해서 올라가기때문에 s3 버킷에 .env파일이 올라가지 않는다는 것을 알았습니다. 그래서 이 문제를 해결하기 위해서 GitHub Actions에 있는 환경변수를 사용해서 빌드할때 env정보를 넣어주는 방식으로 문제를 해결하였습니다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자동배포 기능을 구현하면서 엄청 많은 에러가 발생했는데 그 전 보다 확실히 문제를 해결하는 능력이 향상 되었다는 것을 느꼈습니다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>인스턴스환경에서 환경변수를 설정해주는 방법, workflows에서 빌드할때 환경변수를 설정해주는 방법을 알게되었습니다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>반응형 웹 완성하기</li>\n<li>자동배포 기능 구현하기</li>\n</ul>","frontmatter":{"date":"May 20, 2021","title":"2021-05-20 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-20-TIL96/"}}},{"node":{"id":"a224bce4-d44a-5716-9167-8968e6c9ec82","excerpt":"Facts GitHub Actions를 이용하여 Git push를 했을 때 클라이언트를 S3에 자동배포가 될 수 있도록 구현했습니다. 프로젝트가 하나의 폴더에 있어서 해당하는 경로를 정하는 방법을 몰라서 시간을 허비했습니다. 그러다가 질문을 통해 working-directory…","html":"<h2>Facts</h2>\n<ul>\n<li>GitHub Actions를 이용하여 Git push를 했을 때 클라이언트를 S3에 자동배포가 될 수 있도록 구현했습니다. 프로젝트가 하나의 폴더에 있어서 해당하는 경로를 정하는 방법을 몰라서 시간을 허비했습니다. 그러다가 질문을 통해 working-directory를 사용하면 내가 원하는 경로의 파일만 선택 할 수 있다는 것을 알게되어서 경로를 설정하고 해결했습니다.</li>\n<li>Code Deploy를 사용해서 자동적으로 로컬에서 GitHub에 push하면 docker image가 build되고, Docker Hub에 push되도록 구현했고, 그다음 CodeDeploy에서 Docker Hub에 있는 이미지를 자동적으로 기존의 인스턴스에 가져와서 서버를 실행시키도록 구현하려고 했지만 아직 구현을 하지 못했다. 도커허브에 올리기까지는 성공했지만, 인스턴스에 Docker Hub에 있는 이미지를 가져오는 작업쪽에서 문제가 생긴 것 같다.</li>\n<li>알고리즘 두 정수 사이의 합, 문자열 p, y의 개수 문제를 풀었습니다. 문제가 쉬운편이라 그런지 빠른시간에 풀었습니다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자동배포가 정말 어렵다는 생각이 들었습니다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>workflows파일에서 원하는 경로의 파일만 선택하고 싶을때 working-directory를 사용하면 경로를 직접적으로 선택해줄 수 있다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>반응형 웹 완성하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 19, 2021","title":"2021-05-19 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-19-TIL95/"}}},{"node":{"id":"52e98d1c-1fc2-5d08-8fcf-b714cd4f88ef","excerpt":"Facts 배포후 장바구니에서 삭제가 되지않던 문제가 발생해서, 차례대로 어디서 문제가 생기는지 확인한 후 delete를 useparams로 데이터를 전달받아서 문제를 해결했습니다. dotenv 환경변수를 사용해서 로컬, 서버용 env파일을 따로 만들어서 웹팩의 기능을 사용해 명령어에 따라 필요한 주소를 불러올 수 있도록 구현했습니다. github…","html":"<h2>Facts</h2>\n<ul>\n<li>배포후 장바구니에서 삭제가 되지않던 문제가 발생해서, 차례대로 어디서 문제가 생기는지 확인한 후 delete를 useparams로 데이터를 전달받아서 문제를 해결했습니다.</li>\n<li>dotenv 환경변수를 사용해서 로컬, 서버용 env파일을 따로 만들어서 웹팩의 기능을 사용해 명령어에 따라 필요한 주소를 불러올 수 있도록 구현했습니다.</li>\n<li>github Actions 을 사용해서 git push를 하면 자동으로 클라이언트가 배포가되도록 하려고 했지만 방법을 찾고있습니다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>공식문서를 보면서 남들보다 문서를 읽는 속도가 느린 것 같아서 영문서를 읽는 연습을 많이 해야겠다고 느꼈습니다.</li>\n<li>불편함이 보이면 한순간이 편하기위해 넘어가지 말고 어떻게 불편함을 없앨지 생각하고 해결하는 능력을 길러야겠습니다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>.gitignore 파일에 제외 파일을 설정하고 git add를 했더니 내가 제외한 파일이 깃허브에 올라가있는 것을 발견했습니다. 원인을 알아보던중 github에 남아있던 캐시때문에 코드를 수정해도 변경되지 않았던 이유를 알고 수정했습니다. git rm —cached <fileName></li>\n<li>로컬에서 테스트할때의 URL과 서버에서 통신하는 URL을 나눈상태에서 로컬에서 사용하고 싶을때 내가 일일히 코드를 수정해야하는 작업을 가끔 인지하지 못해서 발생하는 약간의 시간소모 때문에 dotenv와 webpack을 사용해서 명령어 하나로 서버와 로컬의 URL을 편하게 변경 할 수 있도록 구현했습니다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>반응형 웹 완성하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 18, 2021","title":"2021-05-18 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-18-TIL94/"}}},{"node":{"id":"e0b5c224-3159-5d80-8664-676080d9f636","excerpt":"Facts 깃허브에 실수로 올라간 몽고디비 URI 커밋 내용을 삭제했다. GoDady 주소 전달로 도메인을 설정했다. 현재까지 서버와 클라이언트 둘다 배포를 완료했다. 알고리즘 기본문제 3문제를 풀었다. gitHub actions로 클라이언트를 자동배포 할려다가 못했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>깃허브에 실수로 올라간 몽고디비 URI 커밋 내용을 삭제했다.</li>\n<li>GoDady 주소 전달로 도메인을 설정했다.</li>\n<li>현재까지 서버와 클라이언트 둘다 배포를 완료했다.</li>\n<li>알고리즘 기본문제 3문제를 풀었다.</li>\n<li>gitHub actions로 클라이언트를 자동배포 할려다가 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>1레벨이라도 문제푸는 속도가 훨씬 빨라졌다.</li>\n<li>배포를 다 하고 나니 자동화가 문제다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Access-control-Allow-Origin 응답 헤더는 이 응답이 주어진 origin으로부터의 요청 코드와 공유될 수 있는지를 나타낸다.</li>\n<li>withCredentials은 request header에 직접 쿠키를 넣어주기위한 것</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>반응형 웹 완성하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 15, 2021","title":"2021-05-15 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-15-TIL93/"}}},{"node":{"id":"3fea2187-d1d6-5921-ad26-0f1516b0fc19","excerpt":"Facts 완주하지 못한 선수 알고리즘 문제를 풀었다. 모든 서버주소나 중요한 데이터는 .env 파일을 사용해서 감췄다. aws 인스턴스를 새로 만들고 S3 버켓을 새로 만들었다. Feelings 문제가 발생한 원인을 찾는게 어렵다. 그 전보다 알고리즘에 대한 자신감이 붙었다. Findings dotenv…","html":"<h2>Facts</h2>\n<ul>\n<li>완주하지 못한 선수 알고리즘 문제를 풀었다.</li>\n<li>모든 서버주소나 중요한 데이터는 .env 파일을 사용해서 감췄다.</li>\n<li>aws 인스턴스를 새로 만들고 S3 버켓을 새로 만들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>문제가 발생한 원인을 찾는게 어렵다.</li>\n<li>그 전보다 알고리즘에 대한 자신감이 붙었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>dotenv의 사용법을 알았다.</li>\n<li>도커사용법이 점점 손에 익는다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 12, 2021","title":"2021-05-12 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-12-TIL92/"}}},{"node":{"id":"2af82532-3a14-5a67-84d9-aa2a7fb05dbc","excerpt":"Facts README를 작성했다. 청년수당을 신청했다. Feelings 남의돈을 받는게 정말 힘들다는 것을 느꼈다. Findings README파일을 이쁘게 작성하는 방법을 알았다. Future Action Plan Access-Control-Allow-Origin 헤더, withCredentials…","html":"<h2>Facts</h2>\n<ul>\n<li>README를 작성했다.</li>\n<li>청년수당을 신청했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>남의돈을 받는게 정말 힘들다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>README파일을 이쁘게 작성하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>서류 접수하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 11, 2021","title":"2021-05-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-11-TIL91/"}}},{"node":{"id":"e233e3a4-1a74-58d7-bf10-bfb1e3b5c402","excerpt":"Facts 카카오 겨울 윈터 문제를 풀었다. Feelings 2단계 까지는 풀 수 있다는 자신감을 얻었다. 3단계는 정말 어렵다.. 처음 보는 문제라 어떻게 풀이계획을 세워야할지 모르겠다. Findings 문제를 풀때 자신감이 중요하다는 것을 알았다. 매일매일 한문제씩이라도 문제를 풀어야된다는 것을 알았다. Future Action Plan Access…","html":"<h2>Facts</h2>\n<ul>\n<li>카카오 겨울 윈터 문제를 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>2단계 까지는 풀 수 있다는 자신감을 얻었다.</li>\n<li>3단계는 정말 어렵다..</li>\n<li>처음 보는 문제라 어떻게 풀이계획을 세워야할지 모르겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>문제를 풀때 자신감이 중요하다는 것을 알았다.</li>\n<li>매일매일 한문제씩이라도 문제를 풀어야된다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>서류 접수하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 08, 2021","title":"2021-05-08 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-08-TIL90/"}}},{"node":{"id":"1c6b8d28-0f95-5bc4-886c-3af4b77c69a2","excerpt":"Facts 알고리즘 문제를 풀었다. 한문제도 시간내에 못풀었다. Feelings 몇달만에 다시 알고리즘을 풀려고하니 너무 어렵다 계획을 짜도 코드로 옮기는데에 시간이 걸린다.. Findings 앞으로 미친듯이 풀어야겠다. 내 자신이 얼마나 알고리즘을 안 풀었는지 알았다. Future Action Plan Access-Control-Allow-Origin…","html":"<h2>Facts</h2>\n<ul>\n<li>알고리즘 문제를 풀었다.</li>\n<li>한문제도 시간내에 못풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>몇달만에 다시 알고리즘을 풀려고하니 너무 어렵다</li>\n<li>계획을 짜도 코드로 옮기는데에 시간이 걸린다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>앞으로 미친듯이 풀어야겠다.</li>\n<li>내 자신이 얼마나 알고리즘을 안 풀었는지 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>서류 접수하기</li>\n<li>알고리즘 마스터하기</li>\n</ul>","frontmatter":{"date":"May 06, 2021","title":"2021-05-06 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-06-TIL89/"}}},{"node":{"id":"7501fbcd-0b30-5a78-9c24-0caa5f03f80c","excerpt":"Facts 자기소개서와 포트폴리오를 작성했다. Feelings 글하나 쓰는게 얼마나 어려운 것인지 체감했다. Findings 내가 보기싫은 글은 남들도 보기 싫다는 것을 알았다. 이력서를 작성하면서 얼마나 더 열심히 해야할지 몸으로 깨달았다. Future Action Plan Access-Control-Allow-Origin…","html":"<h2>Facts</h2>\n<ul>\n<li>자기소개서와 포트폴리오를 작성했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>글하나 쓰는게 얼마나 어려운 것인지 체감했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>내가 보기싫은 글은 남들도 보기 싫다는 것을 알았다.</li>\n<li>이력서를 작성하면서 얼마나 더 열심히 해야할지 몸으로 깨달았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>서류 접수하기</li>\n</ul>","frontmatter":{"date":"May 05, 2021","title":"2021-05-05 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-05-TIL88/"}}},{"node":{"id":"2aadc09e-8d8b-5068-9620-d5f3c975fbb5","excerpt":"Facts 오늘은 하루종일 자기소개서를 작성했다. Feelings 자기소개서를 작성하면서 나 자신을 다시 되돌아보는 시간을 가졌다. 우아한형제들캠프에 꼭 참여하고 싶다… Findings 남들이 보기에 좋은 개발자가 되기 위해서는 어떻게 해야할까? Future Action Plan Access-Control-Allow-Origin…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 하루종일 자기소개서를 작성했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자기소개서를 작성하면서 나 자신을 다시 되돌아보는 시간을 가졌다.</li>\n<li>우아한형제들캠프에 꼭 참여하고 싶다…</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>남들이 보기에 좋은 개발자가 되기 위해서는 어떻게 해야할까?</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n</ul>","frontmatter":{"date":"May 01, 2021","title":"2021-05-01 TIL","tag":["TIL"]},"fields":{"slug":"/2020-05-01-TIL87/"}}},{"node":{"id":"c8206fa6-ee1f-5638-8c66-be0c22ae9341","excerpt":"Facts 오늘 서버 배포를 완료했다. 최소거리 탐색을 구현했다. Feelings 서버쪽은 정말 문제가 생기면 감으로 맞출수 없다는 것을 느꼈다. 원인을 찾고 찾아서 공부하고 문제를 해결하는 연습의 필요성을 느꼈다. Findings Docker network를 쓰는 이유는 docker container는 매번 실행될 때마다 변동되는 vip…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘 서버 배포를 완료했다.</li>\n<li>최소거리 탐색을 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>서버쪽은 정말 문제가 생기면 감으로 맞출수 없다는 것을 느꼈다.</li>\n<li>원인을 찾고 찾아서 공부하고 문제를 해결하는 연습의 필요성을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Docker network를 쓰는 이유는 docker container는 매번 실행될 때마다 변동되는 vip를 사용하는데, 처음 설정한 vip(하나의 호스트에 여러 개의 IP주소)가 다음 번 생성된 container를 호출한다는 보장이 없다. 컨테이너가 매번 새로 실행되더라도 유지하게 하려면 같은 네트워크에 묶어주어야 하기 때문이다.</li>\n</ul>\n<p>-DNS란 Domain Name System을 뜻하며 사람이 읽을 수 있는 도메인 이름 (www.amazon.com)을 말합니다.</p>\n<ul>\n<li>동일 출처 정책(Same-Origin Policy) 이 정책에 의해서 자바스크립트로 다른 웹페이지에 접근할 때는 같은 출처의 페이지에만 접근이 가능하다. 같은 출처라는 것은 프로토콜, 호스트명, 포트가 같다는 것을 의미한다. 즉 쉽게 말하면 웹페이지의 스크립트는 그 페이지와 같은 서버에 있는 주소로만 ajax 요청을 할 수 있다는 것이다.</li>\n<li>CORS는 웹 브라우저에서 외부 도메인 서버와 통신하기 위한 방식을 표준화한 스펙이다. 서버와 클라이언트가 정해진 헤더를 통해 서로 요청이나 응답에 반응할지 결정하는 방식으로 교차 출처 자원 공유라는 이름으로 표준화가 되었다.</li>\n<li>CORS는 HTTP 헤더를 사용해서, 한 출처에서 실행 중인 웹 애플리케이션이 다른 출처의 선택한 자원에 접근할 수 있는 권한을 부여하도록 브라우저에 알려주는 제체입니다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>Access-Control-Allow-Origin 헤더, withCredentials 공부</li>\n<li>반응형 웹 완성하기</li>\n<li>자기소개서 쓰기</li>\n</ul>","frontmatter":{"date":"April 30, 2021","title":"2021-04-30 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-30-TIL86/"}}},{"node":{"id":"ff935bc3-218b-58b3-9973-0406d38569c2","excerpt":"Facts 오늘은 자료구조 그래프에 대해서 공부했다. redis가 오류가 났던 이유를 알았다. 포트연결이 잘못되어서 생긴 문제였다. Breath First Search 그래프를 공부하고 구현했다. Feelings 하나 구현하는데 정말 어렵다고 느꼈다. 집중력을 좀 키워야겠다고 느꼈다. Findings BFS는 너비우선 탐색이고 DFS…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 자료구조 그래프에 대해서 공부했다.</li>\n<li>redis가 오류가 났던 이유를 알았다. 포트연결이 잘못되어서 생긴 문제였다.</li>\n<li>Breath First Search 그래프를 공부하고 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>하나 구현하는데 정말 어렵다고 느꼈다.</li>\n<li>집중력을 좀 키워야겠다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>BFS는 너비우선 탐색이고 DFS는 깊이우선 탐색이다.</li>\n<li>도커 포트설정에 대해서 알게되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 못한 DFS(Depth First Search)를 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"April 28, 2021","title":"2021-04-28 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-28-TIL85/"}}},{"node":{"id":"d784ce57-add2-5be5-a802-b81080e354bd","excerpt":"Facts 도커허브에 이미지를 업로드했다.. ec2 인스턴스에 도커허브에있는 이미지를 가져왔다. 자료구조 링크드리스트를 공부했다. 스택과 큐를 공부했다. Feelings 자료란 정말 추상적이고 어렵다는 것을 느꼈다. 꼭 혼자 공부가 필요하다고 느꼈다. Findings 그래도 어느정도 자료구조에 대해 알게된것 같다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>도커허브에 이미지를 업로드했다..</li>\n<li>ec2 인스턴스에 도커허브에있는 이미지를 가져왔다.</li>\n<li>자료구조 링크드리스트를 공부했다.</li>\n<li>스택과 큐를 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>자료란 정말 추상적이고 어렵다는 것을 느꼈다.</li>\n<li>꼭 혼자 공부가 필요하다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>그래도 어느정도 자료구조에 대해 알게된것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>자료구조를 빨리 마스터해야겠다.</li>\n</ul>","frontmatter":{"date":"April 22, 2021","title":"2021-04-22 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-22-TIL84/"}}},{"node":{"id":"42cbf12c-14d3-5a4f-a185-352ddf4e22a7","excerpt":"Facts 온라인 시험을 끝냈다. 클라이언트를 aws s3에 업로드해서 배포했다. api 도커파일을 만들고 이미지를 생성했다. Feelings 도커도 안 쓴지 2달이 넘어가니 기억이 안 난다.. 노션에 명령어를 정리해 두었는데 빌어먹을 학교 이메일 때문에 들어갈 수가 없다. 시험을 잘 봐서 장학금을 받을 수 있을 것 같다. Findings aws…","html":"<h2>Facts</h2>\n<ul>\n<li>온라인 시험을 끝냈다.</li>\n<li>클라이언트를 aws s3에 업로드해서 배포했다.</li>\n<li>api 도커파일을 만들고 이미지를 생성했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>도커도 안 쓴지 2달이 넘어가니 기억이 안 난다.. 노션에 명령어를 정리해 두었는데 빌어먹을 학교 이메일 때문에 들어갈 수가 없다.</li>\n<li>시험을 잘 봐서 장학금을 받을 수 있을 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>aws로 클라이언트를 배포하는 방법을 알았다.</li>\n<li>도커파일을 사용해서 이미지를 생성하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>서버 배포를 끝마치고 빨리 알고리즘으로 넘어가야겠다.</li>\n</ul>","frontmatter":{"date":"April 21, 2021","title":"2021-04-21 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-21-TIL83/"}}},{"node":{"id":"bcc580a6-49b6-5e1e-9738-ae72ee4f369a","excerpt":"Facts 서버에서 가져온 상품평 리스트를 출력했다. 부모와 자식간의 상태전달 여러번을 한 이유로 발생된 에러를 해결했다. Feelings 알고리즘을 오래동안 안 풀었더니 함수가 기억이 안난다.. 빨리 꾸준히 해서 부족한 부분을 채워야겠다. Findings useEffect 의 재 렌더링 조건에 대해서 더 잘 알게된 것 같다. Future Action…","html":"<h2>Facts</h2>\n<ul>\n<li>서버에서 가져온 상품평 리스트를 출력했다.</li>\n<li>부모와 자식간의 상태전달 여러번을 한 이유로 발생된 에러를 해결했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알고리즘을 오래동안 안 풀었더니 함수가 기억이 안난다..</li>\n<li>빨리 꾸준히 해서 부족한 부분을 채워야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>useEffect 의 재 렌더링 조건에 대해서 더 잘 알게된 것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 상품평 리스트의 css를 적용하고, 클라이언트에 있는 이미지를 전부 서버로 옮기도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"April 20, 2021","title":"2021-04-20 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-20-TIL82/"}}},{"node":{"id":"f9b0f494-892b-571f-8685-e9715e8ca1c6","excerpt":"Facts 서버에서 가져온 상품평 리스트를 출력했다. 부모와 자식간의 상태전달 여러번을 한 이유로 발생된 에러를 해결했다. Feelings 알고리즘을 오래동안 안 풀었더니 함수가 기억이 안난다.. 빨리 꾸준히 해서 부족한 부분을 채워야겠다. Findings useEffect 의 재 렌더링 조건에 대해서 더 잘 알게된 것 같다. Future Action…","html":"<h2>Facts</h2>\n<ul>\n<li>서버에서 가져온 상품평 리스트를 출력했다.</li>\n<li>부모와 자식간의 상태전달 여러번을 한 이유로 발생된 에러를 해결했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알고리즘을 오래동안 안 풀었더니 함수가 기억이 안난다..</li>\n<li>빨리 꾸준히 해서 부족한 부분을 채워야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>useEffect 의 재 렌더링 조건에 대해서 더 잘 알게된 것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 상품평 리스트의 css를 적용하고, 클라이언트에 있는 이미지를 전부 서버로 옮기도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"April 16, 2021","title":"2021-04-16 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-16-TIL81/"}}},{"node":{"id":"41895c47-bb8d-5ac7-9e97-92df6e19a009","excerpt":"Facts 상품평 사진 업로드 기능을 구현했다. 상품평 페이지에서 상품의 별점, 평가글, 사진을 업로드하고 서버에 안전하게 저장되도록 구현했다. Feelings 프로젝트가 커질수록 점점 복잡해진다는 것을 느꼈다. 데이터를 알맞게 가공해서 보내는 게 정말 번거롭다.. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>상품평 사진 업로드 기능을 구현했다.</li>\n<li>상품평 페이지에서 상품의 별점, 평가글, 사진을 업로드하고 서버에 안전하게 저장되도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>프로젝트가 커질수록 점점 복잡해진다는 것을 느꼈다.</li>\n<li>데이터를 알맞게 가공해서 보내는 게 정말 번거롭다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>파일 업로드하는 방법을 알게 되었다.</li>\n<li>임시로 클라이언트에 이미지를 출력하는 방법을 알게 되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 마지막으로 서버에 전달된 상품평 데이터를 데이터베이스에 저장하고 클라이언트에서 불러와 상품평리스트를 출력하도록 해야겠다.</li>\n</ul>","frontmatter":{"date":"April 14, 2021","title":"2021-04-14 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-14-TIL80/"}}},{"node":{"id":"a14069ba-5027-5fc5-ac69-f148951613c3","excerpt":"Facts 그전에 해결 못했던 프록시와 라우터 문제를 해결했다. 상품평 컴포넌트를 만들었다. Feelings 기억이 안 나는 부분이 있어서 문제가 생긴 게 있는 것 같다. 언제나 항상 실수는 나한테서 온다는 것을 느낀다. Findings 테스트 코드의 중요성을 알았다. 라우터와 프록시에 대해 조금 더 알게 된 것 같다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>그전에 해결 못했던 프록시와 라우터 문제를 해결했다.</li>\n<li>상품평 컴포넌트를 만들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>기억이 안 나는 부분이 있어서 문제가 생긴 게 있는 것 같다.</li>\n<li>언제나 항상 실수는 나한테서 온다는 것을 느낀다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>테스트 코드의 중요성을 알았다.</li>\n<li>라우터와 프록시에 대해 조금 더 알게 된 것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 상품평 기능을 다 구현하고 프로젝트를 어느 정도 정리하고 빨리 테스트 코드로 넘어가야겠다.</li>\n</ul>","frontmatter":{"date":"April 13, 2021","title":"2021-04-13 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-13-TIL79/"}}},{"node":{"id":"03b8ae18-6f71-5e8e-b89f-e82f468af8d4","excerpt":"Facts 리뷰하기 화면을 만들었다. 리뷰하기 버튼을 누르면 해당 상품을 리뷰하는 화면으로 넘어가도록 구현했다. Feelings 한 달을 쉬니까 정말 잊어버린 게 많다는 것을 느낀다. 오늘도 마지막에 막혀서 짜증 났다. 내가 프록시를 잘 모르고 있다는 느낌이 들었다. Findings 라우터에서 exact는 확실하게 URL…","html":"<h2>Facts</h2>\n<ul>\n<li>리뷰하기 화면을 만들었다.</li>\n<li>리뷰하기 버튼을 누르면 해당 상품을 리뷰하는 화면으로 넘어가도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>한 달을 쉬니까 정말 잊어버린 게 많다는 것을 느낀다.</li>\n<li>오늘도 마지막에 막혀서 짜증 났다.</li>\n<li>내가 프록시를 잘 모르고 있다는 느낌이 들었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>라우터에서 exact는 확실하게 URL을 구분할 때 사용한다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>마지막에 문제가 생겼는데 다음 주에 해결해봐야겠다.</li>\n</ul>","frontmatter":{"date":"April 10, 2021","title":"2021-04-10 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-10-TIL78/"}}},{"node":{"id":"1a958a83-be7b-5954-b295-8fb1862e4144","excerpt":"Facts 카카오 블라인드 테스트 비밀지도 문제를 복습했다. 상품문의 기능을 완성했다. 구매후기 화면을 만들었다. Feelings 상품문의 기능은 만들었지만 관리자가 댓글을 다는 기능은 못만들었다. 갈길이 멀다는게 느껴진다. 항상 새로운 것을 볼때마다 재밌다. Findings | 는 10진수 값을…","html":"<h2>Facts</h2>\n<ul>\n<li>카카오 블라인드 테스트 비밀지도 문제를 복습했다.</li>\n<li>상품문의 기능을 완성했다.</li>\n<li>구매후기 화면을 만들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>상품문의 기능은 만들었지만 관리자가 댓글을 다는 기능은 못만들었다. 갈길이 멀다는게 느껴진다.</li>\n<li>항상 새로운 것을 볼때마다 재밌다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>| 는 10진수 값을 2진수로 변경해서 값을 더해주는 함수라는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>구매후기 기능을 빠르게 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"April 09, 2021","title":"2021-04-09 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-09-TIL77/"}}},{"node":{"id":"c0c7697e-8901-5b79-b956-fe4c46dd2db5","excerpt":"Facts 학점은행제 강의를 들었다. css 미디어 쿼리를 사용해서 반응형 웹사이트를 만들었다. 상품 디테일 화면에서 상품 소개 화면을 만들었다. 상품문의 기능을 만들고 있다. Feelings 한달만의 코딩이라 긴장했지만 그래도 첫날치고는 괜찮았다고 느낀다. 오랜만에 머리를 써서 그런지 너무 피곤하다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>학점은행제 강의를 들었다.</li>\n<li>css 미디어 쿼리를 사용해서 반응형 웹사이트를 만들었다.</li>\n<li>상품 디테일 화면에서 상품 소개 화면을 만들었다.</li>\n<li>상품문의 기능을 만들고 있다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>한달만의 코딩이라 긴장했지만 그래도 첫날치고는 괜찮았다고 느낀다.</li>\n<li>오랜만에 머리를 써서 그런지 너무 피곤하다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>미디어 쿼리를 사용해서 반응형 웹사이트를 만들 수 있다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>미디어쿼리를 이용해서 모바일기능을 만들어야겠다.</li>\n</ul>","frontmatter":{"date":"April 07, 2021","title":"2021-04-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-04-07-TIL76/"}}},{"node":{"id":"1d2824c7-92c5-5723-aa71-c3a9fec91381","excerpt":"Facts 은행을 다녀왔다 내일도 가야한다는게 너무 화난다. 학점은행제 네트워크 강의를 들었다. Feelings 미리 들어놔야겠다. Findings 들을게 좀 많다. Future Action Plan 꾸준히 시간날 때 마다 들어야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>은행을 다녀왔다 내일도 가야한다는게 너무 화난다.</li>\n<li>학점은행제 네트워크 강의를 들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>미리 들어놔야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>들을게 좀 많다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>꾸준히 시간날 때 마다 들어야겠다.</li>\n</ul>","frontmatter":{"date":"March 11, 2021","title":"2021-03-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-03-11-TIL75/"}}},{"node":{"id":"67e5d934-0cd3-53f0-9332-5c858f9d82ea","excerpt":"Facts 오늘은 학점은행제 네트워크 강의를 들었다. Feelings 전에 이미 공부하던거라 듣기 편했다. Findings 반복학습의 중요성을 알았다. Future Action Plan 꾸준히 시간날 때 마다 들어야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 학점은행제 네트워크 강의를 들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>전에 이미 공부하던거라 듣기 편했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>반복학습의 중요성을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>꾸준히 시간날 때 마다 들어야겠다.</li>\n</ul>","frontmatter":{"date":"March 08, 2021","title":"2021-03-08 TIL","tag":["TIL"]},"fields":{"slug":"/2020-03-08-TIL74/"}}},{"node":{"id":"3fc9e642-c21b-5e8b-a261-0735bf12260b","excerpt":"Facts 오늘은 보문역쪽 방을 알아봤다. Feelings 괜찮은방 구하기가 정말 어렵다는 것을 느꼈다. Findings 전세방은 거의 12월 ~1월쯤에 다 몰린다는 것을 알았다. Future Action Plan 방을 빨리 구하자","html":"<h2>Facts</h2>\n<ul>\n<li>오늘은 보문역쪽 방을 알아봤다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>괜찮은방 구하기가 정말 어렵다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>전세방은 거의 12월 ~1월쯤에 다 몰린다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>방을 빨리 구하자</li>\n</ul>","frontmatter":{"date":"March 07, 2021","title":"2021-03-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-03-07-TIL73/"}}},{"node":{"id":"c72594cb-6e1d-562a-afe9-cf08c9f94cc5","excerpt":"Facts 오늘 학점은행제가 개강했다. 몇몇 방을 보고 왔는데 그중에 고려대 쪽 방이 제일 좋아서 대출 조건을 확인하는 중이다. Feelings 오늘 너무 추워서 죽을뻔했다. Findings 나한테 돈이 3억이 있었으면 이런 일이 없지 않았을까? Future Action Plan 돈을 많이 벌자 지하철 타고 갈 때 책을 하나 가져가야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>오늘 학점은행제가 개강했다.</li>\n<li>몇몇 방을 보고 왔는데 그중에 고려대 쪽 방이 제일 좋아서 대출 조건을 확인하는 중이다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘 너무 추워서 죽을뻔했다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>나한테 돈이 3억이 있었으면 이런 일이 없지 않았을까?</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>돈을 많이 벌자</li>\n<li>지하철 타고 갈 때 책을 하나 가져가야겠다.</li>\n</ul>","frontmatter":{"date":"March 04, 2021","title":"2021-03-04 TIL","tag":["TIL"]},"fields":{"slug":"/2020-03-04-TIL72/"}}},{"node":{"id":"33d81e51-3c13-5057-a876-e5fb99f9bcde","excerpt":"Facts 오늘 집 계약이 끝나서 짐을 파주로 옮겼다. 상품 디테일 화면에서 상품을 설명하는 이미지가 나오도록 구현했다. Feelings 서울 전셋집을 구하기가 정말 어렵다는 것을 알았다 Findings 뭐든지 돈이 있어야 한다는 것을 알았다. Future Action Plan 방을 구하자","html":"<h2>Facts</h2>\n<ul>\n<li>오늘 집 계약이 끝나서 짐을 파주로 옮겼다.</li>\n<li>상품 디테일 화면에서 상품을 설명하는 이미지가 나오도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>서울 전셋집을 구하기가 정말 어렵다는 것을 알았다</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>뭐든지 돈이 있어야 한다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>방을 구하자</li>\n</ul>","frontmatter":{"date":"March 03, 2021","title":"2021-03-03 TIL","tag":["TIL"]},"fields":{"slug":"/2020-03-03-TIL71/"}}},{"node":{"id":"75de00fb-a295-5f8c-8226-4c6a633fc8d3","excerpt":"Facts 하루 3분 네트워크 책 1~3장을 다시 읽었다. Feelings 계속 읽다 보니 몰랐던 부분을 이해할 수 있었다. Findings 이해한 것은 외운 것이다. Future Action Plan 웹을 지탱하는 기술 책을 정리해야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>하루 3분 네트워크 책 1~3장을 다시 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>계속 읽다 보니 몰랐던 부분을 이해할 수 있었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>이해한 것은 외운 것이다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>웹을 지탱하는 기술 책을 정리해야겠다.</li>\n</ul>","frontmatter":{"date":"March 01, 2021","title":"2021-02-29 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-29-TIL70/"}}},{"node":{"id":"69f8d730-cb8f-5ca9-8050-9f8aa0515404","excerpt":"Facts 장바구니 알람기능을 구현했다. 품절기능을 구현했다. 풀점일때 상품을 구매하지 못하도록 구현했다. Feelings 알람 기능을 구현중인데 정말 화가난다.. Findings 다이얼로그 라이브러리의 사용법을 알았다. Future Action Plan 다이얼로그를 다 적용해야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 알람기능을 구현했다.</li>\n<li>품절기능을 구현했다.</li>\n<li>풀점일때 상품을 구매하지 못하도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>알람 기능을 구현중인데 정말 화가난다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>다이얼로그 라이브러리의 사용법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>다이얼로그를 다 적용해야겠다.</li>\n</ul>","frontmatter":{"date":"February 28, 2021","title":"2021-02-28 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-28-TIL69/"}}},{"node":{"id":"6a0d5ff7-3843-5b5e-93eb-b1faa603c426","excerpt":"Facts 서울시 청년 임대보증금 대출을 신청했다. 장바구니 기능을 다 구현했다. Feelings 할 수 록 재밌어진다. Findings 문제가 안 풀릴 때는 심호흡을 한 번 하자. Future Action Plan 장바구니 재고 기능을 구현해야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>서울시 청년 임대보증금 대출을 신청했다.</li>\n<li>장바구니 기능을 다 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>할 수 록 재밌어진다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>문제가 안 풀릴 때는 심호흡을 한 번 하자.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>장바구니 재고 기능을 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"February 26, 2021","title":"2021-02-26 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-26-TIL68/"}}},{"node":{"id":"db10e92a-078f-5114-bb45-04543be206cc","excerpt":"Facts 장바구니에서 상품의 개수를 수정할 수 있도록 구현했다. 개수를 변경하면 해당 가격도 변경되도록 했다. Feelings 몽고디비에서 데이터를 조작하는 것이 정말 힘들다는 것을 알았다. Findings 몽고디비에서 배열의 값을 pull…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니에서 상품의 개수를 수정할 수 있도록 구현했다.</li>\n<li>개수를 변경하면 해당 가격도 변경되도록 했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>몽고디비에서 데이터를 조작하는 것이 정말 힘들다는 것을 알았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>몽고디비에서 배열의 값을 pull로 하나만 제거하는 방법을 알았다. 원래 해당하는 값의 모두가 삭제되는데 내가 원하는 값만 삭제하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>개수 기능만 완성하고 다이얼로그만 띄워주고 테스트 코드를 붙여야겠다.</li>\n</ul>","frontmatter":{"date":"February 25, 2021","title":"2021-02-25 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-25-TIL67/"}}},{"node":{"id":"276d0d7a-aa89-52a9-8439-1ace5d1a46ae","excerpt":"Facts 회원 이름, 핸드폰 번호, 패스워드 변경 기능을 구현했다. 검색 기능 오류를 해결했다. 회원가입 기능을 수정했다. Feelings 이제 끝이 보인다.. Findings 어떤 기능을 성공할 때마다 다이얼로그로 상태를 알려주는 것이 중요하다는 것을 알았다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>회원 이름, 핸드폰 번호, 패스워드 변경 기능을 구현했다.</li>\n<li>검색 기능 오류를 해결했다.</li>\n<li>회원가입 기능을 수정했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>이제 끝이 보인다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>어떤 기능을 성공할 때마다 다이얼로그로 상태를 알려주는 것이 중요하다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>기능을 성공하거나 실패할 때마다 다이얼로그로 띄워주도록 하겠다.</li>\n<li>장바구니에서 개수를 수정할 수 있도록 구현하겠다.</li>\n</ul>","frontmatter":{"date":"February 24, 2021","title":"2021-02-24 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-24-TIL66/"}}},{"node":{"id":"884b295a-7c14-5d2e-aabf-761c6780c194","excerpt":"Facts 구매 페이지 옆에 마이 쇼핑 메뉴를 만들었다. 마이 쇼핑 메뉴에서 사용자 정보 변경을 누르면 사용자의 패스워드가 맞는지 입력하고 변경할 수 있는 컴포넌트로 나오도록 했다. 그림으로 배우는 HTTP NetWork 책을 11장까지 스터디했다. 코딩 도장 때 못 풀었던 카펫 문제를 풀었다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>구매 페이지 옆에 마이 쇼핑 메뉴를 만들었다.</li>\n<li>마이 쇼핑 메뉴에서 사용자 정보 변경을 누르면 사용자의 패스워드가 맞는지 입력하고 변경할 수 있는 컴포넌트로 나오도록 했다.</li>\n<li>그림으로 배우는 HTTP NetWork 책을 11장까지 스터디했다.</li>\n<li>코딩 도장 때 못 풀었던 카펫 문제를 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>코드가 너무 길어서 컴포넌트를 좀 분리해야겠다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>css에 좀 더 익숙해진 것 같다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>빨리하고 테스트 코드를 작성하자!</li>\n</ul>","frontmatter":{"date":"February 21, 2021","title":"2021-02-21 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-21-TIL65/"}}},{"node":{"id":"4271a203-c230-5cd7-9783-07ecafd7f96f","excerpt":"Facts 회원만 상품을 결제할 수 있도록 구현했다. 결제 페이지에서 배송지를 다음 api로 결정할 수 있도록 구현했다. 전에 알고 있던 잡다한 에러들을 해결했다. Feelings 속도를 좀 더 내야겠다고 느꼈다. Findings 팝업을 간단하게 띄울 수 있는 방법을 알았다. 배송지 설정 api의 적용 방법을 알았다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>회원만 상품을 결제할 수 있도록 구현했다.</li>\n<li>결제 페이지에서 배송지를 다음 api로 결정할 수 있도록 구현했다.</li>\n<li>전에 알고 있던 잡다한 에러들을 해결했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>속도를 좀 더 내야겠다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>팝업을 간단하게 띄울 수 있는 방법을 알았다.</li>\n<li>배송지 설정 api의 적용 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>요번 프로젝트에서는 그냥 한 번의 팝업 기능을 만들었지만 다음 프로젝트 때는 팝업창 안에 팝업을 도전해봐야겠다.</li>\n</ul>","frontmatter":{"date":"February 20, 2021","title":"2021-02-20 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-20-TIL64/"}}},{"node":{"id":"317916d4-37b4-57f8-91bf-81553c40980f","excerpt":"Facts 결제가 성공해야 구매리스트에 쌓이도록 구현했다. 로그인 기능 문제가 있던 것을 해결했다. Feelings 전세방을 구하고 있는데 정말 어렵다.. Findings HTML 태그에는 타입 값을 정해주어야 한다는 것을 알았다. 처음 구하는 전세방이지만 많은 것을 알게 되었다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>결제가 성공해야 구매리스트에 쌓이도록 구현했다.</li>\n<li>로그인 기능 문제가 있던 것을 해결했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>전세방을 구하고 있는데 정말 어렵다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>HTML 태그에는 타입 값을 정해주어야 한다는 것을 알았다.</li>\n<li>처음 구하는 전세방이지만 많은 것을 알게 되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>프로젝트에 배송 관련 기능에서 다음에서 제공하는 api를 적용해서 배송지를 설정하는 기능을 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"February 19, 2021","title":"2021-02-19 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-19-TIL63/"}}},{"node":{"id":"b82002fb-07f9-5a8b-9752-8cea52486b25","excerpt":"Facts 방 계약이 끝나서 방을 알아보러 부동산을 다녔다. 수강신청을 했다. Feelings 매우 바쁘다 스트레스가 밀려온다. 책을 꾸준히 읽어야겠다. Findings 책을 워낙에 기피하면서 살아와서 그런지 어디가 중요한 부분인지 잘 모르는 경우가 많다는 것을 알았다.. Future Action Plan 수강신청은 끝났으니 방 문제를 빨리 해결해야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>방 계약이 끝나서 방을 알아보러 부동산을 다녔다.</li>\n<li>수강신청을 했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>매우 바쁘다 스트레스가 밀려온다.</li>\n<li>책을 꾸준히 읽어야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>책을 워낙에 기피하면서 살아와서 그런지 어디가 중요한 부분인지 잘 모르는 경우가 많다는 것을 알았다..</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>수강신청은 끝났으니 방 문제를 빨리 해결해야겠다.</li>\n</ul>","frontmatter":{"date":"February 18, 2021","title":"2021-02-18 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-18-TIL62/"}}},{"node":{"id":"36e6c225-2720-5f37-9207-d1cb58d99921","excerpt":"Facts 아침에 스킬 트리 문제를 복습했다. 상품의 id와 개수를 서버에 전달해서 서버로부터 총 가격을 불러오는 기능을 구현했다. 결제 css를 수정했다. 결제 페이지를 완성했다. 3분 네트워크 책을 한번 정독했다. Feelings 오늘 코드를 작성하면서 일단 효율 좋은 코드를 짜기 전에 기능부터 만들어야 된다고 느꼈다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>아침에 스킬 트리 문제를 복습했다.</li>\n<li>상품의 id와 개수를 서버에 전달해서 서버로부터 총 가격을 불러오는 기능을 구현했다.</li>\n<li>결제 css를 수정했다.</li>\n<li>결제 페이지를 완성했다.</li>\n<li>3분 네트워크 책을 한번 정독했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘 코드를 작성하면서 일단 효율 좋은 코드를 짜기 전에 기능부터 만들어야 된다고 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>처음부터 효율적인 코드를 짜려다가 시간을 좀 소비한 것 같다..</li>\n<li>드디어 결제 페이지를 완성했다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>프로젝트를 면접관들이 결제까지 다 해보지는 않을 것 같다. 결제가 성공해야 구매리스트에 추가할지 아니면 결제 버튼을 누르자마자 구매리스트에 쌓이게 할지 고민해봐야겠다.</li>\n</ul>","frontmatter":{"date":"February 14, 2021","title":"2021-02-14 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-14-TIL61/"}}},{"node":{"id":"94cbcb82-23cf-55e9-aa4b-b4ee265efbeb","excerpt":"Facts 상품페이지에서 구매하기를 누르면 결제페이지로 넘어가서 결제리스트에 상품이 쌓이도록 구현했다. 장바구니에서 구매하기를 누르면 결제페이지로 넘어가서 결제리스트에 상품이 쌓이도록 구현했다. 결제리스트 css 적용했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>상품페이지에서 구매하기를 누르면 결제페이지로 넘어가서 결제리스트에 상품이 쌓이도록 구현했다.</li>\n<li>장바구니에서 구매하기를 누르면 결제페이지로 넘어가서 결제리스트에 상품이 쌓이도록 구현했다.</li>\n<li>결제리스트 css 적용했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>여러가지의 방법중에 최선의 방법을 생각하다가 시간을 좀 사용한 것 같다.</li>\n<li>점점 프로젝트가 완성도가 올라가는 것을 느낀다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>프로젝트 하나 제대로 만드는 것이 이렇게 손이 많이 가는 것을 알았다.</li>\n<li>완성 되어가는 것이 보여서 그런지 기분 좋다</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>힘내서 완성하자!</li>\n<li>로그인 기능도 손봐야할 곳이 있다.</li>\n<li>결제가 완료되면 구매페이지에 쌓이도록 구현해야겠다.</li>\n</ul>","frontmatter":{"date":"February 13, 2021","title":"2021-02-13 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-13-TIL60/"}}},{"node":{"id":"46d8b391-be40-55d1-8861-2082500db573","excerpt":"Facts 아임포트 api를 내 프로젝트에 간단하게 적용했다. 구매 페이지에 사용자의 정보를 출력했다. 구매 페이지의 배송 요청 사항을 사용자가 수정할 수 있도록 구현했다. Feelings 문제 해결 능력이 조금 상승했다는 것을 느낀다. Findings 아임포트 결제 기능을 사용하는 방법을 알았다. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>아임포트 api를 내 프로젝트에 간단하게 적용했다.</li>\n<li>구매 페이지에 사용자의 정보를 출력했다.</li>\n<li>구매 페이지의 배송 요청 사항을 사용자가 수정할 수 있도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>문제 해결 능력이 조금 상승했다는 것을 느낀다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>아임포트 결제 기능을 사용하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>아임포트 기능을 가져온 것을 내 프로젝트에 완벽하게 적용해야겠다.</li>\n</ul>","frontmatter":{"date":"February 12, 2021","title":"2021-02-12 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-12-TIL59/"}}},{"node":{"id":"5ba7481c-7230-5386-96cf-6051473557ad","excerpt":"Facts 검색 기능을 구현했다. 구매페이지 css를 적용했다. 3분 네트워크 책 2장을 읽었다. Feelings 언제나 처음 하는거나 배우는 것은 어렵다는 것을 느낀다.. Findings 부모자식 관계가 아니여도 상태전달을 하는 방법을 알았다. 몽고디비엔 무수하게 많은 기능이 있다는 것을 알았다.. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>검색 기능을 구현했다.</li>\n<li>구매페이지 css를 적용했다.</li>\n<li>3분 네트워크 책 2장을 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>언제나 처음 하는거나 배우는 것은 어렵다는 것을 느낀다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>부모자식 관계가 아니여도 상태전달을 하는 방법을 알았다.</li>\n<li>몽고디비엔 무수하게 많은 기능이 있다는 것을 알았다..</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>빠르게 속도를 내서 결제기능 까지 만들어야겠다!</li>\n</ul>","frontmatter":{"date":"February 11, 2021","title":"2021-02-11 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-11-TIL58/"}}},{"node":{"id":"e339b9f2-23fd-54eb-92c0-ca2865ca0ace","excerpt":"Facts 세션을 레디스에 저장했다. 쿼리 스트링을 이용한 검색 기능을 만들었다. 3분 네트워크 교실 1장을 읽었다. 최솟값 구하기 문제를 복습했다. Feelings 책을 한번 읽을 때 헤비 하게 읽도록 해야겠다. 프로젝트의 끝이 보이는 게 느껴진다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>세션을 레디스에 저장했다.</li>\n<li>쿼리 스트링을 이용한 검색 기능을 만들었다.</li>\n<li>3분 네트워크 교실 1장을 읽었다.</li>\n<li>최솟값 구하기 문제를 복습했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>책을 한번 읽을 때 헤비 하게 읽도록 해야겠다.</li>\n<li>프로젝트의 끝이 보이는 게 느껴진다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>확실히 읽었던 내용들을 다시 읽으니 머리에 훨씬 잘 들어온다.</li>\n<li>쿼리 스트링을 이용한 검색 기능을 구현하는 방법을 알았다.</li>\n<li>레디스를 연동하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>검색 기능을 빠르게 끝내고 결제 기능을 구현하고 TDD를 작성해야겠다.</li>\n</ul>","frontmatter":{"date":"February 10, 2021","title":"2021-02-10 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-10-TIL57/"}}},{"node":{"id":"87277c2d-601f-5174-8166-477e34f05c47","excerpt":"Facts 아이템 디테일 화면에서 개수 선택 후 구매하기를 누르면 구매리스트에 쌓이도록 구현했다. 장바구니에서 선택 후 구매하기를 누르면 구매리스트에 쌓이도록 구현했다. 구매리스트 css를 적용했다. 코딩 올림픽에서 문제를 풀긴 했지만 제시간 내에 못 풀었다. 그림으로 배우는 네트워크 구조 책을 읽었다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>아이템 디테일 화면에서 개수 선택 후 구매하기를 누르면 구매리스트에 쌓이도록 구현했다.</li>\n<li>장바구니에서 선택 후 구매하기를 누르면 구매리스트에 쌓이도록 구현했다.</li>\n<li>구매리스트 css를 적용했다.</li>\n<li>코딩 올림픽에서 문제를 풀긴 했지만 제시간 내에 못 풀었다.</li>\n<li>그림으로 배우는 네트워크 구조 책을 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>문제에 접근하는 것에 익숙해져야 된다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>문제를 해결하는 것에 대해 두려움을 가지면 안 된다..</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>문제를 접근하는 방식을 다양하게 생각해보자</li>\n</ul>","frontmatter":{"date":"February 07, 2021","title":"2021-02-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-07-TIL56/"}}},{"node":{"id":"88a53147-642a-52be-9ec6-14316a2fc2a2","excerpt":"Facts 몸이 안좋아서 집에서 네트워크 구조 책을 읽었다. Feelings 건강을 챙기자 Findings 건강이 최고라는 것을 알았다. Future Action Plan 프로젝트를 빨리 끝내야겠다.","html":"<h2>Facts</h2>\n<ul>\n<li>몸이 안좋아서 집에서 네트워크 구조 책을 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>건강을 챙기자</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>건강이 최고라는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>프로젝트를 빨리 끝내야겠다.</li>\n</ul>","frontmatter":{"date":"February 06, 2021","title":"2021-02-06 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-06-TIL55/"}}},{"node":{"id":"526b9bdb-d583-53bf-87cb-bebad6312c8f","excerpt":"Facts 이태원 코딩도장에서 문제를 풀었다. 오늘 몸살이 심하게 와서 일일 할일을 끝내지 못했다. Feelings 몸 관리의 필요성을 느꼈다. Findings 온몸이 아프니 아무것도 할 수 없다는 것을 알았다. Future Action Plan 오늘 쉬고 내일 더 열심히 해야겠다..","html":"<h2>Facts</h2>\n<ul>\n<li>이태원 코딩도장에서 문제를 풀었다.</li>\n<li>오늘 몸살이 심하게 와서 일일 할일을 끝내지 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>몸 관리의 필요성을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>온몸이 아프니 아무것도 할 수 없다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>오늘 쉬고 내일 더 열심히 해야겠다..</li>\n</ul>","frontmatter":{"date":"February 05, 2021","title":"2021-02-05 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-05-TIL54/"}}},{"node":{"id":"a561082c-ef0d-55fc-a5cb-21c2b11faf42","excerpt":"Facts 네트워크 구조 책 챕터 3을 읽었다. 장바구니 개수 몇개를 더해도 개수가 추가되도록 구현했다 Feelings aggregate를 사용해서 몽고디비의 카운트를 출력하고 했지만, 너무 어렵다.. Findings 몽고디비를 제대로 사용할려면 정말 어렵다는 것을 알았다.. Future Action Plan…","html":"<h2>Facts</h2>\n<ul>\n<li>네트워크 구조 책 챕터 3을 읽었다.</li>\n<li>장바구니 개수 몇개를 더해도 개수가 추가되도록 구현했다</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>aggregate를 사용해서 몽고디비의 카운트를 출력하고 했지만, 너무 어렵다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>몽고디비를 제대로 사용할려면 정말 어렵다는 것을 알았다..</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>프로젝트좀 빨리 해야겠다.. 속도가 너무 느린것 같다..</li>\n</ul>","frontmatter":{"date":"February 04, 2021","title":"2021-02-04 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-04-TIL53/"}}},{"node":{"id":"f222e83a-9d80-565a-8507-456e583b9fb9","excerpt":"Facts 장바구니에서 상품을 구매하면 구매리스트에 구매한 상품 개수, 가격을 출력하려고 했는데 구현 못했다. 몽고디비 고유 Id 값에 문제가 생겨서 시간을 잡아먹었다. 그림으로 배우는 네트워크 구조 책 챕터 2를 읽었다. Feelings 몽구스 populate로 가져온 상품 데이터에 count…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니에서 상품을 구매하면 구매리스트에 구매한 상품 개수, 가격을 출력하려고 했는데 구현 못했다.</li>\n<li>몽고디비 고유 Id 값에 문제가 생겨서 시간을 잡아먹었다.</li>\n<li>그림으로 배우는 네트워크 구조 책 챕터 2를 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>몽구스 populate로 가져온 상품 데이터에 count를 추가해서 구매 페이지에 넣으려고 했는데, 하는 방법을 몰라서 실패했다.. 화난다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>더 노력해야 한다는 것을 알았다…</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>내일 수형이형의 코드를 보면서 스키마 설계를 다시 해야겠다.</li>\n<li>빨리 레디스로 넘어가야겠다..</li>\n</ul>","frontmatter":{"date":"February 03, 2021","title":"2021-02-03 TIL","tag":["TIL"]},"fields":{"slug":"/2020-02-03-TIL52/"}}},{"node":{"id":"9958d9db-75f7-5b3d-961b-42aa4c0f4fa0","excerpt":"Facts 장바구니 전체 삭제, 선택 삭제 기능을 구현했다. 그림으로 배우는 네트워크 구조 챕터 1을 읽었다. 알고리즘 올림픽에서 카카오 블라인드 문제 중 하나인 실패율 문제를 풀었다. Feelings 장바구니 기능을 다 구현하니 기분이 좋다. 한번 읽었던 정보를 가지고 비슷한 자료를 읽으니 그전부터 훨씬 수월하게 읽힌다는 느낌을 받았다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 전체 삭제, 선택 삭제 기능을 구현했다.</li>\n<li>그림으로 배우는 네트워크 구조 챕터 1을 읽었다.</li>\n<li>알고리즘 올림픽에서 카카오 블라인드 문제 중 하나인 실패율 문제를 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>장바구니 기능을 다 구현하니 기분이 좋다.</li>\n<li>한번 읽었던 정보를 가지고 비슷한 자료를 읽으니 그전부터 훨씬 수월하게 읽힌다는 느낌을 받았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>다양한 알고리즘 풀이 방식을 외워야 한다는 것을 알았다.</li>\n<li>한번에 천천히 정독하기보다는 빠르게 여러 번 읽는게 더 효과적인 것 같다.</li>\n<li>mongoose 배열 update delete의 다양한 사용방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>빨리 프로젝트에 여러 기능을 구현해야겠다.</li>\n<li>다양한 알고리즘 문제를 접해보고 방식을 외워야겠다.</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 31, 2021","title":"2021-01-31 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-31-TIL51/"}}},{"node":{"id":"3a28c013-ebbd-5c9a-b90f-445d77415710","excerpt":"Facts 장바구니 groupBy로 나눠진 데이터를 Object values를 이용해서 중복된 데이터 값을 제거했습니다. 장바구니 상품 개수, 가격, 총 가격을 출력했다. 장바구니 아이템 선택 삭제를 구현했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 groupBy로 나눠진 데이터를 Object values를 이용해서 중복된 데이터 값을 제거했습니다.</li>\n<li>장바구니 상품 개수, 가격, 총 가격을 출력했다.</li>\n<li>장바구니 아이템 선택 삭제를 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>학점은행제 때문에 스트레스를 받았는데 오늘 결과가 좋아서 기분이 좋다.</li>\n<li>장바구니 개수, 가격을 출력하는 코드를 작성하면서 여태 사용했던 방법들을 조합해서 사용하니 수월하게 했던 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Object.keys 메서드는 개체 고유 속성의 이름을 배열로 반환한다.</li>\n<li>Object.value 메서드는 개체 고유 키에 할당된 값들을 배열에 반환한다.</li>\n<li>Object.entries는 key와 value 값을 배열에 반환한다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>오늘보다 더 빨리 속도를 내서 공부를 해야겠다.</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 30, 2021","title":"2021-01-30 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-30-TIL50/"}}},{"node":{"id":"571cb505-2a3a-5295-84e4-1990a9c49bfa","excerpt":"Facts 장바구니 배열에 id 값을 넣고, populate를 이용하여 가져올때 id 값에 맞는 프로덕트들의 데이터를 담은 배열을 가져오도록 구현했다. 아침에 알고리즘 문제를 풀면서 Compare 함수를 복습했다. 코딩 도장 때 처음 접해보는 문제를 풀어봤다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 배열에 id 값을 넣고, populate를 이용하여 가져올때 id 값에 맞는 프로덕트들의 데이터를 담은 배열을 가져오도록 구현했다.</li>\n<li>아침에 알고리즘 문제를 풀면서 Compare 함수를 복습했다.</li>\n<li>코딩 도장 때 처음 접해보는 문제를 풀어봤다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>몽고디비 하나 제대로 사용하는 게 정말 어렵다는 것을 느꼈다.</li>\n<li>코딩도장 시간 때 문제를 풀어보고 정말 다양한 문제를 많이 풀어보고 외워야 한다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>몽고디비 populate에 대해서 공부했다.</li>\n<li>몽고디비 update 에서 pop 등 다양한 함수를 공부했다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>프로젝트 제작 속도를 좀 올려야겠다.</li>\n<li>알고리즘 문제도 꾸준히 풀어야겠다..</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 29, 2021","title":"2021-01-29 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-29-TIL49/"}}},{"node":{"id":"79b303c8-bb5a-588f-af1d-d12d00cc4aa9","excerpt":"Facts 회원가입이 완료되면 몽고디비 장바구니, 구매 목록 컬렉션에 해당 아이디에 맞는 배열이 생성되도록 구현했다. 웹을 지탱하는 기술 책을 읽었다. Feelings 데이터베이스 다 구현하고, 레디스도 붙여야 하는데 시간을 좀 내야 된다는 것을 느꼈다. Findings 몽고디비 Document 업데이트 메소드에 대해서 공부했다. Future Action…","html":"<h2>Facts</h2>\n<ul>\n<li>회원가입이 완료되면 몽고디비 장바구니, 구매 목록 컬렉션에 해당 아이디에 맞는 배열이 생성되도록 구현했다.</li>\n<li>웹을 지탱하는 기술 책을 읽었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>데이터베이스 다 구현하고, 레디스도 붙여야 하는데 시간을 좀 내야 된다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>몽고디비 Document 업데이트 메소드에 대해서 공부했다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>최대한 구현할 수 있는 기능을 구현하고 넘어가야겠다.</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 28, 2021","title":"2021-01-28 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-28-TIL48/"}}},{"node":{"id":"1b7e5bda-0469-5f1e-a0b2-5ffca1f1af7a","excerpt":"Facts 상품을 추가하고, id에 맞는 상품의 정보를 가져오는 것을 구현했다. 로그인 정보를 데이터베이스에서 받아오도록 했다. 데이터베이스를 이용하여 회원가입을 이용했다. Feelings 확실히 하나하나 차근차근 진행하니 목표가 확실해지고, 정확하게 해결해야 하는 문제를 해결할 수 있었다는 것을 느꼈다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>상품을 추가하고, id에 맞는 상품의 정보를 가져오는 것을 구현했다.</li>\n<li>로그인 정보를 데이터베이스에서 받아오도록 했다.</li>\n<li>데이터베이스를 이용하여 회원가입을 이용했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>확실히 하나하나 차근차근 진행하니 목표가 확실해지고, 정확하게 해결해야 하는 문제를 해결할 수 있었다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>데이터베이스를 처음 연결해 보았는데 몽고디비가 정말 사용하기에는 편하다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>삽질을 즐길 것이다.</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 27, 2021","title":"2021-01-27 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-27-TIL47/"}}},{"node":{"id":"96f2ea08-65ae-5c57-8f84-44b785a75451","excerpt":"Facts 설날동안 김정환님 블로그를 보면서 웹팩,바벨의 중요성을 알았다.","html":"<h2>Facts</h2>\n<ul>\n<li>설날동안 김정환님 블로그를 보면서 웹팩,바벨의 중요성을 알았다.</li>\n</ul>","frontmatter":{"date":"January 24, 2021","title":"2021-01-24 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-24-TIL46/"}}},{"node":{"id":"c584783d-164c-59cd-a29c-44dee76bbcab","excerpt":"Facts 어제 못 끝낸 로그인 기능을 마저 분리했다. 몽고디비의 장점 중 하나가 스키마다. 오늘은 상품 스키마를 들어서 스키마에 맞는 데이터를 조회하고, 수정하고, 삭제할 수 있도록 구현했다. 데이터베이스에서 상품을 가져와서 출력해주는 기능을 구현했다. 서버에서 데이터를 받아올 때 프로미스 형태로 오는 걸 깜빡하고 시간을 살짝 낭비했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>어제 못 끝낸 로그인 기능을 마저 분리했다.</li>\n<li>몽고디비의 장점 중 하나가 스키마다. 오늘은 상품 스키마를 들어서 스키마에 맞는 데이터를 조회하고, 수정하고, 삭제할 수 있도록 구현했다.</li>\n<li>데이터베이스에서 상품을 가져와서 출력해주는 기능을 구현했다.</li>\n<li>서버에서 데이터를 받아올 때 프로미스 형태로 오는 걸 깜빡하고 시간을 살짝 낭비했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>처음부터 단계별로 진행해야 무리 없이 진행한다는 것을 알았다. 그전에 단계를 건너뛰고 하려다가 시작도 못할뻔했다.</li>\n<li>TDD를 연습해야겠다고 느꼈다..</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>몽고디비가 스키마를 도입한 이유는 몽고디비에는 데이터가 어떤 식으로 들어가도 에러가 발생하지 않는다. 하지만 이것이 문제다. 실수로 ’,‘가 들어가도 몽고디비는 에러를 발생시키지 않는다. 이런 문제를 막기 위해 몽고디비는 정해진 규칙에 맞춰서 데이터를 넣을 수 있도록 스키마를 도입했다.</li>\n<li>몽고디비 스키마 사용법, 데이터베이스에서 원하는 데이터를 가져오는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>이제부터는 공부뿐이야.. - 이지존</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 23, 2021","title":"2021-01-23 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-23-TIL45/"}}},{"node":{"id":"98fedceb-2eff-52b4-9255-a8917f239b34","excerpt":"Facts 데이터베이스와 연결하기 위해서 store에 있는 기능을 service와 repository로 분리했습니다. “웹을 지탱하는 기술” 책에서 JSON에 대한 정보를 다시 공부했다. Feelings 처음부터 데이터베이스에 있는 데이터를 가져와서 바로 기능을 적용하려다가 너무 꼬였다는 것을 느꼈다. 현재까지도 JSON…","html":"<h2>Facts</h2>\n<ul>\n<li>데이터베이스와 연결하기 위해서 store에 있는 기능을 service와 repository로 분리했습니다.</li>\n<li>“웹을 지탱하는 기술” 책에서 JSON에 대한 정보를 다시 공부했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>처음부터 데이터베이스에 있는 데이터를 가져와서 바로 기능을 적용하려다가 너무 꼬였다는 것을 느꼈다.</li>\n<li>현재까지도 JSON을 쓰는 이유는 심플하기 때문이라는 것을 보고 모든 것은 심플함이 가장 중요하다는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>일단 간단하게 store에 저장된 데이터를 이용해서 분리하는 것부터 시작하는 것처럼 밑 단계부터 차례대로 해야 문제없이 구현할 수 있다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ul>\n<li>기존의 store을 이용해서 기능 분리를 한 다음 그 후에 데이터베이스를 연결해야겠다.</li>\n</ul>\n<h2>Feedback</h2>","frontmatter":{"date":"January 22, 2021","title":"2021-01-22 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-22-TIL44/"}}},{"node":{"id":"c3076598-18cb-5ff7-9d72-40b02544dede","excerpt":"Facts 프로젝트에 몽구스로 몽고디비를 연결했다. mongoDB 포트를 연결했다. 해당 데이터베이스 컬렉션에 상품 아이템들을 넣었다. Feelings 선택과 집중을 못 해서 나중에 해도 되는 것들에게 시간을 허비한 것 같다. 그래도 어제보다는 Docker 사용하는 것이 익숙해진 것 같다. Findings mongoDB…","html":"<h2>Facts</h2>\n<ul>\n<li>프로젝트에 몽구스로 몽고디비를 연결했다.</li>\n<li>mongoDB 포트를 연결했다.</li>\n<li>해당 데이터베이스 컬렉션에 상품 아이템들을 넣었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>선택과 집중을 못 해서 나중에 해도 되는 것들에게 시간을 허비한 것 같다.</li>\n<li>그래도 어제보다는 Docker 사용하는 것이 익숙해진 것 같다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>mongoDB에 데이터를 넣고 삭제하는 방법을 알았다.</li>\n<li>포트를 연결하는 방법을 알았고, 다양한 명령어를 정리해놓았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ol>\n<li>앞으로 도커를 많이 쓸 일이 많기 때문에 한번 제대로 할 때 열심히 해야겠다.</li>\n<li>지금 필요한 것만 챙기고 지금 필요 없다고 생각되는 것들은 일단 미뤄두자.</li>\n</ol>\n<h2>Feedback</h2>","frontmatter":{"date":"January 21, 2021","title":"2021-01-21 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-21-TIL43/"}}},{"node":{"id":"1a3a1b72-cfe8-5dd7-a8e4-cd31b842414a","excerpt":"Facts Docker에 대해서 공부했다. Docker의 명령어를 정리했다. Docker의 튜토리얼을 진행했고, 이미지를 만드는 것과 배포하는 방법을 알아보았다. Feelings 뭐든지 쉬운 게 없다는 걸 느낀다. 누구나 쳐맞기 전에는 그럴싸한 계획을 가지고 있다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>Docker에 대해서 공부했다.</li>\n<li>Docker의 명령어를 정리했다.</li>\n<li>Docker의 튜토리얼을 진행했고, 이미지를 만드는 것과 배포하는 방법을 알아보았다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>뭐든지 쉬운 게 없다는 걸 느낀다.</li>\n<li>누구나 쳐맞기 전에는 그럴싸한 계획을 가지고 있다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>도커가 왜 많이 쓰이는지 알게 되었다.</li>\n<li>도커파일이 어떤 역할을 하는지 알게 되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ol>\n<li>도커는 나중에도 꼭 필요한 도구다. 꾸준히 공부해야겠다.</li>\n<li>앞으로 어떤 것을 공부할 때 꼭 기록하면서 정리할 것이다.</li>\n</ol>\n<h2>Feedback</h2>","frontmatter":{"date":"January 20, 2021","title":"2021-01-20 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-20-TIL42/"}}},{"node":{"id":"9f881d9f-3cc2-5cd6-aef0-8ca64b99af38","excerpt":"Facts catWeb 프로젝트의 라우터를 분리했다. esLint와 prettier를 사용해서 코드를 정리하는 작업을 했다. 아직 다 못했다. 마이크로 프로텍트 채용 설명회를 다녀왔다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>catWeb 프로젝트의 라우터를 분리했다.</li>\n<li>esLint와 prettier를 사용해서 코드를 정리하는 작업을 했다. 아직 다 못했다.</li>\n<li>마이크로 프로텍트 채용 설명회를 다녀왔다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>라우터를 분리해놓으니까 훨씬 관리하기 편한 느낌을 받았다.</li>\n<li>밀린 정리를 하면서 코드를 작성하고 바로바로 정리하는 게 중요하다는 것을 느꼈다.</li>\n<li>아샬님이 하신 말씀 중에 “함께 성장하기”라는 말이 정말 와닿았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>미루고 미루다 보면 폭탄이 되어서 돌아온다..</li>\n<li>회사에서 인재를 채용할 때 회사에서 지향하는 업무 스타일과 내가 지향하는 스타일이 같은가를 많이 본다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ol>\n<li>정리를 제때제때 하자!!!</li>\n<li>커밋을 1일 1회 꼭 하자 (사실 오늘 깜빡하고 12시 이후에 올렸다..)</li>\n<li>매일매일 지식을 공유하고 함께 성장하자!</li>\n</ol>\n<h2>Feedback</h2>","frontmatter":{"date":"January 17, 2021","title":"2021-01-17 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-17-TIL41/"}}},{"node":{"id":"37057d06-018c-5924-889b-3ee798a6d428","excerpt":"Facts 라우터를 분리하는 코드를 따라치면서 어느 구조로 흘러가는지 이해했다. 내 프로젝트에 index.js에 있는 라우터를 분리하는 작업을 했다. 많이 어려운 부분이 있었다. 기능적인 부분은 routes 폴더에 나눴지만 나누기만 했을 뿐 프로젝트에 적용은 시키지 못했다. Feelings 오늘 우아한 형제들 이종립 님의 SI…","html":"<h2>Facts</h2>\n<ul>\n<li>라우터를 분리하는 코드를 따라치면서 어느 구조로 흘러가는지 이해했다.</li>\n<li>내 프로젝트에 index.js에 있는 라우터를 분리하는 작업을 했다.</li>\n<li>많이 어려운 부분이 있었다. 기능적인 부분은 routes 폴더에 나눴지만 나누기만 했을 뿐 프로젝트에 적용은 시키지 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘 우아한 형제들 이종립 님의 SI 탈출 일지를 읽으면서 시간 활용을 정말 잘해야겠다는 생각이 들었다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>이종립님의 글을 읽으면서 나와 비교했는데 내가 정말 시간 활용을 못하고 있다는 것을 알았다.</li>\n<li>아무리 간단한 예제도 무조건 코드를 타이핑하고 넘어가는 게 중요하다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<ol>\n<li>지하철에서는 음악을 듣거나 유튜브를 보는 것보단 간단하게 읽을 수 있는 전공 관련 지식들을 틈틈이 읽도록 하겠다.</li>\n<li>일주일에 최소 60페이지의 책을 읽도록 하겠다.</li>\n<li>아무리 이해했다고 생각하는 예제라도 꼭 타이핑 치면서 훈련하도록 하겠다.</li>\n</ol>\n<h2>Feedback</h2>","frontmatter":{"date":"January 16, 2021","title":"2021-01-16 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-16-TIL40/"}}},{"node":{"id":"49748bdc-90b9-50bd-98c2-910057dc42fa","excerpt":"Facts 모던 웹 프론트엔드 개발환경 세미나에서 좋은 강의를 듣고 즐거운 시간을 보냈다. 학점 은행제 신청을했다. 코딩도장에서 알고리즘 문제를 거의다 풀었는데. 제출을 못했다. Feelings 오늘 프론트엔트 세미나를 들으면서 더 열심히 해야겠다는 느낌을 받았다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>모던 웹 프론트엔드 개발환경 세미나에서 좋은 강의를 듣고 즐거운 시간을 보냈다.</li>\n<li>학점 은행제 신청을했다.</li>\n<li>코딩도장에서 알고리즘 문제를 거의다 풀었는데. 제출을 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>오늘 프론트엔트 세미나를 들으면서 더 열심히 해야겠다는 느낌을 받았다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>오늘 세미나를 듣고 강사분의 수업을 들으면서 잘하는 분들은 다 기초가 탄탄하다는 것을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<p>이번 주말에 세미나에서 했던 실습을 복습하고 리팩토링을 해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 15, 2021","title":"2021-01-15 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-15-TIL39/"}}},{"node":{"id":"dbb4f392-390f-5bfa-b45d-34b6f0824a72","excerpt":"Facts 로그인 부분을 로컬 스토리지를 같이 사용해서 더 확실하게 구현했다. 사용자별로 장바구니, 구매 페이지를 볼 수 있게 구현했다. 프로젝트의 규모가 커질수록 라우터의 규모도 커지고 그러면 나눠야 한다는 사실을 알았다. 리눅스 운영체제를 설치했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>로그인 부분을 로컬 스토리지를 같이 사용해서 더 확실하게 구현했다.</li>\n<li>사용자별로 장바구니, 구매 페이지를 볼 수 있게 구현했다.</li>\n<li>프로젝트의 규모가 커질수록 라우터의 규모도 커지고 그러면 나눠야 한다는 사실을 알았다.</li>\n<li>리눅스 운영체제를 설치했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>프로젝트 규모가 점점 커지면서 코드 분리의 중요성을 느꼈다.</li>\n<li>리눅스를 사용하기 전엔 어려울 것이라 생각했는데 막상 사용해보니 할만하는 것을 느꼈다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>코드의 규모가 커질수록 정리가 시급하다. 규모가 작을 때는 전혀 느끼지 못했는데 이제 진짜 알게 되었다.</li>\n<li>토큰 방식 인증 기능을 알게 되었다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<p>앞으로 코드 정리, 분리에 신경을 쓰면서 코드를 작성해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 14, 2021","title":"2021-01-14 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-14-TIL38/"}}},{"node":{"id":"cd845efb-8ba2-54ca-a0c5-8035661b0193","excerpt":"Facts 장바구니 체크박스 삭제 기능을 구현했다. 아이템 디테일 화면에서 구매하기를 누르면 해당 아이템이 구매 목록에 쌓이도록 구현했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 체크박스 삭제 기능을 구현했다.</li>\n<li>아이템 디테일 화면에서 구매하기를 누르면 해당 아이템이 구매 목록에 쌓이도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>프로젝트의 규모가 커지면서 기능 하나하나를 추가하는 것이 처음 기능을 추가할 때보다 손이 많이 가고 시간도 더 오래 걸리는 느낌이 들었다. 그러면서 속도를 올리려고 하다 보니 리팩토링을 못하는 경우가 많아진 것 같다.</p>\n<h2>Findings</h2>\n<ul>\n<li>알고리즘 1레벨 문제를 풀고 너무 자만감에 심취해 있었던 것 같다. 오늘 2레벨 문제를 풀고 더 열심히 해야 된다는 것을 알았다.</li>\n<li>체크 박스를 체크했을 때 로딩 시간이 0.2초 정도 걸리는 것을 보고 로직이 복잡하다는 것을 알았다. 왜 코드 중복을 없애고, 로직을 단순하게 가져가야 하는지 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<p>기능을 다 구현하고 내가 작성한 코드의 중복을 없애고, 더 효율적으로 단순하게 코드를 리팩토링해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 10, 2021","title":"2021-01-10 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-10-TIL37/"}}},{"node":{"id":"576c8c32-1e83-598a-b442-4eed906797c3","excerpt":"Facts 장바구니 선택 삭제 기능을 구현했다. 장바구니 아이템 개수, 가격, 총 가격 출력 기능을 구현했다. Feelings 오늘 감기에 걸려서 몸 상태가 안 좋았는데 그래도 작은 기능이지만 구현을 성공한 거 같다. 예전에 작성한 코드를 수정하느라 시간이 좀 걸린 부분이 있었다. 항상 코드를 짤 때 정리의 필요성을 느꼈다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>장바구니 선택 삭제 기능을 구현했다.</li>\n<li>장바구니 아이템 개수, 가격, 총 가격 출력 기능을 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>오늘 감기에 걸려서 몸 상태가 안 좋았는데 그래도 작은 기능이지만 구현을 성공한 거 같다. 예전에 작성한 코드를 수정하느라 시간이 좀 걸린 부분이 있었다. 항상 코드를 짤 때 정리의 필요성을 느꼈다.</p>\n<h2>Findings</h2>\n<ul>\n<li>배열에 있는 객체의 중복을 제거하는 방법을 알았다.</li>\n</ul>\n<h2>Future Action Plan</h2>\n<p>기능을 작성하고 정리하는 시간을 가져야겠다. 너무 속도는 내는 데에 집중한 것 같다. 앞으로는 리팩토링 하는 시간을 꼭 가져야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 09, 2021","title":"2021-01-09 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-09-TIL36/"}}},{"node":{"id":"ffe40eb4-a763-5f84-9661-ea85c1292f2e","excerpt":"Facts 오늘 코딩도장에서 스택/큐 문제를 풀었다. 장바구니 아이템 선택삭제 기능을 구현했다. Feelings 코딩 도장을 하면서, 처음 세운 계획을 진행하다 막힌 점이 있었는데, 막혔을 때 다시 계획을 세우고 진행했어야 하는데 그러지 못했다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘 코딩도장에서 스택/큐 문제를 풀었다.</li>\n<li>장바구니 아이템 선택삭제 기능을 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>코딩 도장을 하면서, 처음 세운 계획을 진행하다 막힌 점이 있었는데, 막혔을 때 다시 계획을 세우고 진행했어야 하는데 그러지 못했다.</p>\n<h2>Findings</h2>\n<p>코딩 도장을 하면서 협력이 얼마나 중요한지 깨달았다. 서로 다른 길로 가려고 하니 팀플이 맞지 않아 충분히 풀 수 있었던 문제임에도 불구하고 풀지 못했다.</p>\n<h2>Future Action Plan</h2>\n<p>앞으로는 협력에서 문제를 해결할 때 서로의 의견을 바로 코드로 작성하지 말고 서로 협력하면서 문제 해결을 위한 계획을 세운 뒤에 접근하도록 해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 08, 2021","title":"2021-01-08 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-08-TIL35/"}}},{"node":{"id":"2a14cd0d-205a-5b3d-990e-a06d13b8d68a","excerpt":"Facts 아이디 별로 장바구니 출력 기능을 구현했다. 장바구니 전체 삭제 기능을 구현했다. 장바구니 선택 삭제, 체크박스 기능을 다 구현하지 못했다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>아이디 별로 장바구니 출력 기능을 구현했다.</li>\n<li>장바구니 전체 삭제 기능을 구현했다.</li>\n<li>장바구니 선택 삭제, 체크박스 기능을 다 구현하지 못했다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>아주 작은 실수 때문에 시간을 오래 잡아먹은 부분이 있는 거 같다. 해결은 했지만 작은 실수 하나가 정말 크다는 것을 느꼈다. 오늘은 또 학교 때문에 스트레스를 너무 받았다. 스트레스 관리가 아주 중요한 거 같다.</p>\n<h2>Findings</h2>\n<p>에러가 발생하면 감으로 때려 맞추지 말고, 맨 아래서부터 차례대로 원인을 파악하면서 해결하면 된다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>점점 갈수록 실수는 줄어드는 것 같지만 계속 어느 하나가 빠지는 기분이다. 코드를 짤 때 더 신중하게 짤 수 있도록 노력해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 07, 2021","title":"2021-01-07 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-07-TIL34/"}}},{"node":{"id":"839d43ab-36a4-57e7-85a8-fa48ac116565","excerpt":"Facts 오늘은 아주 적은 시간이지만 알고리즘 문제를 복습했다. Feelings 확실히 그 전보다 푸는 속도가 빨라졌다는걸 느꼈다. Findings 하지만 더 열심히 해야한다는 것을 알았다. Future Action Plan 나는 매일 똑같이 반복적으로 알고리즘 문제를 풀고 복습할 것이다. Feedback","html":"<h2>Facts</h2>\n<p>오늘은 아주 적은 시간이지만 알고리즘 문제를 복습했다.</p>\n<h2>Feelings</h2>\n<p>확실히 그 전보다 푸는 속도가 빨라졌다는걸 느꼈다.</p>\n<h2>Findings</h2>\n<p>하지만 더 열심히 해야한다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>나는 매일 똑같이 반복적으로 알고리즘 문제를 풀고 복습할 것이다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 06, 2021","title":"2021-01-06 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-06-TIL33/"}}},{"node":{"id":"85739157-ff44-53af-9a71-02b0792b7c09","excerpt":"Facts 아침에 간단하게 어제 풀었던 알고리즘 문제를 복습하고, 웹에서는 브라우저와 서버 간에 데이터를 주고받기 위한 방식으로 HTTP 프로토콜을 사용하는데, HTTP 프로토콜로 데이터를 주고받기 위해서는 요청을 보냈을때 무조건 응답을 받아야 한다는 것을 알았다. 오늘 처음으로 코딩 테스트에서 문제를 시간 내에 풀었다. Feelings…","html":"<h2>Facts</h2>\n<ul>\n<li>아침에 간단하게 어제 풀었던 알고리즘 문제를 복습하고,</li>\n<li>웹에서는 브라우저와 서버 간에 데이터를 주고받기 위한 방식으로 HTTP 프로토콜을 사용하는데, HTTP 프로토콜로 데이터를 주고받기 위해서는 요청을 보냈을때 무조건 응답을 받아야 한다는 것을 알았다.</li>\n<li>오늘 처음으로 코딩 테스트에서 문제를 시간 내에 풀었다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>어떤 공부를 할 때에 차근차근 공부를 하고, 항상 뭐 때문에 나온 것인가를 생각해야겠다고 느꼈다.</p>\n<h2>Findings</h2>\n<p>앞으로는 어떤 것을 공부할 때 체계적으로 남에게 설명해줘야 하는 목표를 가지고 공부해야겠다.</p>\n<h2>Future Action Plan</h2>\n<p>하루하루 꾸준히, 체계적으로 공부해야겠다. 내가 이해했다고 생각하는 게 남에게 설명하지 못하면 이해한 게 아니므로, 이제부터 남에게 설명할 수 있다고 가정할 때까지 공부해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 03, 2021","title":"2021-01-03 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-03-TIL32/"}}},{"node":{"id":"06512db9-80ed-51b6-9acb-2b19412b3a2d","excerpt":"Facts 오늘 오전에 알고리즘 최소공배수 최대공약수 문제를 복습했다. git training 강의를 듣고 실습했다. 아이템이 사용자의 장바구니에 담기도록 구현했다. 하지만 담는 과정에서 에러가 발생했다. Feelings 코드를 보면 너무 대충 짠 느낌이 많이 들었다. 뒤 돌아보면서 왜 더 신경을 못썼나 하고 후회가 많이 된다. Findings…","html":"<h2>Facts</h2>\n<ul>\n<li>오늘 오전에 알고리즘 최소공배수 최대공약수 문제를 복습했다.</li>\n<li>git training 강의를 듣고 실습했다.</li>\n<li>아이템이 사용자의 장바구니에 담기도록 구현했다. 하지만 담는 과정에서 에러가 발생했다.</li>\n</ul>\n<h2>Feelings</h2>\n<p>코드를 보면 너무 대충 짠 느낌이 많이 들었다. 뒤 돌아보면서 왜 더 신경을 못썼나 하고 후회가 많이 된다.</p>\n<h2>Findings</h2>\n<p>내 스스로가 속도를 낼려고 코드를 너무 정리하지 않은 것 같다. 또 안일하게 공부하는 나를 발견했다.</p>\n<h2>Future Action Plan</h2>\n<p>여태 나가 작성한 코드를 정리하는 시간을 가지고, 앞으로 코드를 신경써서 작성해야겠다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 02, 2021","title":"2021-01-02 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-02-TIL31/"}}},{"node":{"id":"64014bc5-e2fb-5c5e-8e54-2fce30820a8c","excerpt":"Facts 오늘 회원가입 기능을 간단하게 구현하고, 짝 프로그래밍으로 최소공배수, 최대공약수 구하는 문제를 풀었다. Feelings 테스트 코드를 작성을 안 하고 문제를 풀었더니, 에러가 발생했을 때 어디서부터 잘못된 건지 모르기 때문에 에러를 해결하는 게 쉽지 않았다. 테스트 코드의 중요성을 깨달았다. Findings…","html":"<h2>Facts</h2>\n<p>오늘 회원가입 기능을 간단하게 구현하고, 짝 프로그래밍으로 최소공배수, 최대공약수 구하는 문제를 풀었다.</p>\n<h2>Feelings</h2>\n<p>테스트 코드를 작성을 안 하고 문제를 풀었더니, 에러가 발생했을 때 어디서부터 잘못된 건지 모르기 때문에 에러를 해결하는 게 쉽지 않았다. 테스트 코드의 중요성을 깨달았다.</p>\n<h2>Findings</h2>\n<p>내가 문제를 풀 때 문제를 작게 나누는 연습이 부족하다는 것을 알았다.</p>\n<h2>Future Action Plan</h2>\n<p>앞으로 문제를 해결할 때 작게 나누고 문제를 접근할 것이다.</p>\n<h2>Feedback</h2>","frontmatter":{"date":"January 01, 2021","title":"2021-01-01 TIL","tag":["TIL"]},"fields":{"slug":"/2020-01-01-TIL30/"}}},{"node":{"id":"fde2d664-f596-5e51-b83e-51db177e84d9","excerpt":"About Me Thanks for visiting my blog. 적을예정","html":"<h2>About Me</h2>\n<p>Thanks for visiting my blog. 적을예정</p>","frontmatter":{"date":"February 02, 2020","title":"about","tag":null},"fields":{"slug":"/resume/"}}}]}},"pageContext":{}},"staticQueryHashes":["3668704128"]}