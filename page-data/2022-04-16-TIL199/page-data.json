{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-04-16-TIL199/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 2렙 행렬 테두리 회전하기 문제 풀기</li>\n<li>프로그래머스 2렙 거리두기 확인하기 문제 풀기</li>\n<li>면접 스터디 참여하기</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>역시 주말엔 알고리즘 공부</li>\n<li>내가 생각하는 것들을 말로 나타내기 위해선 훈련이 필요하다. 그래서 스터디로 훈련중..ㅎ</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>react hooks api는 어떤 문제를 해결하기 위해서 나온 건가? 예를 들자면 기존의 클래스 컴포넌트에서 컴포넌트에 상태를 지정하기 위해서 constructor을 사용해서 안에 this로 바인딩 하는 방법을 사용했는데, 기존의 함수형 컴포넌트에서는 상태라는 것 없이 props로 받아온 데이터를 사용하는 방법을 사용했다. 그로 인해서 props에만 의존하게 되고, 클래스 컴포넌트에 비해서 차이점을 느낄 수 있었다. 결국 함수형 컴포넌트에서 기존의 클래스 컴포넌트에 사용하던 생명주기 메서드를 사용할 수 있도록 나온 게 react hooks api다.</li>\n<li>기본적으로 리액트는 부모 컴포넌트에서 자식 컴포넌트로 흐르는 단방향 바인딩이다.</li>\n</ul>\n<h2>Future Action</h2>\n<ul>\n<li>면접 스터디를 하면서 느낀 건데, 만약 어떤 문제에서 여러 가지의 답이 존재하는데, 내 답이 무조건 맞는다고 주장하는 행동은 지양하는 게 좋을 것 같다.</li>\n</ul>","frontmatter":{"title":"2022-04-16 TIL","date":"April 16, 2022"},"id":"151cac0e-9e72-59a5-8cb6-0facb3c0a2a9"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-04-16-TIL199/","previous":{"fields":{"slug":"/2022-04-15-TIL198/"},"frontmatter":{"title":"2022-04-15 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2019-11-18-TIL1/"},"frontmatter":{"title":"2019-11-18 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}