{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-02-23-숫자 문자열과 영단어/","result":{"data":{"markdownRemark":{"html":"<h2>숫자 문자열과 영단어</h2>\n<h3>이해</h3>\n<p>숫자 문자열과 영단어\n네오와 프로도가 숫자놀이를 하고 있습니다. 네오가 프로도에게\n숫자를 건넬 때 일부 자릿수를 영단어로 바꾼 카드를 건네주면 프로도는\n원래 숫자를 찾는 게임입니다.</p>\n<p>다음은 숫자의 일부 자릿수를 영단어로 바꾸는 예시입니다.</p>\n<ul>\n<li>1478 -> one4seveneight</li>\n<li>234567 -> 23four5six7</li>\n<li>10203 -> 1zerotwozero3</li>\n</ul>\n<h3>계획</h3>\n<p>결과 배열과 임시 배열을 하나 생성하고 s배열을 첫번쨰부터 지나가면서\n숫자면 그냥 결과배열에 넣고 아니면 임시배열에 넣는다.\n넣으면서 만약 임시배열 값이 changeArr값에 있으면 value값에 맞는\nkey 값을 결과배열에 넣고 임시배열을 초기화한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">numberStringWords</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">s</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> changeArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">5</span><span class=\"token operator\">:</span> <span class=\"token string\">'five'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">6</span><span class=\"token operator\">:</span> <span class=\"token string\">'six'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">7</span><span class=\"token operator\">:</span> <span class=\"token string\">'seven'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">8</span><span class=\"token operator\">:</span> <span class=\"token string\">'eight'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">9</span><span class=\"token operator\">:</span> <span class=\"token string\">'nine'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span> tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  s<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    tmp<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>changeArr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">key</span> <span class=\"token operator\">=></span> changeArr<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> tmp<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span>\n      tmp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">'numberStringWords'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token function\">numberStringWords</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one4seveneight'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBe</span><span class=\"token punctuation\">(</span><span class=\"token number\">1478</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"숫자 문자열과 영단어 문제","date":"February 22, 2022"},"id":"0bf99ae8-5ed4-57ba-90a6-2b1d4eba62ce"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-02-23-숫자 문자열과 영단어/","previous":{"fields":{"slug":"/2022-02-21-신고 결과 받기 문제/"},"frontmatter":{"title":"신고 결과 받기 문제","tag":["TDD"],"layout":null}},"next":{"fields":{"slug":"/2022-02-18-다음 큰 숫자/"},"frontmatter":{"title":"프로그래머스 다음 큰 숫자 문제","tag":["TDD"],"layout":null}}}},"staticQueryHashes":["3668704128"]}