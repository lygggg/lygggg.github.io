{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-04-07-TIL193/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>퀴즈를 추가하기, 추가한 문제를 가져오기, 소장한 문제를 가져올때, 가장 최근에 생성한 퀴즈순서대로 가져오도록 구현했다.</li>\n<li>E2E 테스트 전체적인 리펙토링</li>\n<li>Cypress에서 URL을 환경변수로 만들어서 사용하려고 했는데, 일반적인 방법으로는 사용을 못해서 아래와 같은 방법을 사용했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>E2E 테스트 상당히 중독성있다… E2E테스트가 끝나면 단위테스트도 도전해봐야겠다.</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>Cypress에서 env를 사용하려고했는데, 일반적인 방법으로는 환경변수를 가져올수 없다… 그래서 아래와 같은 방법을 사용했다.</li>\n</ul>\n<p>맨 바깥쪽 폴더에 cypress.json 파일을 만들고</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"env\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"api\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://placeholder.com\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncypress<span class=\"token punctuation\">.</span>json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>아래와 같이 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\">Cypress<span class=\"token punctuation\">.</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// https://placeholder.com</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>E2E 테스트를 작성하다가 피드백을 받은게 있는데, 아래는 내가 기존에 작성했던 코드다. E2E 테스트가 익숙하지 않아서 그랬는지 모르겠는데 이런식으로 코드를 작성하는 것 보단 선언형으로 어떤 의미를 가지는 코드인지 명시해주는게 더 가독성이 좋을것 같다고 조언을 받았다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'로그인 버튼을 클릭하면 로그인 페이지로 가야 함'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  loginPageButton<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">location</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pathname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">loc</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>아래처럼 리펙토링 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'로그인 버튼을 클릭하면 로그인 페이지로 가야 함'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> loginPageButton <span class=\"token operator\">=</span> cy<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.login'</span><span class=\"token punctuation\">)</span>\n  loginPageButton<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">location</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pathname'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">loc</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>loc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Future Action</h2>\n<ul>\n<li>배포하기</li>\n<li>단위 테스트 시도해보기</li>\n<li>꾸준히 TIL 적기</li>\n</ul>","frontmatter":{"title":"2022-04-07 TIL","date":"April 07, 2022"},"id":"0f1e9401-382c-57c9-803f-4e471bfcd530"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-04-07-TIL193/","previous":{"fields":{"slug":"/2022-04-06-TIL192/"},"frontmatter":{"title":"2022-04-06 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2022-04-08-TIL194/"},"frontmatter":{"title":"2022-04-08 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}