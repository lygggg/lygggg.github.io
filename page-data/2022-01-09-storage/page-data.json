{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-01-09-storage/","result":{"data":{"markdownRemark":{"html":"<p>마침 사이드 프로젝트에 장바구니를 구현하려다, 웹스토리지(localStorage, sessionStorage)를 이참에 블로그에 정리해보면 어떨까? 생각하고 이 글을 적게되었습니다.</p>\n<p>간단하게 웹 스토리지에 대해 간단하게 알아본다면 일단 로컬 스토리지, 세션 스토리지는 클라이언트, 즉 브라우저상에 데이터를 저장하는 기술입니다. 두가지의 차이점을 알아보면</p>\n<h2>로컬 스토리지 세션 스토리지</h2>\n<p>일단 공통점은 브라우저에 저장합니다. 이 두개의 차이점은 데이터의 보존이 얼마나 오래 가능한가? 에서 차이점을 보입니다. 로컬 스토리지는 웹페이지의 세션이 끝나도 데이터가 지워지지 않는 반면에, 세션 스토리지는 세션이 끝나면 저장된 데이터가 소멸합니다.</p>\n<p>즉 브라우저에서 여러개의 탭이나 창을 띄우면 여러 개의 세션스토리지에 데이터가 따로 저장되며, 각 탭이나 창이 닫힐때 데이터가 소멸합니다.</p>\n<p>반면 로컬 스토리지는 반대로 여러개의 탭이나 창을 띄워도 데이터가 공유되며, 닫아도 소멸되지않고, 데이터가 브라우저에 그대로 남아있습니다.</p>\n<p>이 포스트는 구현이 목적이니, 간단하게 사용법을 알아보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\"><span class=\"token comment\">// 키에 데이터 넣기</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 키로부터 데이터 읽기</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 키로부터 데이터 삭제</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 모든 키의 데이터 삭제</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 저장된 키/값 쌍의 개수</span>\nlocalStorage<span class=\"token punctuation\">.</span>length</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>주의사항</h2>\n<p>웹 스토리지를 사용할 때 주의사항이 있습니다. 이부분은 저도 처음 사용할때 이 문제때문에 혼동을 겪었던 부분이기도합니다.</p>\n<p>예를 들면, 숫자형 데이터나 Boolean같은 데이터를 저장하고 불러올때 조심해야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span>\n<span class=\"token comment\">// false</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// \"1\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이와 같이 웹 스토리지는 오직 문자형 데이터만 지원합니다.</p>\n<h2>해결방법</h2>\n<p>웹 스토리지를 사용할 때 위와 같은 문제를 피하기 위해 JSON 형태로 데이터를 읽고 쓰는게 가능합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>배열형 데이터를 로컬 스토리지에 저장하고 싶을땐 이런방법을 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nums'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nums'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [1, 2, 3]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>데이터 삭제</h2>\n<p>로컬 스토리지에 저장된 데이터는 웹페이지를 닫는다고 해서 사라지지 않으므로, 불필요한 데이터가 남지않도록 직접 청소를 해줘야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-tsx line-numbers\"><code class=\"language-tsx\">localStorage<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 5</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// num</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'obj'</span><span class=\"token punctuation\">)</span>\n\nlocalStorage<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 4</span>\nlocalStorage<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nlocalStorage<span class=\"token punctuation\">.</span>length\n<span class=\"token comment\">// 0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>웹 스토리지에 저장된 데이터를 직접 보려면 브라우저에서 F12를 누르신후 Application탭에 들어가시면 됩니다.</p>\n<p><a href=\"https://www.daleseo.com/js-web-storage/\">https://www.daleseo.com/js-web-storage/</a> 참고</p>","frontmatter":{"title":"[javaScript] 웹스토리지(localStorage, sessionStorage) 정리.","date":"January 09, 2022"},"id":"6a9f6357-d3f9-5bc2-a4b4-a9051e4a53da"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-01-09-storage/","previous":{"fields":{"slug":"/2020-06-10-javaCompare/"},"frontmatter":{"title":"[JAVA]Comparable과 Comparator","tag":["Posts"],"layout":null}},"next":{"fields":{"slug":"/2022-02-06-기초부터 완성까지 프론트엔드 1장 2장/"},"frontmatter":{"title":"[기초부터 완성까지 프론트엔드 1장 2장]","tag":["Posts"],"layout":null}}}},"staticQueryHashes":["3668704128"]}