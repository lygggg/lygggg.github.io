{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-03-15-TIL183/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>프로그래머스 3렙 베스트앨범 문제 풀기</li>\n<li>2022-03-15 useRef() 공부하고 포스팅</li>\n<li>퀴즈를 삭제하면 algolia quiz index 데이터도 삭제되도록 구현</li>\n<li>퀴즈 옵션 드롭다운 클릭 > 수정 클릭 > 퀴즈를 수정할 수 있는 모달이 나오도록 구현했는데, useRef를 사용해서 모달을 닫으면 드롭다운도 닫히도록 구현했다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>useRef를 공부해 보니 내 프로젝트에 사용해 볼 만한 부분이 많았다. 마침 공부하려는데, 공식 문서 말고도 좋은 블로그들이 많아서 큰 도움이 되었다.</li>\n<li><a href=\"https://minoo.medium.com/useref-%EA%B0%80-%EC%88%9C%EC%88%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%9C%EB%8B%A4%EB%8A%94-%EC%9D%98%EB%AF%B8%EB%A5%BC-%EA%B3%B1%EC%94%B9%EC%96%B4%EB%B3%B4%EA%B8%B0-8a0857fc5ebb\">useRef 꼭 읽어보세요</a></li>\n</ul>\n<h2>Findings</h2>\n<p>1.useRef() 는 일반적인 자바스크립트 객체입니다.</p>\n<p>2.매번 렌더링할 때 동일한 객체를 제공합니다.</p>\n<p>3.값이 변경되어도 리렌더링이 되지않습니다.</p>\n<p>즉 heap에 저장되어 있기 때문에 애플리케이션이 종료되거나 가비지 컬렉팅될 때까지, 참조할 때마다 같은 메모리 값을 가지고 있습니다. 그렇기 때문에 자바스크립트의 === 연산이 항상 true를 반환하기 때문에, 즉 변경사항을 감지할 수 없기 때문에 리렌더링을 하지 않는다는 뜻입니다.</p>\n<h2>Future Action</h2>\n<ul>\n<li>알고리즘, 한 달에 한 권 꼭 책 읽기</li>\n<li>사용하는 게 중요한 게 아니라 어떠한 문제를 해결해 주는지? 그리고 왜 사용하는지 아는 게 가장 중요하다.</li>\n<li>프로젝트에 RESTful API 고려하기</li>\n<li>useRef를 더 효율적으로 사용할 방법 생각해보기</li>\n</ul>","frontmatter":{"title":"2022-03-15 TIL","date":"March 15, 2022"},"id":"61bd161e-65a7-54b5-8272-582d97db1a04"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"lyg"}}}},"pageContext":{"slug":"/2022-03-15-TIL183/","previous":{"fields":{"slug":"/2022-03-14-TIL182/"},"frontmatter":{"title":"2022-03-14 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2019-11-18-TIL1/"},"frontmatter":{"title":"2019-11-18 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}