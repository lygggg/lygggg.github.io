{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-12-16-TIL141/","result":{"data":{"markdownRemark":{"html":"<h2>Fact</h2>\n<ul>\n<li>기존에 지킬 테마 블로그를 개츠비로 변경하고 기존에 있던 포스트들을 다 이동시켰다.</li>\n<li>로그인 로그아웃 페이지를 만들고 하드코딩을 했다.</li>\n<li>내 프로필 페이지를 만들었다.</li>\n</ul>\n<h2>Feelings</h2>\n<ul>\n<li>개츠비 find-answer 테마를 적용했는데, 가독성이 정말 좋은 것 같다. [강력추천]</li>\n</ul>\n<h2>Findings</h2>\n<ul>\n<li>useMemo는 특정 결과값을 재사용 할 때 사용하는 반면, useCallback은 특정 함수를 새로 만들지 않고 재사용하고 싶을때 사용한다.</li>\n<li>useCallback()은 함수를 메모제이션 하기 위해서 사용되는 hook함수이다. 첫번째 인자로 넘어온 함수를, 두번째 인자로 넘어온 배열 내의 값이 변경될 때 까지 저장해놓고 재사용할 수 있게 해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">const memoizedCallback = useCallback(함수, 배열);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>예를 들어, 어떤 React 컴포넌트 함수 안에 함수가 선언 되어 있다면, 이 함수는 해당 컴포넌트가 랜더링 될 때 마다 새로운 함수가 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">const add = () =&gt; x + y;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>하지만 useCallback() 을 사용하면, 해당 컴포넌트가 랜더링되더라도 함수가 의존하는 값들이 바뀌지 않는한 기존 함수를 계속해서 반환한다. 즉 x 또는 y값이 바뀌면 새로운 함수가 생성되어 add 변수에 할당되고, x와 y의 값이 동일하면 다음 렌더링될때 이 함수를 재사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">const add = useCallback(() =&gt; x + y, [x, y]);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>-</p>\n<h2>Future Action</h2>\n<ul>\n<li>서버사이드렌더링, 클라이언트 사이드 렌더링, 넥스트 동작원리 블로그 포스트정리</li>\n<li>이해가 안가는 정보가 있으면 직접 쳐보는 노력을 해야겠다.</li>\n<li>직접 쳐보는 연습을 하기위해 연습용 리액트 프로젝트를 만들어야겠다.</li>\n</ul>","frontmatter":{"title":"2021-12-16 TIL","date":"December 16, 2021"},"id":"b4f293bd-97c8-5e01-a4af-f6f816a2d205"},"site":{"siteMetadata":{"title":"YoungGyu Blog","siteUrl":"http://answer.netlify.app","comment":{"disqusShortName":"Your Disqus-short-name here"}}}},"pageContext":{"slug":"/2021-12-16-TIL141/","previous":{"fields":{"slug":"/2021-12-15-TIL140/"},"frontmatter":{"title":"2021-12-15 TIL","tag":["TIL"],"layout":null}},"next":{"fields":{"slug":"/2021-12-17-TIL142/"},"frontmatter":{"title":"2021-12-17 TIL","tag":["TIL"],"layout":null}}}},"staticQueryHashes":["3668704128"]}